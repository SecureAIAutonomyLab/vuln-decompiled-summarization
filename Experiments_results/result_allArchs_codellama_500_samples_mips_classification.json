{
    "decompcode": [
        "\nvoid func_6166e2bda57049ca\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412074)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_82573a79895e4dbe(puVar1);\n  func_037d89ab26d74032(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e2770a56ccab46f2(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400a74. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011b0,5);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_018181c008a9409b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined auStack_68 [84];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_70 = _UNK_00401508;\n  uStack_78 = _UNK_00401500;\n  uStack_74 = _UNK_00401504;\n  uStack_6c = _UNK_0040150c;\n  (*(code *)PTR_memset_00412080)(auStack_68,0,0x54);\n  if ((*(int *)PTR_globalFive_00412040 == 5) &&\n     (iVar2 = (*(code *)PTR_socket_0041206c)(2,2,6), iVar2 != -1)) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_00412064)(&UNK_004014c4);\n    uStack_88 = func_e6450fbe27f24795(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412060)(iVar2,&uStack_88,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_recv_0041205c)(iVar2,(int)&uStack_6c + 3,0x54,0);\n      if (1 < iVar3 + 1U) {\n        auStack_68[iVar3 + -1] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412058)(iVar2);\n  }\n  iVar2 = (*(code *)PTR_popen_00412074)(&uStack_78,&UNK_004014d0);\n  if (iVar2 != 0) {\n    (*(code *)PTR_pclose_00412050)();\n  }\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n    if (iVar2 == 0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400cf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_a5faa34a77224098(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_dc [100];\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar2 = (*(code *)PTR_strlen_0041206c)(auStack_78);\n  iVar3 = (*(code *)PTR___strncat_chk_00412054)(auStack_dc,auStack_78,uVar2,100);\n  func_e9f90283086f4337();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_a2c26d620e4b477b(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  uint uStack_18;\n  uint uStack_14;\n  uint uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_18 = 0;\n  iVar4 = func_7ea16e31f82249c2();\n  if (iVar4 == 0) {\n    uStack_18 = 0x14;\n  }\n  else {\n    (*(code *)PTR___isoc99_fscanf_00412090)\n              (*(undefined4 *)PTR_stdin_00412060,&UNK_00401b30,&uStack_18);\n  }\n  iVar4 = func_7ea16e31f82249c2();\n  if (iVar4 == 0) {\n    if ((uStack_18 < 6) || (99 < uStack_18)) {\n      func_232874dd6d014ed2(&UNK_00401b70);\n    }\n    else {\n      uStack_14 = (*(code *)PTR_malloc_00412070)(uStack_18);\n      uVar3 = _UNK_00401b34;\n      uVar1 = uStack_14 & 3;\n      *(uint *)(uStack_14 - uVar1) =\n           *(uint *)(uStack_14 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401b34 >> uVar1 * 8;\n      uVar1 = uStack_14 + 3 & 3;\n      puVar2 = (uint *)((uStack_14 + 3) - uVar1);\n      *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n      *(undefined *)(uStack_14 + 4) = UNK_00401b38;\n      *(undefined *)(uStack_14 + 5) = UNK_00401b39;\n      func_232874dd6d014ed2(uStack_14);\n      (*(code *)PTR_free_00412088)(uStack_14);\n    }\n  }\n  else if (uStack_18 < 6) {\n    func_232874dd6d014ed2(&UNK_00401b3c);\n  }\n  else {\n    uStack_10 = (*(code *)PTR_malloc_00412070)(uStack_18);\n    uVar3 = _UNK_00401b34;\n    uVar1 = uStack_10 & 3;\n    *(uint *)(uStack_10 - uVar1) =\n         *(uint *)(uStack_10 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401b34 >> uVar1 * 8;\n    uVar1 = uStack_10 + 3 & 3;\n    puVar2 = (uint *)((uStack_10 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    *(undefined *)(uStack_10 + 4) = UNK_00401b38;\n    *(undefined *)(uStack_10 + 5) = UNK_00401b39;\n    func_232874dd6d014ed2(uStack_10);\n    (*(code *)PTR_free_00412088)(uStack_10);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_d7d26bc622804abe(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *unaff_s1;\n  undefined auStack_b8 [56];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    unaff_s1 = auStack_b8;\n    auStack_b8[0] = 0;\n  }\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa4))(unaff_s1,uVar2);\n  func_0bf53f92caa349f7();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa0))();\n  if (unaff_s1 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ee126839142d46bc(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_malloc_00412070)(4);\n  func_de48a6b6313a424f(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_51bbf994520c4e71(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  if (**(int **)(puVar1 + -0x7fe0) == 5) {\n    puStack_78 = puStack_74 + -8;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7f9c))(puStack_78,auStack_70,100);\n  puStack_78[99] = 0;\n  func_2b88b6f521074ff1(puStack_78);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa0)) {\n    (**(code **)(puStack_80 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf1d1c3f39064f57(void)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int *piVar3;\n  int aiStack_1a4 [100];\n  int aiStack_14 [2];\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  piVar3 = aiStack_1a4;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412080;\n  piVar2 = piVar3;\n  do {\n    *piVar2 = 5;\n    piVar2 = piVar2 + 1;\n  } while (piVar2 != aiStack_14);\n  func_3f3338e4b7dc4867(aiStack_1a4[0]);\n  (*(code *)PTR_free_00412084)();\n  if (aiStack_14[0] == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (piVar3 != (int *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c37be67ed7ac4324(void)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  int iVar1;\n  undefined1 *puVar2;\n  \n  iVar1 = func_369851928ab44af4();\n  if (iVar1 != 0) {\n    puVar2 = dataBuffer_0;\n    do {\n      *(undefined4 *)puVar2 = 5;\n      puVar2 = (undefined1 *)((int)puVar2 + 4);\n    } while ((undefined4 *)puVar2 != &globalArgv);\n    func_45665622b1a94d96(dataBuffer_0._0_4_);\n                    /* WARNING: Could not recover jumptable at 0x00400a84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412088)(dataBuffer_0);\n    return;\n  }\n                    /* WARNING: Treating indirect jump as call */\n  UNRECOVERED_JUMPTABLE = (code *)func_8b46ab14c5e04b8c(0);\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
        "\nvoid func_a0d1819cf271451a(void)\n\n{\n  char *pcVar1;\n  char cVar2;\n  undefined *puVar3;\n  char *pcVar4;\n  undefined *puVar5;\n  int iVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar3 = PTR___stack_chk_guard_004120a0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  pcVar4 = (char *)(*(code *)PTR_malloc_0041208c)(100);\n  puVar8 = (undefined *)0x2;\n  *pcVar4 = '\\0';\n  puVar5 = (undefined *)(*(code *)PTR_socket_00412060)(2,2,6);\n  if (puVar5 != (undefined *)0xffffffff) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar6 = (*(code *)PTR_bind_00412078)(puVar5,&uStack_2c,0x10);\n    if (((iVar6 == -1) || (iVar6 = (*(code *)PTR_listen_00412068)(puVar5,5), iVar6 == -1)) ||\n       (puVar8 = (undefined *)(*(code *)PTR_accept_00412094)(puVar5,0,0),\n       puVar8 == (undefined *)0xffffffff)) {\n      (*(code *)PTR_close_00412054)();\n      puVar8 = puVar5;\n    }\n    else {\n      iVar6 = (*(code *)PTR_recv_00412058)(puVar8,pcVar4,99,0);\n      puVar7 = PTR_strchr_0041207c;\n      if (1 < iVar6 + 1U) {\n        pcVar4[iVar6] = '\\0';\n        puVar7 = (undefined *)(*(code *)puVar7)(pcVar4,0xd);\n        if (puVar7 != (undefined *)0x0) {\n          *puVar7 = 0;\n        }\n        puVar7 = (undefined *)(*(code *)PTR_strchr_0041207c)(pcVar4,10);\n        if (puVar7 != (undefined *)0x0) {\n          *puVar7 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(puVar5);\n      (*(code *)PTR_close_00412054)();\n    }\n  }\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    if (iStack_1c == *(int *)puVar3) {\n      return;\n    }\n  }\n  else {\n    cVar2 = *pcVar4;\n    while (cVar2 != '\\0') {\n      puVar8 = (undefined *)0x400000;\n      if (cVar2 == 'S') {\n        puVar8 = &UNK_00401504;\n        func_712b85f6c03e4534();\n        break;\n      }\n      pcVar1 = pcVar4 + 1;\n      pcVar4 = pcVar4 + 1;\n      cVar2 = *pcVar1;\n    }\n    if (iStack_1c == *(int *)puVar3) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a4)(pcVar4);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  if (puVar8 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_0445cc9cad044dd6(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_0041206c)(4);\n  uVar2 = *puVar1;\n  (*(code *)PTR_free_00412084)(puVar1);\n  func_7c80212dd7cf409a(uVar2);\n  return;\n}\n\n",
        "\nvoid func_09261645340d403e(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_b8 [56];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  puVar3 = auStack_b8;\n  auStack_b8[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fc4))(puVar3,uVar2,0x32);\n  func_5a487ea418174265();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa0))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_733478d1a9aa406a(void)\n\n{\n  int iVar1;\n  undefined4 uStack_3c;\n  int iStack_38;\n  int iStack_34;\n  int iStack_30;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_3c = 0xffffffff;\n  iStack_34 = 0xffffffff;\n  iStack_38 = -1;\n  iStack_34 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iStack_34 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar1 = (*(code *)PTR_bind_0041207c)(iStack_34,&uStack_2c,0x10);\n    if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_0041206c)(iStack_34,5), iVar1 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412090)(iStack_34,0,0), iStack_38 != -1)) &&\n       ((iStack_30 = (*(code *)PTR_recv_0041205c)(iStack_38,auStack_1c,0xd,0), iStack_30 != -1 &&\n        (iStack_30 != 0)))) {\n      auStack_1c[iStack_30] = 0;\n      uStack_3c = (*(code *)PTR_atoi_00412068)(auStack_1c);\n    }\n  }\n  if (iStack_34 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_34);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_2f302ece29894839(&uStack_3c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_0b84be91b97e4ca6\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_realloc_00412070)(0,4,param_3,param_4,&_gp);\n  func_812f86d264214422(uVar1);\n  return;\n}\n\n",
        "\nvoid func_89bd8bda350b4160(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412094;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401bb0);\n    uStack_1a = (*(code *)PTR_htons_00412088)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412058)(iVar1,&uStack_1c,0x10);\n    if (iVar2 != -1) {\n      (*(code *)PTR_recv_00412054)(iVar1,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  func_380855cd7ceb42f5(ppppuStack_2c,ppppuStack_28);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412094) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_6b1d14f33e7a47c9(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_8fb83bf8f6f74c30();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ca9dcaa010e94cfe(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined auStack_48 [52];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iVar3 = *(int *)(param_1 + 8);\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR___strcpy_chk_00412060)(auStack_48,iVar3,0x32);\n  iVar2 = iVar3;\n  func_1bc4dec965ba48c0();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400af8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(iVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400bc8) */\n\nvoid func_51993036a4494a14(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_e48bcd1527b14aae(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400af8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_31f296ad144b4daf(int param_1,int *param_2)\n\n{\n  linkedListPrev = param_2;\n  linkedListNext = param_1;\n  *param_2 = param_1;\n  *(int **)(linkedListNext + 4) = linkedListPrev;\n  return;\n}\n\n",
        "\nvoid func_34bf594b9b9446ca(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_30 [36];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_memcpy_00412090)(auStack_30,&UNK_00401b20,0x24);\n  uVar1 = (*(code *)PTR_wcsdup_00412060)(auStack_30);\n  func_23af0024b0f64ead(uVar1);\n  func_45d170885e2040f2(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nint func_288120e969d649c7(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = (*(code *)PTR_wcslen_00413060)(param_1);\n  if (1 < 0xfaU - iVar1) {\n    iVar2 = (*(code *)PTR_fgetws_00413084)\n                      (param_1 + iVar1 * 4,0xfa - iVar1,*(undefined4 *)PTR_stdin_0041306c);\n    if (iVar2 == 0) {\n      func_3f5912d33cd44a16(&UNK_00401bb0);\n      *(undefined4 *)(param_1 + iVar1 * 4) = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_wcslen_00413060)(param_1);\n      if ((iVar1 != 0) && (*(int *)(param_1 + (iVar1 + 0x3fffffff) * 4) == 10)) {\n        *(undefined4 *)(param_1 + (iVar1 + 0x3fffffff) * 4) = 0;\n      }\n    }\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_fa8c0651d7d04bd8\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_calloc_00412054)(100,8,param_3,param_4,&_gp);\n  func_eb361fac51e14ace(uVar1);\n  return;\n}\n\n",
        "\nvoid func_f397a550bea448fe(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_d4 [199];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = *(undefined4 *)PTR_CWE127_Buffer_Underread__char_alloca_cpy_68_badData_00412040;\n  (*(code *)PTR_memset_00412060)(auStack_d4,0x43,199);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412078)(auStack_d4,uVar1);\n  func_4106c15c638545fa(auStack_d4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_acbc35fc9e4f4862(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_38 = 0xffffffff;\n  iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401d50);\n    uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStack_38 = (*(code *)PTR_atoi_00412070)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  func_751705ca52174711(uStack_38);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_e38ac5bddb834d13(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  if (staticTrue != 0) {\n    uVar9 = (*(code *)PTR_malloc_00412078)(0x18);\n    *(undefined **)(uVar9 + 0x10) = &UNK_00401960;\n    func_ed954556a0bb438c(*(undefined4 *)(uVar9 + 0x10));\n    uVar8 = _UNK_00401974;\n    uVar7 = _UNK_00401970;\n    uVar6 = _UNK_0040196c;\n    uVar5 = _UNK_00401968;\n    uVar4 = _UNK_00401964;\n    uVar3 = _UNK_00401960;\n    uVar1 = uVar9 & 3;\n    *(uint *)(uVar9 - uVar1) =\n         *(uint *)(uVar9 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401960 >> uVar1 * 8;\n    uVar1 = uVar9 + 3 & 3;\n    puVar2 = (uint *)((uVar9 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 4 & 3;\n    puVar2 = (uint *)((uVar9 + 4) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n    uVar1 = uVar9 + 7 & 3;\n    puVar2 = (uint *)((uVar9 + 7) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 8 & 3;\n    puVar2 = (uint *)((uVar9 + 8) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar5 >> uVar1 * 8;\n    uVar1 = uVar9 + 0xb & 3;\n    puVar2 = (uint *)((uVar9 + 0xb) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar5 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0xc & 3;\n    puVar2 = (uint *)((uVar9 + 0xc) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar6 >> uVar1 * 8;\n    uVar1 = uVar9 + 0xf & 3;\n    puVar2 = (uint *)((uVar9 + 0xf) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar6 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0x10 & 3;\n    puVar2 = (uint *)((uVar9 + 0x10) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar7 >> uVar1 * 8;\n    uVar1 = uVar9 + 0x13 & 3;\n    puVar2 = (uint *)((uVar9 + 0x13) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar7 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0x14 & 3;\n    puVar2 = (uint *)((uVar9 + 0x14) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar8 >> uVar1 * 8;\n    uVar1 = uVar9 + 0x17 & 3;\n    puVar2 = (uint *)((uVar9 + 0x17) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar8 << (3 - uVar1) * 8;\n    *(undefined *)(uVar9 + 0xf) = 0;\n    func_ed954556a0bb438c(uVar9);\n    func_ed954556a0bb438c(*(undefined4 *)(uVar9 + 0x10));\n  }\n  return;\n}\n\n",
        "\nvoid func_1c784fb8b72f4578(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 *puVar5;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    puVar5 = (undefined4 *)0x0;\n  }\n  else {\n    puVar5 = (undefined4 *)(*(code *)PTR_malloc_00412080)(0x32);\n    *(undefined *)((int)puVar5 + 0x31) = 0;\n    *puVar5 = 0x41414141;\n    puVar5[1] = 0x41414141;\n    puVar5[2] = 0x41414141;\n    puVar5[3] = 0x41414141;\n    puVar5[4] = 0x41414141;\n    puVar5[5] = 0x41414141;\n    puVar5[6] = 0x41414141;\n    puVar5[7] = 0x41414141;\n    puVar5[8] = 0x41414141;\n    puVar5[9] = 0x41414141;\n    puVar5[10] = 0x41414141;\n    puVar5[0xb] = 0x41414141;\n    *(undefined *)(puVar5 + 0xc) = 0x41;\n  }\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_0041206c)(uVar2);\n  iVar4 = (*(code *)PTR___memcpy_chk_00412078)(uVar2,puVar5,uVar3,100);\n  uStack_15 = 0;\n  func_16454a7e313146c5();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b3c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(puVar5);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_def4479e87e342fd(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412080)(8);\n  puVar1[1] = 5;\n  *puVar1 = 0;\n  func_3cac851a1eb240ac(0,5);\n                    /* WARNING: Could not recover jumptable at 0x00400be0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_5d1a73ca79604b55(void)\n\n{\n  undefined4 auStack_340 [200];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  uint uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_18 = auStack_340;\n  for (uStack_14 = 0; uStack_14 < 100; uStack_14 = uStack_14 + 1) {\n    auStack_340[uStack_14 * 2 + 1] = 5;\n    puStack_18[uStack_14 * 2] = 0;\n  }\n  puStack_10 = puStack_18;\n  func_81c6c81224b142e4(auStack_340[0],auStack_340[1]);\n  (**(code **)(puStack_20 + -0x7fa0))(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_9cea6d8308874a65(void)\n\n{\n  undefined4 uVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    uVar1 = func_d68ad9404644434c(&UNK_00401b40);\n    func_b00bc1cf214142fd(uVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_486e5d2c1fe94db7(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_0041207c)(0x32);\n  (*(code *)PTR_memset_00412064)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  func_9715c3c906f44778(iVar1);\n  return;\n}\n\n",
        "\nvoid func_2b4ea29273604401(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130b0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_0041307c)(auStack_6c,0,0x60);\n  iVar1 = (*(code *)PTR_strlen_00413084)(&uStack_70);\n  iVar2 = (*(code *)PTR_socket_00413074)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041307c)(&uStack_80,0,0x10);\n    uStack_80 = 2;\n    uStack_7c = (*(code *)PTR_inet_addr_0041306c)(&UNK_00401f90);\n    uStack_7e = (*(code *)PTR_htons_004130a0)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00413068)(iVar2,&uStack_80,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00413064)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n        iVar3 != -1)) && (iVar3 != 0)) {\n      *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00413088)(&uStack_70,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00413088)(&uStack_70,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413060)(iVar2);\n  }\n  func_bfb624322c624a15(&uStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130b0) {\n    (*(code *)PTR___stack_chk_fail_004130a8)();\n  }\n  return;\n}\n\n",
        "\nvoid func_bd8256a5b8364733(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(0x28);\n  if (*(int *)PTR_globalFive_00412040 != 5) {\n    return;\n  }\n  *puVar1 = 0;\n  puVar1[1] = 1;\n  puVar1[2] = 2;\n  puVar1[3] = 3;\n  puVar1[4] = 4;\n  puVar2 = puVar1;\n  do {\n    puVar3 = puVar2 + 1;\n    func_9d582ad356ca4092(*puVar2);\n    puVar2 = puVar3;\n  } while (puVar1 + 10 != puVar3);\n  return;\n}\n\n",
        "\nvoid func_ddd474d9a0b245f0(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(0x32);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  func_3a9b3b5d8f4a434a(iVar1);\n  return;\n}\n\n",
        "\nvoid func_6cc3b5341c2c4c45(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined *puVar5;\n  int iStack_38;\n  undefined2 uStack_20;\n  undefined2 uStack_1e;\n  undefined4 uStack_1c;\n  undefined *puStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  puVar1 = (undefined *)(*(code *)PTR_malloc_0041208c)(100);\n  *puVar1 = 0;\n  iStack_38 = -1;\n  iVar2 = (*(code *)PTR_strlen_00412078)(puVar1);\n  iVar3 = (*(code *)PTR_socket_00412060)(2,2,6);\n  if (iVar3 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_20,0,0x10);\n    uStack_20 = 2;\n    uStack_1c = 0;\n    uStack_1e = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar4 = (*(code *)PTR_bind_00412074)(iVar3,&uStack_20,0x10);\n    if ((((iVar4 != -1) && (iVar4 = (*(code *)PTR_listen_00412064)(iVar3,5), iVar4 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412094)(iVar3,0,0), iStack_38 != -1)) &&\n       ((iVar4 = (*(code *)PTR_recv_00412058)(iStack_38,puVar1 + iVar2,99 - iVar2,0), iVar4 != -1 &&\n        (iVar4 != 0)))) {\n      puVar1[iVar4 + iVar2] = 0;\n      puVar5 = (undefined *)(*(code *)PTR_strchr_0041207c)(puVar1,0xd);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined *)(*(code *)PTR_strchr_0041207c)(puVar1,10);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n  }\n  if (iVar3 != -1) {\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_38);\n  }\n  puStack_18 = puVar1;\n  func_c0d20b5416214c00(&uStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_dd2e47bdea944993(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 uStack_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 uStack_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined uStack_e0;\n  undefined uStack_df;\n  undefined auStack_dc [99];\n  undefined uStack_79;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  uStack_110 = 0x41414141;\n  uStack_10c = 0x41414141;\n  uStack_108 = 0x41414141;\n  uStack_104 = 0x41414141;\n  uStack_100 = 0x41414141;\n  uStack_fc = 0x41414141;\n  uStack_f8 = 0x41414141;\n  uStack_f4 = 0x41414141;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41;\n  uStack_df = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412060)(auStack_dc,0x41,99);\n  uStack_79 = 0;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_00412068)(uVar2);\n  iVar4 = (*(code *)PTR___memmove_chk_00412074)(uVar2,&uStack_110,uVar3,100);\n  uStack_15 = 0;\n  func_0c993fdd87d44364();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_23e271c427174daa(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  code *pcVar4;\n  undefined auStack_128 [104];\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 uStack_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined uStack_90;\n  undefined uStack_8f;\n  undefined *puStack_88;\n  undefined4 uStack_7c;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_88 = &_gp;\n  uStack_c0 = 0x41414141;\n  uStack_bc = 0x41414141;\n  uStack_b8 = 0x41414141;\n  uStack_b4 = 0x41414141;\n  uStack_b0 = 0x41414141;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_8f = 0;\n  uStack_90 = 0x41;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_128,0x41,99);\n  pcVar4 = *(code **)(puStack_88 + -0x7fc0);\n  *(undefined *)(iVar2 + 99) = 0;\n  uStack_7c = (*pcVar4)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (**(code **)(puStack_88 + -0x7fb8))(uStack_7c);\n  iVar2 = (**(code **)(puStack_88 + -0x7fac))(uStack_7c,&uStack_c0,uVar3,100);\n  uStack_15 = 0;\n  func_00454cf652f243b7();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_88 + -0x7fa0))();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ce8f8acf4c874bb8(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 == -1) {\ncode_r0x00400b60:\n    iVar5 = -1;\n    piVar3 = (int *)(*(code *)PTR_malloc_00412090)(0xfffffffc);\n    iVar6 = -4;\n  }\n  else {\n    uStack_38 = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_3c = 0x26987;\n    iVar4 = (*(code *)PTR_bind_00412080)(iVar2,&uStack_3c,0x10);\n    if (((iVar4 == -1) || (iVar4 = (*(code *)PTR_listen_0041206c)(iVar2,5), iVar4 == -1)) ||\n       (iVar4 = (*(code *)PTR_accept_00412098)(iVar2,0,0), iVar4 == -1)) {\n      (*(code *)PTR_close_00412054)(iVar2);\n      goto code_r0x00400b60;\n    }\n    iVar5 = (*(code *)PTR_recv_00412058)(iVar4,auStack_2c,0xd,0);\n    if (iVar5 + 1U < 2) {\n      (*(code *)PTR_close_00412054)(iVar2);\n      (*(code *)PTR_close_00412054)(iVar4);\n      goto code_r0x00400b60;\n    }\n    auStack_2c[iVar5] = 0;\n    iVar5 = (*(code *)PTR_strtol_0041205c)(auStack_2c,0,10);\n    iVar6 = iVar5 << 2;\n    (*(code *)PTR_close_00412054)(iVar2);\n    (*(code *)PTR_close_00412054)(iVar4);\n    piVar3 = (int *)(*(code *)PTR_malloc_00412090)(iVar6);\n    if (iVar5 == 0) goto code_r0x00400b90;\n  }\n  iVar2 = 4;\n  if (iVar5 != 0) {\n    iVar2 = iVar6;\n  }\n  (*(code *)PTR_memset_00412078)(piVar3,0,iVar2);\ncode_r0x00400b90:\n  iVar2 = *piVar3;\n  func_e740b624b2e441fb();\n  if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400bcc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_004120a8)(piVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (iVar2 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400d40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_puts_0041208c)();\n  return;\n}\n\n",
        "\nvoid func_eedf8f01cf4341b3(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined auStack_110 [99];\n  undefined uStack_ad;\n  int iStack_ac;\n  undefined *puStack_a4;\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_20 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar3 = (*(code *)PTR_memset_00412068)(auStack_88,0x41,99);\n  func_eedf8f01cf4341b3Data = iVar3 + -8;\n  *(undefined *)(iVar3 + 99) = 0;\n  func_a9fa565c50c94430();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7fa0))();\n  puVar2 = PTR___stack_chk_guard_00412088;\n  puStack_a4 = puVar1;\n  iStack_ac = *(int *)PTR___stack_chk_guard_00412088;\n  iVar3 = *(int *)PTR_func_eedf8f01cf4341b3Data_00412048;\n  uVar4 = (*(code *)PTR_memset_00412068)(auStack_110,0x43,99);\n  uStack_ad = 0;\n  (*(code *)PTR_memmove_0041208c)(iVar3,uVar4,100);\n  func_6c17db6d5802462f();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_33c227b95e674edf(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_fopen_00412088)(&UNK_00401a14,&UNK_00401a10);\n  func_f1fc5dbcadec41d3(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_31ce3dc98f064e9e(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_78 = auStack_e8;\n  (*(code *)PTR_memset_00412058)(puStack_78,0x41,99);\n  puVar1 = puStack_80;\n  puStack_78[99] = 0;\n  puStack_74 = puStack_78 + -8;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7fa0))(auStack_70,puStack_74,100);\n  uStack_d = 0;\n  func_77c74c9065a8472d(auStack_70);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa4)) {\n    (**(code **)(puStack_80 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf4813c9e2954660(void)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 != 5) {\n    return;\n  }\n  piVar1 = (int *)(*(code *)PTR_malloc_00412078)(4);\n  iVar2 = *piVar1;\n  (*(code *)PTR_free_0041208c)(piVar1);\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b4c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_0041205c)(1,&UNK_004012a8,iVar2);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7f976515f28e4677(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_0041206c)(0x28);\n  for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n    *(int *)(iVar1 + iStack_14 * 4) = iStack_14;\n  }\n  for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n    func_588c9b14200c4419(*(undefined4 *)(iVar1 + iStack_10 * 4));\n  }\n  return;\n}\n\n",
        "\nvoid func_664905a8c2ba4b9c(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar1 = *param_1;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412074)(uVar1,auStack_70);\n  func_79c4033ead604a14(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_73109c9ec8b04afe(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uStack_1a4;\n  undefined auStack_1a0 [12];\n  undefined4 auStack_194 [2];\n  undefined4 auStack_18c [94];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puVar6 = &uStack_1a4;\n  uStack_1a4 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_1a0,0,0x18c);\n  (*(code *)PTR___wcscpy_chk_0041206c)(puVar6,&UNK_00401284,100);\n  puVar4 = auStack_194;\n  puVar2 = auStack_18c;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_18c + 6);\n  uVar7 = puVar3[5];\n  puVar5[4] = *puVar4;\n  puVar5[5] = uVar7;\n  func_2035df75e48542af();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400e58) */\n\nvoid func_062feb171adc48fe(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400e50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412094)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_c31b9f59f2b8435a(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400c38. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_004120ac)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_2c61095b2df846bf(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  (*(code *)PTR_memset_00412058)(puStack_78,0x41,0x31);\n  puVar1 = puStack_88;\n  puStack_78[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc8))(puStack_74,0x41,99);\n  puStack_74[99] = 0;\n  iVar2 = func_81ba63da55eb4771();\n  if (iVar2 != 0) {\n    puStack_7c = puStack_78;\n  }\n  (**(code **)(puStack_88 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar3 = (**(code **)(puStack_88 + -0x7fc0))(auStack_70);\n  (**(code **)(puStack_88 + -0x7f9c))(auStack_70,puStack_7c,uVar3);\n  uStack_d = 0;\n  func_05be0824f2fd4461(auStack_70);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nundefined4 *\nCWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource\n          (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412054)(100,8,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_09b11bcd01dc4dc4(puVar1);\n  return puVar1;\n}\n\n",
        "\nvoid func_9bcc469b85664737(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(4);\n    *puVar1 = 5;\n    func_2bc502b813764a47(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_bbd95fee5742420d(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_24;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    iStack_24 = -1;\n    iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = 0;\n      uStack_1a = (*(code *)PTR_htons_0041208c)(30000);\n      iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n      if ((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) {\n        iStack_24 = (*(code *)PTR_accept_00412084)(iVar1,0,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412054)(iVar1);\n    }\n    if (iStack_24 != -1) {\n      (*(code *)PTR_close_00412054)(iStack_24);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3ec25a3e61044020(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined2 uStack_10024;\n  undefined2 uStack_10022;\n  undefined4 uStack_10020;\n  undefined auStack_10014 [65540];\n  \n  iVar1 = *(int *)PTR___stack_chk_guard_004120a0;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar2 = (*(code *)PTR_fopen_004120a8)(&UNK_00401de4,&UNK_00401de0);\n    if (iVar2 != 0) {\n      iVar3 = (*(code *)PTR_fgets_0041209c)(auStack_10014,0xffff,iVar2);\n      if (iVar3 == 0) {\n        func_2ce6cf34573b4732(&UNK_00401df0);\n      }\n      (*(code *)PTR_fclose_00412068)(iVar2);\n    }\n    iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_10024,0,0x10);\n      uStack_10024 = 2;\n      uStack_10020 = 0;\n      uStack_10022 = (*(code *)PTR_htons_00412090)(0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_10024,0x10);\n      if (iVar3 != -1) {\n        uVar4 = (*(code *)PTR_strlen_00412078)(auStack_10014);\n        (*(code *)PTR_send_00412050)(iVar2,auStack_10014,uVar4,0);\n        (*(code *)PTR_strlen_00412078)(auStack_10014);\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412058)(iVar2);\n    }\n  }\n  if (iVar1 != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_963bfe77f1a44334(void)\n\n{\n  int iVar1;\n  int iStack_80;\n  int iStack_7c;\n  int iStack_78;\n  undefined4 *puStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412070)(auStack_6c,0,0x60);\n  puStack_74 = &uStack_70;\n  puStack_74 = (undefined4 *)func_793f098d5f0e4d50(puStack_74);\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412074)(puStack_74,&UNK_00401d8c,&iStack_80);\n  if (iVar1 == 1) {\n    iStack_78 = 0;\n    for (iStack_7c = 0; iStack_7c < iStack_80; iStack_7c = iStack_7c + 1) {\n      iStack_78 = iStack_78 + 1;\n    }\n    func_427b05b9f0e340cb(iStack_78);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_230f36d1e7df41c2(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(8);\n  uVar3 = *puVar1;\n  uVar2 = puVar1[1];\n  (*(code *)PTR_free_00412088)(puVar1);\n  func_f33933867cfa40fd(uVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400ae4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401240,uVar2);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_adf818b592d34efd(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 auStack_80 [25];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  auStack_80[0] = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_00412078)(auStack_80 + 1,0,0x60);\n  iVar2 = func_3e9cecdfa6724163();\n  if (iVar2 == 0) {\n    auStack_80[0] = _UNK_004014f0;\n    auStack_80[1] = _UNK_004014f4;\n    auStack_80[2] = _UNK_004014f8;\n    auStack_80[3] = _UNK_004014fc;\n    iVar2 = func_3e9cecdfa6724163();\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412080)(auStack_80);\n    iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar3 != -1) {\n      uStack_8c = 0;\n      uStack_88 = 0;\n      uStack_84 = 0;\n      uStack_90._2_2_ = 0;\n      uStack_90._0_2_ = 2;\n      uStack_8c = (*(code *)PTR_inet_addr_00412060)(&UNK_004014e4);\n      uStack_90 = func_2039e9d1b51f49ca(uStack_90._0_2_,0x6987);\n      iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_90,0x10);\n      if ((iVar4 != -1) &&\n         (iVar4 = (*(code *)PTR_recv_00412058)(iVar3,(int)auStack_80 + iVar2,99 - iVar2,0),\n         1 < iVar4 + 1U)) {\n        *(undefined *)((int)auStack_80 + iVar2 + iVar4) = 0;\n        puVar5 = (undefined *)(*(code *)PTR_strchr_00412084)(auStack_80,0xd);\n        if (puVar5 != (undefined *)0x0) {\n          *puVar5 = 0;\n        }\n        puVar5 = (undefined *)(*(code *)PTR_strchr_00412084)(auStack_80,10);\n        if (puVar5 != (undefined *)0x0) {\n          *puVar5 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar3);\n    }\n    iVar2 = func_3e9cecdfa6724163();\n  }\n  if (iVar2 == 0) {\n    puVar6 = auStack_80;\n    (*(code *)PTR_puts_00412090)();\n  }\n  else {\n    puVar6 = (undefined4 *)0x1;\n    (*(code *)PTR___printf_chk_00412070)(1,auStack_80);\n  }\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (puVar6 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400d20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b41e7a4002ca4a90(void)\n\n{\n  undefined auStack_a4 [49];\n  undefined uStack_73;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_0041205c)(auStack_a4,0x41,0x31);\n  uStack_73 = 0;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x41,99);\n  uStack_d = 0;\n  func_5bd277b0299045c8(auStack_a4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid func_a8136a50a7a342e4(void)\n\n{\n  undefined auStack_98 [104];\n  undefined *puStack_30;\n  undefined4 uStack_24;\n  undefined4 *puStack_20;\n  undefined4 *puStack_1c;\n  undefined *puStack_18;\n  undefined *puStack_14;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_30 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_20 = &uStack_24;\n  puStack_1c = &uStack_24;\n  uStack_24 = 0;\n  puStack_18 = (undefined *)0x0;\n  puStack_14 = auStack_98;\n  (*(code *)PTR_memset_00412058)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_18 = puStack_14;\n  *puStack_20 = puStack_14;\n  uStack_10 = *puStack_1c;\n  func_24412d49a7624949(uStack_10);\n  (**(code **)(puStack_30 + -0x7fa0))(uStack_10);\n  if (iStack_c != **(int **)(puStack_30 + -0x7fa4)) {\n    (**(code **)(puStack_30 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nint func_5c5198a617b342b8(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iVar5;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar2 = (*(code *)PTR_strlen_00412084)();\n  iVar5 = 2;\n  iVar3 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401544);\n    uStack_2c = func_1776bafed287489d(uStack_2c._0_2_,0x6987);\n    iVar5 = (*(code *)PTR_connect_00412060)(iVar3,&uStack_2c,0x10);\n    if (iVar5 != -1) {\n      iVar5 = (*(code *)PTR_recv_0041205c)(iVar3,param_1 + iVar2,99 - iVar2,0);\n      puVar4 = PTR_strchr_00412088;\n      if (1 < iVar5 + 1U) {\n        *(undefined *)(param_1 + iVar5 + iVar2) = 0;\n        puVar4 = (undefined *)(*(code *)puVar4)(param_1,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(param_1,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412058)();\n    iVar5 = iVar3;\n  }\n  if (iStack_1c == *(int *)puVar1) {\n    return param_1;\n  }\n  iVar2 = (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (iVar5 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    iVar5 = (*(code *)PTR_puts_00412094)();\n    return iVar5;\n  }\n  return iVar2;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4270a67465334821(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  uStack_108 = _UNK_00401d24;\n  uStack_104 = _UNK_00401d28;\n  (*(code *)PTR_memset_00412070)(auStack_102,0,0xf4);\n  iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_108);\n  iVar2 = (*(code *)PTR_getenv_00412088)(&UNK_00401d20);\n  if (iVar2 != 0) {\n    (*(code *)PTR_strncat_0041205c)((int)&uStack_108 + iVar1,iVar2,0xf9 - iVar1);\n  }\n  func_c449ee9f05bb402e(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3d53d55833ec46e0\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412078)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_d217db3d50624fdd(puVar1);\n  func_b15432faf3d34f14(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e6b6e72ca40b458b(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401230,*puVar1,puVar1[1]);\n  return;\n}\n\n",
        "\nvoid func_618a6c0514804ba3(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined4 **ppuVar6;\n  undefined4 uVar7;\n  undefined auStack_158 [104];\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 uStack_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 uStack_c8;\n  undefined4 uStack_c4;\n  undefined uStack_c0;\n  undefined uStack_bf;\n  undefined *puStack_b8;\n  undefined4 *puStack_b0;\n  int iStack_ac;\n  undefined *puStack_a8;\n  undefined4 uStack_a4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar7 = *param_1;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar4 = (*(code *)PTR_strlen_0041206c)(uVar3);\n  uVar3 = (*(code *)PTR___memmove_chk_00412078)(uVar3,uVar7,uVar4,100);\n  uStack_15 = 0;\n  func_1b984533e2c64f18(uVar3);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_a8 = puVar1;\n  puStack_b8 = &_gp;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41414141;\n  uStack_dc = 0x41414141;\n  uStack_d8 = 0x41414141;\n  uStack_d4 = 0x41414141;\n  uStack_d0 = 0x41414141;\n  uStack_cc = 0x41414141;\n  uStack_c8 = 0x41414141;\n  uStack_c4 = 0x41414141;\n  uStack_bf = 0;\n  uStack_c0 = 0x41;\n  iStack_ac = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_a4 = uVar7;\n  iVar5 = (*(code *)PTR_memset_00412064)(auStack_158,0x41,99);\n  ppuVar6 = &puStack_b0;\n  *(undefined *)(iVar5 + 99) = 0;\n  puStack_b0 = &uStack_f0;\n  func_618a6c0514804ba3();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (**(code **)(puStack_b8 + -0x7f9c))();\n  if (ppuVar6 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_70835171913b4fb8(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  \n  (*(code *)PTR_rand_00412064)();\n  iVar1 = (*(code *)PTR_rand_00412064)();\n  uVar2 = (*(code *)PTR_rand_00412064)();\n  puVar3 = (undefined4 *)(*(code *)PTR_calloc_00412050)((iVar1 << 0xf ^ uVar2) << 2,1);\n  func_d66ff76076154f3c(*puVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400af4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar3);\n  return;\n}\n\n",
        "\nvoid func_fc1865d5ebac4f7b(void)\n\n{\n  int iVar1;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  iVar1 = (*(code *)PTR_malloc_0041206c)(100);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,99);\n  *(undefined *)(iVar1 + 99) = 0;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  (*(code *)PTR_strcpy_00412074)(&uStack_40,iVar1);\n  func_1661b5cd94784446(iVar1);\n  (*(code *)PTR_free_00412088)(iVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f0a16c62591b4e21(int param_1)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = *(undefined4 **)(param_1 + 8);\n  *puVar1 = 5;\n  func_c7e14f9dc51243df(*puVar1);\n  (*(code *)PTR_free_00412088)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_fcac9411ea2f4d6b(void)\n\n{\n  int iStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_74 = (undefined *)0x0;\n  for (iStack_78 = 0; iStack_78 < 1; iStack_78 = iStack_78 + 1) {\n    puStack_74 = (undefined *)(*(code *)PTR_malloc_0041206c)(0x32);\n    *puStack_74 = 0;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412074)(puStack_74,auStack_70);\n  func_98e46cf12bf74a30(puStack_74);\n  (*(code *)PTR_free_00412088)(puStack_74);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_5adab246c3d74e44(void)\n\n{\n  int iVar1;\n  undefined4 auStack_340 [200];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  uint uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_18 = (undefined4 *)0x0;\n  iVar1 = func_68832a61f4d14a63();\n  if (iVar1 != 0) {\n    puStack_18 = auStack_340;\n    for (uStack_14 = 0; puStack_10 = puStack_18, uStack_14 < 100; uStack_14 = uStack_14 + 1) {\n      auStack_340[uStack_14 * 2 + 1] = 5;\n      puStack_18[uStack_14 * 2] = 0;\n    }\n  }\n  func_6fa66c90bfa84556(*puStack_18,puStack_18[1]);\n  (**(code **)(puStack_20 + -0x7f9c))(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf98d70fd127413e(void)\n\n{\n  int iStack_ac;\n  undefined *puStack_a8;\n  undefined auStack_a4 [52];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  for (iStack_ac = 0; iStack_ac < 1; iStack_ac = iStack_ac + 1) {\n    puStack_a8 = auStack_a4;\n    auStack_a4[0] = 0;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412070)(puStack_a8,auStack_70);\n  func_85db3ec94f774467(puStack_a8);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400aa8) */\n\nvoid func_abde8338b3764a37(void)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  \n  uVar1 = (*(code *)PTR_rand_0041205c)();\n  if (uVar1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041206c)();\n    return;\n  }\n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412070)(uVar1);\n  *puVar2 = 0x68656c6c;\n  *(undefined2 *)(puVar2 + 1) = 0x6f00;\n  func_5d01cfdcabce4be7(puVar2);\n                    /* WARNING: Could not recover jumptable at 0x00400a68. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412084)(puVar2);\n  return;\n}\n\n",
        "\nvoid func_fb9f6718a5404dd8(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_f0 [24];\n  undefined uStack_8d;\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_f0 + 2,0x41,99);\n  uStack_85 = 0;\n  puVar2 = (undefined4 *)(**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  puVar6 = auStack_f0;\n  uStack_18._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_18);\n  *puVar5 = *puVar3;\n  uStack_8d = 0;\n  func_d207dbaa7d7f4453();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_89f9dbbaa8bd416a(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 auStack_70 [4];\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  auStack_70[0] = _UNK_00401d68;\n  auStack_70[1] = _UNK_00401d6c;\n  auStack_70[2] = _UNK_00401d70;\n  auStack_70[3] = _UNK_00401d74;\n  (*(code *)PTR_memset_00412070)(auStack_60,0,0x54);\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    iVar1 = (*(code *)PTR_strlen_00412078)(auStack_70);\n    iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d40);\n      uStack_7e = (*(code *)PTR_htons_0041209c)(0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_80,0x10);\n      if (((iVar3 != -1) &&\n          (iVar3 = (*(code *)PTR_recv_00412058)(iVar2,(int)auStack_70 + iVar1,99 - iVar1,0),\n          iVar3 != -1)) && (iVar3 != 0)) {\n        *(undefined *)((int)auStack_70 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(auStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(auStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n  }\n  iVar1 = (*(code *)PTR_system_0041208c)(auStack_70);\n  if (iVar1 < 1) {\n    func_d85d288de9434e02(&UNK_00401d4c);\n    (*(code *)PTR_exit_00412084)(1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_8c68aa955805491a(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  char cStack_79;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412068)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR___fgets_chk_00412064)\n                    (&uStack_78,0xffffffff,100,*(undefined4 *)PTR_stdin_00412070);\n  if (iVar2 == 0) {\n    func_cf9a4a4cfa5d4294(&UNK_00401304);\n    uStack_78 = uStack_78 & 0xffffff;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412074)(&uStack_78);\n    if ((iVar2 != 0) && (pcVar3 = (char *)((int)&uStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n      *pcVar3 = '\\0';\n    }\n  }\n  puVar4 = &UNK_0040131c;\n  (*(code *)PTR_execl_00412060)\n            (&UNK_0040131c,&UNK_0040131c,&UNK_00401318,&UNK_00401314,&uStack_78,0);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nundefined4 *\nCWE123_Write_What_Where_Condition__connect_socket_22_badSource\n          (undefined4 *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStackX_4;\n  undefined4 uStackX_8;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  uStackX_4 = param_2;\n  uStackX_8 = param_3;\n  if (*(int *)PTR_CWE123_Write_What_Where_Condition__connect_socket_22_badGlobal_00412040 != 0) {\n    iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401ce0);\n      uStack_1a = (*(code *)PTR_htons_00412090)(0x6987);\n      iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_1c,0x10);\n      if (iVar2 != -1) {\n        (*(code *)PTR_recv_0041205c)(iVar1,&uStackX_4,8,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n  }\n  *param_1 = uStackX_4;\n  param_1[1] = uStackX_8;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_965e5d5543424ba1(Elf32_Ehdr *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  Elf32_Ehdr *pEVar4;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  int iStack_14;\n  \n  puVar2 = PTR___stack_chk_guard_00412090;\n  puVar1 = PTR_globalTrue_00412040;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  if (*(int *)PTR_globalTrue_00412040 == 0) {\ncode_r0x00400aa8:\n    if (iStack_14 == *(int *)puVar2) {\n      return;\n    }\n  }\n  else {\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_1c = 0;\n    uStack_18 = 0;\n    iVar3 = (*(code *)PTR_fgets_0041208c)(&uStack_24,0xe,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar3 == 0) {\n      param_1 = (Elf32_Ehdr *)&UNK_00401374;\n      func_ba460cd9e35542cb();\n      if (*(int *)puVar1 == 0) goto code_r0x00400aa8;\ncode_r0x00400ba0:\n      param_1 = &__DT_MIPS_BASE_ADDRESS;\n      if (iStack_14 == *(int *)puVar2) {\n        param_1 = (Elf32_Ehdr *)&UNK_00401384;\n        goto code_r0x00400be0;\n      }\n    }\n    else {\n      param_1 = (Elf32_Ehdr *)(*(code *)PTR_strtoul_0041206c)(&uStack_24,0,0);\n      if (*(int *)puVar1 == 0) goto code_r0x00400aa8;\n      if (param_1 < (Elf32_Ehdr *)0x6) goto code_r0x00400ba0;\n      pEVar4 = (Elf32_Ehdr *)(*(code *)PTR_malloc_0041207c)();\n      pEVar4->e_ident_magic_num = 0x68;\n      pEVar4->e_ident_magic_str[0] = 'e';\n      pEVar4->e_ident_magic_str[1] = 'l';\n      pEVar4->e_ident_magic_str[2] = 'l';\n      pEVar4->e_ident_class = 0x6f;\n      pEVar4->e_ident_data = 0;\n      param_1 = pEVar4;\n      func_ba460cd9e35542cb();\n      if (iStack_14 == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400b7c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_free_00412094)(pEVar4);\n        return;\n      }\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\ncode_r0x00400be0:\n  if (param_1 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b1dfd44804754ea9(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(0x50);\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n      *(int *)(iVar1 + iStack_14 * 8) = iStack_14;\n      *(int *)(iVar1 + iStack_14 * 8 + 4) = iStack_14;\n    }\n  }\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n      func_4e97cff756b34169(*(undefined4 *)(iVar1 + iStack_10 * 8));\n      func_4e97cff756b34169(*(undefined4 *)(iVar1 + iStack_10 * 8 + 4));\n    }\n  }\n  return;\n}\n\n",
        "\nvoid func_55ac654b902e40e9(Elf32_Ehdr *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  Elf32_Ehdr *pEVar5;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined auStack_24 [16];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    if (iStack_14 == *(int *)PTR___stack_chk_guard_0041209c) {\n      return;\n    }\n  }\n  else {\n    iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar2 != -1) {\n      uStack_30 = 0;\n      uStack_2c = 0;\n      uStack_28 = 0;\n      uStack_34._2_2_ = 0;\n      uStack_34._0_2_ = 2;\n      uStack_30 = (*(code *)PTR_inet_addr_00412060)(&UNK_004014a4);\n      uStack_34 = func_c0f4eb61a09942c1(uStack_34._0_2_,0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_34,0x10);\n      if (iVar3 != -1) {\n        iVar3 = (*(code *)PTR_recv_00412058)(iVar2,auStack_24,0xd,0);\n        if (1 < iVar3 + 1U) {\n          auStack_24[iVar3] = 0;\n          uVar4 = (*(code *)PTR_strtoul_0041207c)(auStack_24,0,0);\n          (*(code *)PTR_close_00412054)(iVar2);\n          if (5 < uVar4) {\n            pEVar5 = (Elf32_Ehdr *)(*(code *)PTR_malloc_0041208c)(uVar4);\n            pEVar5->e_ident_magic_num = 0x68;\n            pEVar5->e_ident_magic_str[0] = 'e';\n            pEVar5->e_ident_magic_str[1] = 'l';\n            pEVar5->e_ident_magic_str[2] = 'l';\n            pEVar5->e_ident_class = 0x6f;\n            pEVar5->e_ident_data = 0;\n            param_1 = pEVar5;\n            func_d50fd0e4c883413e();\n            if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400cb8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              (*(code *)PTR_free_004120a0)(pEVar5);\n              return;\n            }\n            goto code_r0x00400cc0;\n          }\n          goto code_r0x00400b50;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\ncode_r0x00400b50:\n    param_1 = &__DT_MIPS_BASE_ADDRESS;\n    if (iStack_14 == *(int *)puVar1) {\n      param_1 = (Elf32_Ehdr *)&UNK_004014b0;\n      goto code_r0x00400cd0;\n    }\n  }\ncode_r0x00400cc0:\n  (*(code *)PTR___stack_chk_fail_00412094)();\ncode_r0x00400cd0:\n  if (param_1 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ce0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c0d9afedfbac418a(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  badStatic = 1;\n  uVar1 = func_ef848747cce1476d(auStack_32c);\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar2 = (*(code *)PTR_wcslen_00412064)(auStack_19c);\n  (*(code *)PTR_wcsncat_00412054)(uVar1,auStack_19c,uVar2);\n  func_7ea894cb9e8a4fce(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c1f41f3a90d646e0(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_calloc_00412050)(100,4);\n  (*(code *)PTR___wcscpy_chk_0041206c)(iVar1,&UNK_004011f4,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_0041205c)(1,&UNK_0040123c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_370d0f982d804f40(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412054)(1,4);\n  iVar2 = func_5e11c0114b544e3f();\n  if (iVar2 == 0) {\n    if (puVar1 != (undefined4 *)0x0) {\n      *puVar1 = 5;\n      func_cebaeeb2436f453f(*puVar1);\n      (*(code *)PTR_free_00412088)(puVar1);\n    }\n  }\n  else {\n    *puVar1 = 5;\n    func_cebaeeb2436f453f(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_8bb23d3d5c1c48a0(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  int aiStack_404 [4];\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041208c;\n  piVar4 = aiStack_404;\n  aiStack_404[0] = _UNK_00401390;\n  aiStack_404[1] = _UNK_00401394;\n  aiStack_404[2] = _UNK_00401398;\n  aiStack_404[3] = _UNK_0040139c;\n  uStack_3f4 = _UNK_004013a0;\n  uStack_3f0 = _UNK_004013a4;\n  (*(code *)PTR_memset_00412068)(auStack_3ec,0,0x3d0);\n  iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n  if (1 < 0xfaU - iVar2) {\n    iVar3 = (*(code *)PTR___fgetws_chk_00412094)\n                      (piVar4 + iVar2,0x3fffffff,0xfaU - iVar2,*(undefined4 *)PTR_stdin_00412070);\n    if (iVar3 == 0) {\n      func_dbb1ace1e5154b6f(&UNK_00401354);\n      piVar4[iVar2] = 0;\n    }\n    else {\n      iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n      if ((iVar2 != 0) && (piVar4[iVar2 + 0x3fffffff] == 10)) {\n        piVar4[iVar2 + 0x3fffffff] = 0;\n      }\n    }\n  }\n  (*(code *)PTR_putenv_00412058)();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n    if (piVar4 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_063cca9b9e3f4981(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    if (*(int *)PTR_globalTrue_00412044 == 0) {\n      return;\n    }\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    unaff_s1 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x1a4) = 0;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041208c\n    ;\n    (*(code *)PTR_memset_00412068)((undefined *)((int)register0x00000074 + -0x1a0),0,0x18c);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fb0))(unaff_s1,&UNK_004012f4,100);\n    puVar4 = (undefined4 *)((int)register0x00000074 + -0x194);\n    puVar2 = (undefined4 *)((int)register0x00000074 + -0x18c);\n    do {\n      puVar5 = puVar2;\n      puVar3 = puVar4;\n      puVar4 = puVar3 + 4;\n      uVar8 = puVar3[1];\n      uVar7 = puVar3[2];\n      uVar6 = puVar3[3];\n      *puVar5 = *puVar3;\n      puVar5[1] = uVar8;\n      puVar5[2] = uVar7;\n      puVar5[3] = uVar6;\n      puVar2 = puVar5 + 4;\n    } while (puVar4 != (undefined4 *)((int)register0x00000074 + -0x174));\n    uVar6 = puVar3[5];\n    puVar5[4] = *puVar4;\n    puVar5[5] = uVar6;\n    func_05153c46e3314cd7(unaff_s1);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = func_063cca9b9e3f4981;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f9c))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\nvoid func_8e3a7857754e4136(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  puVar2 = (undefined *)(*(code *)PTR_malloc_00412078)(0x32);\n  *puVar2 = 0;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR___strcpy_chk_0041205c)(puVar2,uVar3,0x32);\n  puVar4 = puVar2;\n  func_efb1130b91af424e();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400adc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_0041208c)(puVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_08d63ef6143e4c67\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  undefined *puVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412060)(1,4,param_3,param_4,&_gp);\n  puVar2 = &_gp;\n  *puVar1 = 5;\n  func_2f851933cc15465f(5);\n                    /* WARNING: Could not recover jumptable at 0x00400be4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(puVar2 + -0x7f88))(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e620f83e093d4f44(int **param_1)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  int *piVar3;\n  int *piVar4;\n  int *piVar5;\n  int iVar6;\n  int *piVar7;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int aiStack_14 [2];\n  \n  puVar2 = PTR___stack_chk_guard_00412084;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412084;\n  piVar7 = *param_1;\n  piVar3 = (int *)(*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  piVar4 = piVar3;\n  if (((uint)((int)piVar3 - (int)((int)piVar7 + 1)) < 3) || (((uint)piVar7 & 3) != 0)) {\n    do {\n      uVar1 = *(undefined *)piVar7;\n      piVar5 = (int *)((int)piVar4 + 1);\n      piVar7 = (int *)((int)piVar7 + 1);\n      *(undefined *)piVar4 = uVar1;\n      piVar4 = piVar5;\n    } while (piVar5 != aiStack_14);\n  }\n  else {\n    do {\n      iVar6 = *piVar7;\n      piVar5 = piVar4 + 1;\n      piVar7 = piVar7 + 1;\n      *piVar4 = iVar6;\n      piVar4 = piVar5;\n    } while (piVar5 != aiStack_14);\n  }\n  uStack_15 = 0;\n  func_94dbc320b1244803();\n  if (aiStack_14[0] != *(int *)puVar2) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n    if (piVar3 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_797c3e14708c4fd0(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 *puVar5;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 uStack_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined2 uStack_10c;\n  undefined auStack_10a [246];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  uStack_110 = _UNK_00401470;\n  uStack_10c = _UNK_00401474;\n  (*(code *)PTR_memset_00412078)(auStack_10a,0,0xf4);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_11c = 0;\n    uStack_118 = 0;\n    uStack_114 = 0;\n    uStack_120._2_2_ = 0;\n    uStack_120._0_2_ = 2;\n    uStack_11c = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401434);\n    uStack_120 = func_b5168dacd6784b72(uStack_120._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_120,0x10);\n    if (iVar3 == -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    else {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,(int)&uStack_10c + 1,0xf4,0);\n      if (1 < iVar3 + 1U) {\n        auStack_10a[iVar3 + -1] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_110,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_110,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n  }\n  puVar5 = &uStack_110;\n  (*(code *)PTR_putenv_0041206c)();\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n    if (puVar5 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041208c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_8a6bd952569f47f0(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011c8,0,5);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_cae7a3ff89ce4a64(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined4 auStack_404 [4];\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412090;\n  auStack_404[0] = _UNK_00401440;\n  auStack_404[1] = _UNK_00401444;\n  auStack_404[2] = _UNK_00401448;\n  auStack_404[3] = _UNK_0040144c;\n  uStack_3f4 = _UNK_00401450;\n  uStack_3f0 = _UNK_00401454;\n  (*(code *)PTR_memset_00412070)(auStack_3ec,0,0x3d0);\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    iVar2 = (*(code *)PTR_wcslen_0041206c)(auStack_404);\n    if ((1 < 0xfaU - iVar2) &&\n       (iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_004013f8,&UNK_004013f4), iVar3 != 0)) {\n      puVar4 = auStack_404 + iVar2;\n      iVar2 = (*(code *)PTR___fgetws_chk_0041209c)(puVar4,0x3fffffff,0xfaU - iVar2,iVar3);\n      if (iVar2 == 0) {\n        func_b6cfbc41c9b64400(&UNK_00401408);\n        *puVar4 = 0;\n      }\n      (*(code *)PTR_fclose_0041205c)(iVar3);\n    }\n  }\n  puVar4 = auStack_404;\n  (*(code *)PTR_putenv_00412060)();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_6f61072bab7a479a(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined *unaff_s0;\n  undefined4 unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar4;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    uVar3 = param_1;\n    puVar1 = PTR___stack_chk_guard_0041209c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(undefined **)((int)register0x00000074 + -0x10) = unaff_s0;\n    unaff_s0 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041209c\n    ;\n    (*(code *)PTR_wmemset_00412070)(unaff_s0,0x43,99);\n    pcVar4 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fa4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    uVar2 = (*pcVar4)(unaff_s0);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fbc))(uVar3,unaff_s0,uVar2);\n    param_1 = uVar3;\n    func_55db7891c2234362();\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = &UNK_00400c2c;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f8c))();\n    unaff_s1 = uVar3;\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4c7e4df483794caf(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  code **ppcVar5;\n  code *pcVar6;\n  undefined auStack_d0 [99];\n  undefined uStack_6d;\n  int iStack_6c;\n  undefined *puStack_64;\n  undefined auStack_40 [52];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puVar4 = auStack_40;\n  auStack_40[0] = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  func_5e3bf71df30a42f9();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_64 = puVar1;\n  iStack_6c = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar3 = (*(code *)PTR_memset_00412068)(auStack_d0,0x43,99);\n  uStack_6d = 0;\n  (*(code *)PTR_strcat_00412080)(puVar4,uVar3);\n  func_5afd2a4a55bf47b4(puVar4);\n  if (iStack_6c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (___CTOR_LIST__ != (code *)0xffffffff) {\n    ppcVar5 = (code **)&__CTOR_LIST__;\n    pcVar6 = ___CTOR_LIST__;\n    do {\n      ppcVar5 = ppcVar5 + -1;\n      (*pcVar6)();\n      pcVar6 = *ppcVar5;\n    } while (pcVar6 != (code *)0xffffffff);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_59b273a51c5f418c(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_148 [56];\n  undefined *puStack_110;\n  undefined auStack_108 [99];\n  undefined uStack_a5;\n  int iStack_a4;\n  undefined4 uStack_a0;\n  undefined *puStack_9c;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar3 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_strcat_0041207c)(param_1,uVar2);\n  func_1756eeeb834c434b(param_1);\n  if (iStack_14 == *(int *)puVar3) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_110 = &_gp;\n  puStack_9c = puVar3;\n  puVar3 = auStack_148;\n  auStack_148[0] = 0;\n  iStack_a4 = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_a0 = param_1;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_108,0x43,99);\n  uStack_a5 = 0;\n  (**(code **)(puStack_110 + -0x7fc4))(puVar3,uVar2,0x32);\n  func_1756eeeb834c434b();\n  if (iStack_a4 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_110 + -0x7fa0))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d1cc50622b5f4335(void)\n\n{\n  int iStack_dc;\n  int *piStack_d8;\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  for (iStack_dc = 0; iStack_dc < 1; iStack_dc = iStack_dc + 1) {\n    piStack_d8 = &iStack_dc;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_memcpy_00412080)(auStack_70,piStack_d8,100);\n  uStack_d = 0;\n  func_63fe3f5038764e82(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041207c) {\n    (*(code *)PTR___stack_chk_fail_00412074)();\n  }\n  return;\n}\n\n",
        "\nvoid func_96aa5bf6481c4d8f(void)\n\n{\n  int iVar1;\n  int iStack_1a8;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412060)(auStack_198,0,0x18c);\n  for (iStack_1a8 = 0; iStack_1a8 < 1; iStack_1a8 = iStack_1a8 + 1) {\n    (*(code *)PTR_wcscpy_00412078)(&uStack_19c,&UNK_004019e0);\n  }\n  iVar1 = (*(code *)PTR_popen_00412058)(&uStack_19c,&UNK_004019fc);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_0041204c)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ef23af94e02a435d(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  (*(code *)PTR_wmemset_0041206c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar1 = (*(code *)PTR_wcslen_00412074)(auStack_19c);\n  (*(code *)PTR_wcsncat_00412064)(auStack_32c,auStack_19c,uVar1);\n  func_19c3353c11a94e55(auStack_32c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3c90d8a37c304120(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar1 = *(undefined4 *)PTR_CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData_00412040;\n  (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_0041207c)(uVar1,auStack_70);\n  func_0b934dbe8f9a4da6(uVar1);\n  (*(code *)PTR_free_00412090)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_53246d6d831441ab(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  \n  puVar1 = (undefined *)(*(code *)PTR_malloc_00412074)(100);\n  *puVar1 = 0;\n  iVar2 = (*(code *)PTR_strlen_00412064)(puVar1);\n  if (1 < 100U - iVar2) {\n    iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_00401b74,&UNK_00401b70);\n    if (iVar3 != 0) {\n      iVar4 = (*(code *)PTR_fgets_00412088)(puVar1 + iVar2,100 - iVar2,iVar3);\n      if (iVar4 == 0) {\n        func_52831949ae5f412f(&UNK_00401b84);\n        puVar1[iVar2] = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iVar3);\n    }\n  }\n  func_d156baaaf3284d0f(puVar1);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0175b2a1afe54bb0(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar5 = (*(code *)PTR_calloc_0041204c)(0x14,1);\n  uVar4 = _UNK_00401934;\n  uVar3 = _UNK_00401930;\n  uVar1 = uVar5 & 3;\n  *(uint *)(uVar5 - uVar1) =\n       *(uint *)(uVar5 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401930 >> uVar1 * 8;\n  uVar1 = uVar5 + 3 & 3;\n  puVar2 = (uint *)((uVar5 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar1 = uVar5 + 4 & 3;\n  puVar2 = (uint *)((uVar5 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n  uVar1 = uVar5 + 7 & 3;\n  puVar2 = (uint *)((uVar5 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n  *(undefined *)(uVar5 + 8) = UNK_00401938;\n  *(undefined *)(uVar5 + 9) = UNK_00401939;\n  *(undefined *)(uVar5 + 10) = UNK_0040193a;\n  func_04fa67b3f04b40d3(uVar5);\n  (*(code *)PTR_free_00412080)(uVar5);\n  return;\n}\n\n",
        "\nvoid func_a29d91baf25249c6(void)\n\n{\n  undefined4 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined4 **ppuStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  if (staticFive == 5) {\n    ppuStack_14 = apuStack_28;\n    puStack_10 = apuStack_28[0];\n    func_9d57d0922fe5442f(*apuStack_28[0]);\n    func_9d57d0922fe5442f(puStack_10[1]);\n  }\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_70b0c305be284123(void)\n\n{\n  undefined *puVar1;\n  undefined **ppuVar2;\n  undefined **ppuVar3;\n  undefined *apuStack_1b0 [100];\n  undefined *apuStack_20 [3];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  apuStack_20[0] = &_gp;\n  ppuVar3 = apuStack_1b0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  ppuVar2 = ppuVar3;\n  do {\n    *ppuVar2 = (undefined *)0x5;\n    ppuVar2 = ppuVar2 + 1;\n  } while (ppuVar2 != apuStack_20);\n  func_27748037523d42e8(apuStack_1b0[0]);\n  (**(code **)(apuStack_20[0] + -0x7f9c))();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(apuStack_20[0] + -0x7fa8))();\n  if (ppuVar3 != (undefined **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d0bc9afb12e14812(void)\n\n{\n  int iVar1;\n  undefined *puStack_18;\n  int iStack_14;\n  int iStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_18 = (undefined *)(*(code *)PTR_malloc_00412074)(100);\n  *puStack_18 = 0;\n  iStack_14 = (*(code *)PTR_strlen_00412064)(puStack_18);\n  if (1 < 100U - iStack_14) {\n    iStack_10 = (*(code *)PTR_fopen_00412098)(&UNK_00401bc4,&UNK_00401bc0);\n    if (iStack_10 != 0) {\n      iVar1 = (*(code *)PTR_fgets_00412088)(puStack_18 + iStack_14,100 - iStack_14,iStack_10);\n      if (iVar1 == 0) {\n        func_ab07b76391a24e11(&UNK_00401bd4);\n        puStack_18[iStack_14] = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iStack_10);\n    }\n  }\n  func_f889b98040a74c3a(&puStack_18);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_026be49410a043b2(int param_1)\n\n{\n  uint uStack_78;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  for (uStack_78 = 0; uStack_78 < 100; uStack_78 = uStack_78 + 1) {\n    auStack_70[uStack_78] = *(undefined *)(param_1 + uStack_78);\n  }\n  auStack_70[99] = 0;\n  func_5fdfc8b301634983(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nundefined4 * CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_61d21829b5c74f9c(puVar1);\n  return puVar1;\n}\n\n",
        "\nvoid func_c3825f8343054aaf(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(4);\n  puVar2 = (undefined4 *)*puVar1;\n  (*(code *)PTR_free_00412088)(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400b14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401270,*puVar2);\n  return;\n}\n\n",
        "\nvoid func_80e6516ad5e04c42(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_0041207c)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401454);\n    uStack_88 = func_c5dfed63931a4c35(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_88,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,&uStack_78,99,0);\n      if (1 < iVar3 + 1U) {\n        auStack_74[iVar3 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  iVar2 = *(int *)PTR_stdout_00412074;\n  (*(code *)PTR___fprintf_chk_00412064)(iVar2,1,&uStack_78);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (iVar2 == 0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_b5fb7530bf7041ce(void)\n\n{\n  undefined4 uVar1;\n  undefined2 uVar2;\n  undefined uVar3;\n  undefined4 *puVar4;\n  \n  puVar4 = (undefined4 *)(*(code *)PTR_malloc_00412074)(0x14);\n  uVar3 = UNK_0040122e;\n  uVar2 = _UNK_0040122c;\n  uVar1 = _UNK_00401228;\n  if (*(int *)PTR_globalFive_00412040 != 5) {\n    return;\n  }\n  *puVar4 = _UNK_00401224;\n  puVar4[1] = uVar1;\n  *(undefined2 *)(puVar4 + 2) = uVar2;\n  *(undefined *)((int)puVar4 + 10) = uVar3;\n  func_c63d3a854974460e(puVar4);\n                    /* WARNING: Could not recover jumptable at 0x00400a9c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar4);\n  return;\n}\n\n",
        "\nvoid func_08ff95b98ddd4b94(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412078)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412068)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_0041208c)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_0041205c)(iStack_38,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_871903f3fad145f3(ppppuStack_2c,ppppuStack_28);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a72dd64e84cc4acb(void)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int iVar3;\n  int iStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_18 = -1;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR___isoc99_fscanf_00412094)\n            (*(undefined4 *)PTR_stdin_0041206c,&UNK_004012a4,&iStack_18);\n  piVar2 = (int *)(*(code *)PTR_calloc_00412050)(iStack_18 << 2,1);\n  iVar3 = *piVar2;\n  func_2782583f78d04b51();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_0041208c)(piVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7d53883b39a241d3(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar4;\n  undefined *puVar5;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412088)(200);\n  *puVar2 = 0;\n  puVar5 = (undefined *)register0x00000074;\n  while( true ) {\n    puVar3 = puVar2;\n    puVar1 = PTR___stack_chk_guard_0041209c;\n    *(undefined **)(puVar5 + -8) = unaff_s2;\n    *(undefined **)(puVar5 + -0xc) = unaff_s1;\n    unaff_s1 = puVar5 + -0x1a4;\n    *(code **)(puVar5 + -4) = unaff_retaddr;\n    *(undefined4 **)(puVar5 + -0x10) = unaff_s0;\n    *(undefined **)(puVar5 + -0x1b0) = &_gp;\n    *(undefined4 *)(puVar5 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041209c;\n    (*(code *)PTR_wmemset_0041206c)(unaff_s1,0x43,99);\n    pcVar4 = *(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f90);\n    *(undefined4 *)(puVar5 + -0x18) = 0;\n    (*pcVar4)(puVar3,unaff_s1);\n    puVar2 = puVar3;\n    func_9402069227f24af9();\n    if (*(int *)(puVar5 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_54d_badSink;\n    (**(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f8c))();\n    unaff_s0 = puVar3;\n    unaff_s2 = puVar1;\n    puVar5 = puVar5 + -0x1c0;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400c8c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f80))(puVar3);\n  return;\n}\n\n",
        "\nvoid func_0982a9142e5b4ad3(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_14 = auStack_88;\n  (*(code *)PTR_memset_0041205c)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_14 + -8;\n  func_ff8703ec9a9a465e(puStack_10);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_f97f3958a29f484d(int param_1)\n\n{\n  char cVar1;\n  char *pcVar2;\n  \n  pcVar2 = *(char **)(param_1 + 8);\n  cVar1 = *pcVar2;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b04:\n                    /* WARNING: Could not recover jumptable at 0x00400b14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412094)(pcVar2);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_ada85e5328d144b6(&UNK_004013b4);\n      goto code_r0x00400b04;\n    }\n    cVar1 = pcVar2[1];\n    pcVar2 = pcVar2 + 1;\n  } while( true );\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid func_14c8f888d42e4271(void)\n\n{\n  undefined *puStack_28;\n  undefined4 uStack_20;\n  undefined4 *puStack_1c;\n  undefined4 *puStack_18;\n  undefined4 uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_28 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_1c = &uStack_20;\n  puStack_18 = &uStack_20;\n  uStack_20 = 0;\n  uStack_14 = 0;\n  uStack_14 = (*(code *)PTR_calloc_00412050)(1,4);\n  *puStack_1c = uStack_14;\n  puStack_10 = (undefined4 *)*puStack_18;\n  *puStack_10 = 5;\n  func_5a1e19ad242e4088(*puStack_10);\n  (**(code **)(puStack_28 + -0x7f9c))(puStack_10);\n  if (iStack_c != **(int **)(puStack_28 + -0x7fa0)) {\n    (**(code **)(puStack_28 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_f898226039d24379(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_78d74e6799094b01(puVar1);\n  func_3d3a47fe6081457e(puVar1);\n  return;\n}\n\n",
        "\nvoid func_802a7a68c3164bc2(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined auStack_1b0 [8];\n  undefined *puStack_1a8;\n  undefined auStack_19c [400];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_1a8 = auStack_19c;\n  puVar2 = auStack_1b0;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  func_754794784e4a4cc1();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_02c9051cdf5a4b56(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined4 **ppuVar2;\n  undefined4 uVar3;\n  undefined4 auStack_2a8 [50];\n  undefined *puStack_1e0;\n  undefined4 *puStack_1d8;\n  int iStack_1d4;\n  undefined *puStack_1cc;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar3 = *param_1;\n  (*(code *)PTR_wmemset_00412060)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (*(code *)PTR_wcscpy_00412080)(uVar3,auStack_1a4);\n  func_66e74658c3004016(uVar3);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_1e0 = &_gp;\n  ppuVar2 = &puStack_1d8;\n  puStack_1d8 = auStack_2a8;\n  auStack_2a8[0] = 0;\n  iStack_1d4 = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_1cc = auStack_1a4;\n  func_02c9051cdf5a4b56();\n  if (iStack_1d4 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_1e0 + -0x7f9c))();\n  if (ppuVar2 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_78c81f64764d44e8(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_d4 [100];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  iVar3 = (*(code *)PTR__MIPS_STUBS__00412094)(auStack_d4,uVar2,100);\n  func_d48ec7f289f4478e();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_796540dcbc26482d(void)\n\n{\n  undefined auStack_278 [400];\n  undefined4 auStack_e8 [50];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  undefined *puStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_18 = auStack_e8;\n  puStack_14 = auStack_278;\n  auStack_e8[0] = 0;\n  puStack_10 = puStack_18;\n  func_541adcc0e5b14438(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7f94)) {\n    (**(code **)(puStack_20 + -0x7f9c))();\n  }\n  return;\n}\n\n",
        "\nvoid func_b1cdb0ace020486c(void)\n\n{\n  undefined4 *puVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(200);\n  *puVar1 = 0;\n  (*(code *)PTR_wmemset_00412058)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscpy_00412078)(puVar1,auStack_19c);\n  func_9b19a66b155c478f(puVar1);\n  (*(code *)PTR_free_0041208c)(puVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_76db37aa937c4c5a\n               (uint param_1,undefined4 param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint uVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint in_t0;\n  uint auStack_70 [24];\n  undefined uStack_d;\n  uint uStack_c;\n  \n  puVar5 = PTR___stack_chk_guard_00412084;\n  puVar10 = auStack_70;\n  uVar11 = *(uint *)PTR___stack_chk_guard_00412084;\n  uVar7 = param_1;\n  puVar8 = puVar10;\n  uStack_c = uVar11;\n  do {\n    uVar6 = uVar7;\n    uVar7 = uVar6 + 4 & 3;\n    puVar9 = puVar8 + 4;\n    uVar1 = uVar6 + 8 & 3;\n    uVar2 = uVar6 + 0xc & 3;\n    uVar3 = uVar6 & 3;\n    uVar4 = uVar6 + 7 & 3;\n    in_t0 = (*(int *)((uVar6 + 4) - uVar7) << uVar7 * 8 | in_t0 & 0xffffffffU >> (4 - uVar7) * 8) &\n            -1 << (uVar4 + 1) * 8 | *(uint *)((uVar6 + 7) - uVar4) >> (3 - uVar4) * 8;\n    uVar7 = uVar6 + 0xb & 3;\n    param_4 = (*(int *)((uVar6 + 8) - uVar1) << uVar1 * 8 | param_4 & 0xffffffffU >> (4 - uVar1) * 8\n              ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xb) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0xf & 3;\n    uVar11 = (*(int *)((uVar6 + 0xc) - uVar2) << uVar2 * 8 | uVar11 & 0xffffffffU >> (4 - uVar2) * 8\n             ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xf) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 3 & 3;\n    param_3 = (*(int *)(uVar6 - uVar3) << uVar3 * 8 | param_3 & 0xffffffffU >> (4 - uVar3) * 8) &\n              -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 3) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0x10;\n    puVar8[1] = in_t0;\n    puVar8[2] = param_4;\n    *puVar8 = param_3;\n    puVar8[3] = uVar11;\n    puVar8 = puVar9;\n  } while (uVar7 != param_1 + 0x60);\n  uVar1 = uVar7 & 3;\n  uVar2 = uVar6 + 0x13 & 3;\n  *puVar9 = (*(int *)(uVar7 - uVar1) << uVar1 * 8 | uVar11 & 0xffffffffU >> (4 - uVar1) * 8) &\n            -1 << (uVar2 + 1) * 8 | *(uint *)((uVar6 + 0x13) - uVar2) >> (3 - uVar2) * 8;\n  uStack_d = 0;\n  func_ad126cace264406a();\n  if (uStack_c == *(uint *)puVar5) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar10 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f62aaec584a44ab8(void)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  \n  iVar2 = func_0604873066e74c22();\n  if (iVar2 == 0) {\n    return;\n  }\n  pcVar3 = (char *)(*(code *)PTR_malloc_00412078)(1);\n  cVar1 = *pcVar3;\n  (*(code *)PTR_free_0041208c)(pcVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400c40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_004012f8,(int)cVar1);\n  return;\n}\n\n",
        "\nundefined4\nfunc_d84ea52c4aa24b52(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStackX_0;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120ac;\n  iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  uStackX_0 = param_1;\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401dd0);\n    uStack_2a = (*(code *)PTR_htons_004120a0)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStackX_0 = (*(code *)PTR_strtoul_00412080)(auStack_1c,0,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120ac) {\n    (*(code *)PTR___stack_chk_fail_004120a4)();\n  }\n  return uStackX_0;\n}\n\n",
        "\nvoid func_f63c739f0761450e(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_00412058)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  puStack_78 = puStack_74 + -8;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7fa0))(puStack_78,auStack_70,100);\n  puStack_78[99] = 0;\n  func_bd109d5ebcd845d1(puStack_78);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa4)) {\n    (**(code **)(puStack_80 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_71175a5e83fe4023(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = *(undefined4 *)(param_1 + 8);\n  (*(code *)PTR_wmemset_00412060)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_0041205c)(uVar1,auStack_19c);\n  func_c34ed3c78f204fda(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_61fc8859dd6c4c6a(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(800);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    func_f9f044b4d4ae4a99(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_71aac24469424710(void)\n\n{\n  int iVar1;\n  int iStack_1cc;\n  int iStack_1c8;\n  int iStack_1c4;\n  undefined4 *puStack_1c0;\n  int iStack_1bc;\n  int iStack_1b8;\n  uint uStack_1b4;\n  undefined4 *puStack_1b0;\n  undefined2 uStack_1ac;\n  undefined2 uStack_1aa;\n  undefined4 uStack_1a8;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412078)(auStack_198,0,0x18c);\n  puStack_1c0 = &uStack_19c;\n  iStack_1bc = 0xffffffff;\n  iStack_1b8 = (*(code *)PTR_wcslen_00412074)(puStack_1c0);\n  iStack_1bc = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iStack_1bc != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_1ac,0,0x10);\n    uStack_1ac = 2;\n    uStack_1a8 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d10);\n    uStack_1aa = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar1 = (*(code *)PTR_connect_0041205c)(iStack_1bc,&uStack_1ac,0x10);\n    if (((iVar1 != -1) &&\n        (uStack_1b4 = (*(code *)PTR_recv_00412058)\n                                (iStack_1bc,puStack_1c0 + iStack_1b8,(99 - iStack_1b8) * 4,0),\n        uStack_1b4 != 0xffffffff)) && (uStack_1b4 != 0)) {\n      puStack_1c0[(uStack_1b4 >> 2) + iStack_1b8] = 0;\n      puStack_1b0 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(puStack_1c0,0xd);\n      if (puStack_1b0 != (undefined4 *)0x0) {\n        *puStack_1b0 = 0;\n      }\n      puStack_1b0 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(puStack_1c0,10);\n      if (puStack_1b0 != (undefined4 *)0x0) {\n        *puStack_1b0 = 0;\n      }\n    }\n  }\n  if (iStack_1bc != -1) {\n    (*(code *)PTR_close_00412054)(iStack_1bc);\n  }\n  iVar1 = (*(code *)PTR___isoc99_swscanf_0041208c)(puStack_1c0,&UNK_00401d1c,&iStack_1cc);\n  if (iVar1 == 1) {\n    iStack_1c4 = 0;\n    for (iStack_1c8 = 0; iStack_1c8 < iStack_1cc; iStack_1c8 = iStack_1c8 + 1) {\n      iStack_1c4 = iStack_1c4 + 1;\n    }\n    func_dbf68ee708cb41c4(iStack_1c4);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400bd8) */\n\nvoid func_1704bafa7ac84093(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_badGlobal_00412048 == 0) {\n    return;\n  }\n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_5773c9489485496d(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400b3c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_ce278d6285b4402c(void)\n\n{\n  int iVar1;\n  undefined4 uStack_45c;\n  int iStack_458;\n  int iStack_454;\n  undefined2 uStack_450;\n  undefined2 uStack_44e;\n  undefined4 uStack_44c;\n  undefined auStack_440 [16];\n  undefined auStack_430 [32];\n  undefined auStack_410 [1028];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    uStack_45c = 0x10;\n    iStack_454 = 0xffffffff;\n    iStack_458 = -1;\n    iStack_454 = (*(code *)PTR_socket_00412060)(2,2,6);\n    if (iStack_454 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_450,0,0x10);\n      uStack_450 = 2;\n      uStack_44c = 0;\n      uStack_44e = (*(code *)PTR_htons_00412098)(20000);\n      iVar1 = (*(code *)PTR_bind_0041207c)(iStack_454,&uStack_450,0x10);\n      if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_00412068)(iStack_454,5), iVar1 != -1)) &&\n          (iStack_458 = (*(code *)PTR_accept_00412090)(iStack_454,0,0), iStack_458 != -1)) &&\n         ((iVar1 = (*(code *)PTR_getsockname_00412064)(iStack_458,auStack_440,&uStack_45c),\n          iVar1 != -1 &&\n          (iVar1 = (*(code *)PTR_getnameinfo_0041206c)\n                             (auStack_440,0x10,auStack_410,0x401,auStack_430,0x20,2), iVar1 == 0))))\n      {\n        iVar1 = (*(code *)PTR_strcmp_004120b8)(&UNK_00401d90,auStack_410);\n        if (iVar1 == 0) {\n          (*(code *)PTR_send_00412050)(iStack_458,&UNK_00401da4,0xf,0);\n        }\n        else {\n          iVar1 = (*(code *)PTR_send_00412050)(iStack_458,&UNK_00401db4,8,0);\n          if (iVar1 == -1) {\n            func_4fcf235729244e50(&UNK_00401dc0);\n          }\n        }\n      }\n    }\n    if (iStack_454 != -1) {\n      (*(code *)PTR_close_00412058)(iStack_454);\n    }\n    if (iStack_458 != -1) {\n      (*(code *)PTR_close_00412058)(iStack_458);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0b3b08bbc8884fd4(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined uStack_88;\n  undefined *puStack_28;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_28 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  iVar2 = func_38ee3b4cd7634314();\n  if (iVar2 == 0) {\n    puVar3 = &uStack_90;\n    uStack_90 = _UNK_004012c4;\n    uStack_8c = _UNK_004012c8;\n    uStack_88 = UNK_004012cc;\n    puVar4 = puVar3;\n    func_11b0c86c29214170();\n    iVar2 = func_38ee3b4cd7634314();\n  }\n  else {\n    uStack_20 = _UNK_004012d0;\n    uStack_1c = _UNK_004012d4;\n    uStack_18 = UNK_004012d8;\n    puVar3 = (undefined4 *)(**(code **)(puStack_28 + -0x7f9c))(&uStack_20);\n    puVar4 = puVar3;\n    func_11b0c86c29214170();\n    iVar2 = func_38ee3b4cd7634314();\n  }\n  if (iVar2 == 0) {\n    (**(code **)(puStack_28 + -0x7f98))();\n    puVar4 = puVar3;\n  }\n  if (iStack_14 != *(int *)puVar1) {\n    (**(code **)(puStack_28 + -0x7fa8))();\n    if (puVar4 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ab0bd88f176a4551(void)\n\n{\n  func_ce6b541fa73241f5(0);\n  return;\n}\n\n",
        "\nvoid func_e4f71f7786824fb4(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  iVar2 = *(int *)(param_1 + 8);\n  (*(code *)PTR_wmemset_00412064)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (*(code *)PTR_wcscat_00412060)(iVar2,auStack_1a4);\n  func_46fc44101d6541c5();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7ab38aa586fa4651\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_0041206c)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_173028316f584f61(puVar1);\n  func_d7742f519da54331(puVar1);\n  return;\n}\n\n",
        "\nvoid func_dac5a27e3e734899(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_108 [49];\n  undefined uStack_d7;\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412058)(auStack_108,0x41,0x31);\n  uStack_d7 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412060)(auStack_70);\n  (*(code *)PTR_memmove_00412084)(auStack_70,auStack_108,uVar1);\n  uStack_d = 0;\n  func_a9c2c5422b514f18(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e7c4017215994f97(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    puVar4 = (undefined4 *)0x0;\n  }\n  else {\n    puVar4 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(0x32);\n    *(undefined *)((int)puVar4 + 0x31) = 0;\n    *puVar4 = 0x41414141;\n    puVar4[1] = 0x41414141;\n    puVar4[2] = 0x41414141;\n    puVar4[3] = 0x41414141;\n    puVar4[4] = 0x41414141;\n    puVar4[5] = 0x41414141;\n    puVar4[6] = 0x41414141;\n    puVar4[7] = 0x41414141;\n    puVar4[8] = 0x41414141;\n    puVar4[9] = 0x41414141;\n    puVar4[10] = 0x41414141;\n    puVar4[0xb] = 0x41414141;\n    *(undefined *)(puVar4 + 0xc) = 0x41;\n  }\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  iVar3 = (*(code *)PTR_strlen_0041206c)(iVar2);\n  if (iVar3 != 0) {\n    iVar2 = (*(code *)PTR_memcpy_00412090)(iVar2,puVar4,iVar3);\n  }\n  uStack_15 = 0;\n  func_1b8900d352da4d1c();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(puVar4);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_2fc0385e493d4bd2(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 ******ppppppuStack_2c;\n  undefined4 ******ppppppuStack_28;\n  undefined4 *******pppppppuStack_24;\n  undefined4 *******pppppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppppuStack_2c = &pppppppuStack_24;\n  ppppppuStack_28 = &pppppppuStack_24;\n  pppppppuStack_24 = &ppppppuStack_2c;\n  pppppppuStack_20 = &ppppppuStack_2c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401b90);\n      uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n      iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_1c,0x10);\n      if (iVar2 != -1) {\n        (*(code *)PTR_recv_00412058)(iVar1,&ppppppuStack_2c,8,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412054)(iVar1);\n    }\n  }\n  linkedListPrev = ppppppuStack_28;\n  linkedListNext = ppppppuStack_2c;\n  *ppppppuStack_28 = ppppppuStack_2c;\n  linkedListNext[1] = linkedListPrev;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b6249875cf29449d(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412054)(1,8);\n  iVar2 = func_15d03f2baa1748f1();\n  if (iVar2 == 0) {\n    return;\n  }\n  *puVar1 = 1;\n  puVar1[1] = 1;\n  func_828bf8a7b98c4a31(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_9ddf0962cf6f4da8(void)\n\n{\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_7c = auStack_c0;\n  puStack_74 = auStack_128;\n  auStack_c0[0] = 0;\n  puStack_78 = puStack_7c;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fb0))(puStack_7c,auStack_70);\n  func_83b3d70bfc464f7d(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_f6a0dd825e584322(void)\n\n{\n  undefined4 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined4 **ppuStack_14;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  ppuStack_14 = apuStack_28;\n  func_eddf5f1090a242aa(*apuStack_28[0]);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_1ebdfea977f94422(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 *puVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined4 auStack_78 [24];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_e8,0x41,99);\n  puVar7 = auStack_78;\n  *(undefined *)(iVar2 + 99) = 0;\n  puVar3 = (undefined4 *)(iVar2 + -8);\n  puVar5 = puVar7;\n  do {\n    puVar6 = puVar5 + 4;\n    puVar4 = puVar3 + 4;\n    uVar10 = puVar3[1];\n    uVar9 = puVar3[2];\n    uVar8 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar10;\n    puVar5[2] = uVar9;\n    puVar5[3] = uVar8;\n    puVar3 = puVar4;\n    puVar5 = puVar6;\n  } while (puVar4 != (undefined4 *)(iVar2 + 0x58));\n  *puVar6 = *puVar4;\n  uStack_15 = 0;\n  func_17439b2541be4961();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar7 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_4f2e57e2e3bc431b(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined4 *puVar6;\n  undefined *puVar7;\n  undefined auStack_140 [99];\n  undefined uStack_dd;\n  int iStack_dc;\n  undefined4 *puStack_d4;\n  undefined *puStack_d0;\n  undefined *puStack_cc;\n  undefined *puStack_b8;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined uStack_7c;\n  undefined uStack_7b;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_90 = 0x41414141;\n  uStack_8c = 0x41414141;\n  uStack_88 = 0x41414141;\n  uStack_84 = 0x41414141;\n  uStack_80 = 0x41414141;\n  uStack_7c = 0x41;\n  puStack_b8 = &_gp;\n  uStack_7b = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412068)(auStack_78,0x41,99);\n  uStack_15 = 0;\n  puVar6 = &uStack_ac;\n  func_7c2b65cd98674ef6(&uStack_ac);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  puVar7 = &UNK_00400b7c;\n  (**(code **)(puStack_b8 + -0x7f98))();\n  puVar2 = PTR___stack_chk_guard_00412090;\n  puStack_d0 = puVar1;\n  iStack_dc = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_d4 = &uStack_ac;\n  puStack_cc = puVar7;\n  uVar3 = (*(code *)PTR_memset_00412068)(auStack_140,0x43,99);\n  uStack_dd = 0;\n  uVar4 = (*(code *)PTR_strlen_00412070)(uVar3);\n  iVar5 = (*(code *)PTR___memcpy_chk_0041207c)(uVar3,puVar6,uVar4,100);\n  uStack_dd = 0;\n  func_353161134aea49e0();\n  if (iStack_dc == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar5 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2af7c5e876d541ef(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  undefined auStack_40 [16];\n  undefined *puStack_30;\n  undefined4 *puStack_24;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  puStack_24 = &uStack_1c;\n  puStack_30 = &_gp;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  iVar2 = (*(code *)PTR_fgets_00412094)(puStack_24,0xe,*(undefined4 *)PTR_stdin_00412078);\n  if (iVar2 == 0) {\n    func_ac19771c051a44c8(&UNK_004013d4);\n    puVar3 = (undefined *)0xffffffff;\n  }\n  else {\n    puVar3 = (undefined *)(**(code **)(puStack_30 + -0x7fc0))(puStack_24,0,10);\n  }\n  if (iStack_c != *(int *)puVar1) {\n    unaff_retaddr = CWE617_Reachable_Assertion__fgets_53b_badSink;\n    (**(code **)(puStack_30 + -0x7f94))();\n    register0x00000074 = (BADSPACEBASE *)auStack_40;\n  }\n  while ((int)puVar3 < 6) {\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0x10) = &_gp;\n    unaff_retaddr = (code *)&UNK_00400c28;\n    puVar3 = &UNK_004014e4;\n    (*(code *)PTR___assert_fail_0041205c)(&UNK_004014e4,&UNK_00401408,0x20,__PRETTY_FUNCTION___0);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x20);\n  }\n  return;\n}\n\n",
        "\nvoid func_d14d7384de8a4a5e(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined auStack_d0 [104];\n  undefined4 uStack_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined4 uStack_58;\n  undefined4 uStack_54;\n  undefined4 uStack_50;\n  undefined4 uStack_4c;\n  undefined4 uStack_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined uStack_38;\n  undefined uStack_37;\n  undefined *puStack_30;\n  undefined auStack_28 [8];\n  undefined4 *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_30 = &_gp;\n  uStack_68 = 0x41414141;\n  uStack_64 = 0x41414141;\n  uStack_60 = 0x41414141;\n  uStack_5c = 0x41414141;\n  uStack_58 = 0x41414141;\n  uStack_54 = 0x41414141;\n  uStack_50 = 0x41414141;\n  uStack_4c = 0x41414141;\n  uStack_48 = 0x41414141;\n  uStack_44 = 0x41414141;\n  uStack_40 = 0x41414141;\n  uStack_3c = 0x41414141;\n  uStack_37 = 0;\n  uStack_38 = 0x41;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_d0,0x41,99);\n  puVar3 = auStack_28;\n  *(undefined *)(iVar2 + 99) = 0;\n  puStack_20 = &uStack_68;\n  func_e4729a2b15c54936();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_30 + -0x7f9c))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d71f10b40e2d4d8c(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int unaff_s1;\n  undefined auStack_150 [104];\n  undefined *puStack_e8;\n  undefined auStack_dc [199];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_e8 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar2 = (*(code *)PTR_memset_00412068)(auStack_150,0x41,99);\n  iVar4 = **(int **)(puStack_e8 + -0x7fe0);\n  *(undefined *)(iVar2 + 99) = 0;\n  if (iVar4 == 5) {\n    unaff_s1 = iVar2 + -8;\n  }\n  uVar3 = (**(code **)(puStack_e8 + -0x7fb8))(auStack_dc,0x43,199);\n  uStack_15 = 0;\n  iVar2 = (**(code **)(puStack_e8 + -0x7fc0))(uVar3,unaff_s1,200);\n  func_563753ce30dd460f();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_e8 + -0x7fa0))();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_aed72bde2c7b406a(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined auStack_70 [96];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  uStack_71 = 0;\n  puVar2 = (undefined4 *)(*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  puVar6 = auStack_dc;\n  uStack_10._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_10);\n  *puVar5 = *puVar3;\n  func_09c068c9f9344d3d();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d0e9f279685f40f1(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  uint uStack_40;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_40 = 0xffffffff;\n  iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401c84);\n    uStack_2a = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_00412058)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStack_40 = (*(code *)PTR_atoi_0041206c)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412054)(iVar1);\n  }\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_00412088)(uStack_40 << 2);\n  for (uStack_3c = 0; uStack_3c < uStack_40; uStack_3c = uStack_3c + 1) {\n    puVar3[uStack_3c] = 0;\n  }\n  func_bfb86c0eca39414d(*puVar3);\n  (*(code *)PTR_free_004120a4)(puVar3);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_7825223c843a4603(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_0041206c)(4);\n  uVar2 = *puVar1;\n  (*(code *)PTR_free_00412084)(puVar1);\n  func_aad9362c0eb34d59(uVar2);\n  return;\n}\n\n",
        "\nvoid func_7e948b5a36b6408d(int param_1)\n\n{\n  undefined *puVar1;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412094;\n  (*(code *)PTR_wmemset_0041206c)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (*(code *)PTR_wcscat_00412068)(param_1,auStack_1a4);\n  func_cae52a61af914c7b();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  if (param_1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ec9c8f3b583a439d(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar4 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(0x32);\n    *(undefined *)((int)puVar4 + 0x31) = 0;\n    *puVar4 = 0x41414141;\n    puVar4[1] = 0x41414141;\n    puVar4[2] = 0x41414141;\n    puVar4[3] = 0x41414141;\n    puVar4[4] = 0x41414141;\n    puVar4[5] = 0x41414141;\n    puVar4[6] = 0x41414141;\n    puVar4[7] = 0x41414141;\n    puVar4[8] = 0x41414141;\n    puVar4[9] = 0x41414141;\n    puVar4[10] = 0x41414141;\n    puVar4[0xb] = 0x41414141;\n    *(undefined *)(puVar4 + 0xc) = 0x41;\n  }\n  else {\n    puVar4 = (undefined4 *)0x0;\n  }\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  iVar3 = (*(code *)PTR_strlen_0041206c)(iVar2);\n  if (iVar3 != 0) {\n    iVar2 = (*(code *)PTR_memcpy_00412090)(iVar2,puVar4,iVar3);\n  }\n  uStack_15 = 0;\n  func_7cbdb63906f84887();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(puVar4);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_758ace6a436c4b92(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_b8 [56];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_80 = &_gp;\n  puVar3 = auStack_b8;\n  auStack_b8[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  func_758ace6a436c4b92Data = puVar3;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa8))(puVar3,uVar2);\n  func_6f787d6761574187();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa4))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2cb401820db74db4(void)\n\n{\n  int iVar1;\n  int iStack_84;\n  int iStack_80;\n  int iStack_7c;\n  undefined4 *puStack_78;\n  int iStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_0041205c)(auStack_6c,0,0x60);\n  puStack_78 = &uStack_70;\n  iStack_74 = (*(code *)PTR_strlen_00412068)(puStack_78);\n  if (1 < 100U - iStack_74) {\n    iVar1 = (*(code *)PTR_fgets_00412088)\n                      ((int)puStack_78 + iStack_74,100 - iStack_74,*(undefined4 *)PTR_stdin_00412064\n                      );\n    if (iVar1 == 0) {\n      func_81ee74f019ef426d(&UNK_00401b00);\n      *(undefined *)((int)puStack_78 + iStack_74) = 0;\n    }\n    else {\n      iStack_74 = (*(code *)PTR_strlen_00412068)(puStack_78);\n      if ((iStack_74 != 0) && (*(char *)((int)puStack_78 + iStack_74 + -1) == '\\n')) {\n        *(undefined *)((int)puStack_78 + iStack_74 + -1) = 0;\n      }\n    }\n  }\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412060)(puStack_78,&UNK_00401b10,&iStack_84);\n  if (iVar1 == 1) {\n    iStack_7c = 0;\n    for (iStack_80 = 0; iStack_80 < iStack_84; iStack_80 = iStack_80 + 1) {\n      iStack_7c = iStack_7c + 1;\n    }\n    func_fc37fe52eee54a1c(iStack_7c);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_290b7c9783f6433b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  puVar5 = (undefined *)0xffffffff;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) goto code_r0x00400b18;\n  do {\n    while( true ) {\n      iVar2 = (*(code *)PTR___assert_fail_00412050)\n                        (&UNK_00401534,&UNK_00401454,0x7e,__PRETTY_FUNCTION___0);\ncode_r0x00400b18:\n      uStack_38 = 0;\n      uStack_34 = 0;\n      uStack_30 = 0;\n      uStack_3c = 0x26987;\n      puVar3 = (undefined *)(*(code *)PTR_bind_0041207c)(iVar2,&uStack_3c,0x10);\n      if (puVar3 != puVar5) break;\ncode_r0x00400b68:\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n    puVar3 = (undefined *)(*(code *)PTR_listen_0041206c)(iVar2,5);\n    if (puVar3 == puVar5) goto code_r0x00400b68;\n    puVar3 = (undefined *)(*(code *)PTR_accept_00412090)(iVar2,0,0);\n    if (puVar3 == puVar5) goto code_r0x00400b68;\n    puVar5 = auStack_2c;\n    iVar4 = (*(code *)PTR_recv_00412058)(puVar3,puVar5,0xd,0);\n    if (iVar4 + 1U < 2) {\n      (*(code *)PTR_close_00412054)(iVar2);\n      (*(code *)PTR_close_00412054)(puVar3);\n    }\n    else {\n      auStack_2c[iVar4] = 0;\n      iVar4 = (*(code *)PTR_strtol_0041205c)(puVar5,0,10);\n      (*(code *)PTR_close_00412054)(iVar2);\n      (*(code *)PTR_close_00412054)();\n      if (5 < iVar4) {\n        if (iStack_1c == *(int *)puVar1) {\n          return;\n        }\n        (*(code *)PTR___stack_chk_fail_00412094)();\n        if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*(code *)PTR_puts_00412088)();\n          return;\n        }\n        return;\n      }\n    }\n  } while( true );\n}\n\n",
        "\nvoid func_9fa44c3196ab480c(int param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_1e0 [8];\n  undefined4 *puStack_1d8;\n  int iStack_1cc;\n  undefined *puStack_1c8;\n  undefined *puStack_1c4;\n  undefined *puStack_1b0;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  puStack_1b0 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  uVar2 = *(undefined4 *)(param_1 + 8);\n  (*(code *)PTR_wmemset_00412064)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (**(code **)(puStack_1b0 + -0x7fc0))(uVar2,auStack_1a4);\n  func_451900c81f004ffa(uVar2);\n  (**(code **)(puStack_1b0 + -0x7f8c))(uVar2);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  puVar3 = &UNK_00400b58;\n  (**(code **)(puStack_1b0 + -0x7f98))();\n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_1cc = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_1c8 = auStack_1a4;\n  puStack_1c4 = puVar3;\n  puStack_1d8 = (undefined4 *)(*(code *)PTR_malloc_00412080)(200);\n  puVar3 = auStack_1e0;\n  *puStack_1d8 = 0;\n  func_9fa44c3196ab480c();\n  if (iStack_1cc == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f2673fe86526405c(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined auStack_138 [104];\n  undefined auStack_d0 [56];\n  undefined *puStack_98;\n  undefined4 uStack_8c;\n  undefined4 *puStack_88;\n  undefined4 *puStack_84;\n  undefined *puStack_80;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined4 uStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_98 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_88 = &uStack_8c;\n  puStack_84 = &uStack_8c;\n  puStack_80 = auStack_d0;\n  puStack_7c = auStack_138;\n  (*(code *)PTR_memset_00412058)(puStack_80,0x41,0x31);\n  puVar1 = puStack_98;\n  puStack_80[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc8))(puStack_7c,0x41,99);\n  puVar1 = puStack_98;\n  puStack_7c[99] = 0;\n  puStack_78 = puStack_80;\n  *puStack_88 = puStack_80;\n  uStack_74 = *puStack_84;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar2 = (**(code **)(puStack_98 + -0x7fc0))(auStack_70);\n  (**(code **)(puStack_98 + -0x7f9c))(auStack_70,uStack_74,uVar2);\n  uStack_d = 0;\n  func_ed33ae59812c4b9c(auStack_70);\n  if (iStack_c != **(int **)(puStack_98 + -0x7fa0)) {\n    (**(code **)(puStack_98 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_34e89b32673849ac(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_108 = _UNK_00401ae0;\n  uStack_104 = _UNK_00401ae4;\n  (*(code *)PTR_memset_00412064)(auStack_102,0,0xf4);\n  uVar1 = func_27656efd3f864bcb(&uStack_108);\n  (*(code *)PTR_putenv_0041205c)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_57cd2a09e5cd48f9(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uStack_dc;\n  undefined auStack_d8 [196];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  iVar2 = (*(code *)PTR_malloc_00412080)(400);\n  iVar3 = func_7bd8f6a9a0954f15();\n  if (iVar3 != 0) {\n    (*(code *)PTR_wmemset_00412060)(iVar2,0x41,99);\n    *(undefined4 *)(iVar2 + 0x18c) = 0;\n  }\n  uStack_dc = 0;\n  (*(code *)PTR_memset_0041206c)(auStack_d8,0,0xc4);\n  (*(code *)PTR___wcscat_chk_00412098)(&uStack_dc,iVar2,0x32);\n  iVar3 = iVar2;\n  func_6280e4cda7a84cdf();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(iVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_3e1ab8bdc664487e(void)\n\n{\n  int iVar1;\n  undefined4 uStack_3c;\n  int iStack_38;\n  int iStack_34;\n  int iStack_30;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_3c = 0xffffffff;\n  iStack_34 = 0xffffffff;\n  iStack_38 = -1;\n  iStack_34 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iStack_34 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar1 = (*(code *)PTR_bind_0041207c)(iStack_34,&uStack_2c,0x10);\n    if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_0041206c)(iStack_34,5), iVar1 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412090)(iStack_34,0,0), iStack_38 != -1)) &&\n       ((iStack_30 = (*(code *)PTR_recv_0041205c)(iStack_38,auStack_1c,0xd,0), iStack_30 != -1 &&\n        (iStack_30 != 0)))) {\n      auStack_1c[iStack_30] = 0;\n      uStack_3c = (*(code *)PTR_atoi_00412068)(auStack_1c);\n    }\n  }\n  if (iStack_34 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_34);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_2c395e6047404745(&uStack_3c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_5b93802960d74706(void)\n\n{\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_00412058)(auStack_32c,auStack_19c);\n  func_1e469849aa614eea(auStack_32c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_f7e08e507ff047f8(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  char cStack_79;\n  uint auStack_78 [3];\n  uint uStack_6c;\n  undefined uStack_69;\n  undefined auStack_68 [84];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412098;\n  auStack_78[0] = _UNK_004013e0;\n  auStack_78[1] = _UNK_004013e4;\n  auStack_78[2] = _UNK_004013e8;\n  uStack_6c = _UNK_004013ec;\n  (*(code *)PTR_memset_00412068)(auStack_68,0,0x54);\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    iVar2 = (*(code *)PTR___fgets_chk_00412064)\n                      ((undefined *)((int)&stack0xffffff94 + 3),0xffffffff,0x55,\n                       *(undefined4 *)PTR_stdin_00412070);\n    if (iVar2 == 0) {\n      func_d2d912787a5e4c06(&UNK_00401384);\n      uStack_6c = uStack_6c & 0xffffff00;\n    }\n    else {\n      iVar2 = (*(code *)PTR_strlen_00412074)(auStack_78);\n      if ((iVar2 != 0) && (pcVar3 = (char *)((int)auStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n        *pcVar3 = '\\0';\n      }\n    }\n  }\n  iVar2 = (*(code *)PTR_system_00412084)(auStack_78);\n  if (0 < iVar2) {\n    if (iStack_14 == *(int *)puVar1) {\n      return;\n    }\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  func_d2d912787a5e4c06(&UNK_00401394);\n  iVar2 = 1;\n  (*(code *)PTR_exit_0041207c)();\n  if (iVar2 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_puts_00412088)();\n  return;\n}\n\n",
        "\nvoid func_9071ed8c83a14fb4(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_c10a11a0c40447fc();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_f2b4ffb54e914410(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 auStack_30 [9];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puVar2 = (undefined4 *)&UNK_00401344;\n  puVar4 = auStack_30;\n  do {\n    puVar3 = puVar2 + 4;\n    puVar5 = puVar4 + 4;\n    *puVar4 = *puVar2;\n    uVar7 = puVar2[2];\n    uVar6 = puVar2[3];\n    puVar4[1] = puVar2[1];\n    puVar4[2] = uVar7;\n    puVar4[3] = uVar6;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != (undefined4 *)&UNK_00401364);\n  *puVar5 = _UNK_00401364;\n  uVar6 = (*(code *)PTR_wcsdup_00412060)();\n  func_61ae56b0ac394c9f(uVar6);\n  if (iStack_c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)(uVar6);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_b87a9bec8e8b4955(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  int iStack_41c;\n  undefined2 uStack_404;\n  undefined2 uStack_402;\n  undefined4 uStack_400;\n  undefined4 auStack_3f4 [4];\n  undefined4 uStack_3e4;\n  undefined4 uStack_3e0;\n  undefined auStack_3dc [976];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130a4;\n  auStack_3f4[0] = _UNK_00401da4;\n  auStack_3f4[1] = _UNK_00401da8;\n  auStack_3f4[2] = _UNK_00401dac;\n  auStack_3f4[3] = _UNK_00401db0;\n  uStack_3e4 = _UNK_00401db4;\n  uStack_3e0 = _UNK_00401db8;\n  (*(code *)PTR_memset_00413074)(auStack_3dc,0,0x3d0);\n  iStack_41c = -1;\n  iVar1 = (*(code *)PTR_wcslen_00413070)(auStack_3f4);\n  iVar2 = (*(code *)PTR_socket_0041305c)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00413074)(&uStack_404,0,0x10);\n    uStack_404 = 2;\n    uStack_400 = 0;\n    uStack_402 = (*(code *)PTR_htons_00413098)(0x6987);\n    iVar3 = (*(code *)PTR_bind_0041307c)(iVar2,&uStack_404,0x10);\n    if ((((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00413060)(iVar2,5), iVar3 != -1)) &&\n        (iStack_41c = (*(code *)PTR_accept_00413090)(iVar2,0,0), iStack_41c != -1)) &&\n       ((uVar4 = (*(code *)PTR_recv_00413054)(iStack_41c,auStack_3f4 + iVar1,(0xf9 - iVar1) * 4,0),\n        uVar4 != 0xffffffff && (uVar4 != 0)))) {\n      auStack_3f4[(uVar4 >> 2) + iVar1] = 0;\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_00413068)(auStack_3f4,0xd);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_00413068)(auStack_3f4,10);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413050)(iVar2);\n  }\n  if (iStack_41c != -1) {\n    (*(code *)PTR_close_00413050)(iStack_41c);\n  }\n  (*(code *)PTR_putenv_00413064)(auStack_3f4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130a4) {\n    (*(code *)PTR___stack_chk_fail_0041309c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a4a26dc2668e472e(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_14 = auStack_88;\n  (*(code *)PTR_memset_00412058)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_14 + -8;\n  func_54c0db6f65414003(puStack_10);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_a74ef383418d4a79\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412050)(100,8,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_04dd508bce3d456a(puVar1);\n  return;\n}\n\n",
        "\nvoid func_9e5331dfd8af4c32(void)\n\n{\n  int iVar1;\n  \n  iVar1 = func_4a49f0078875475f(0xffffffff);\n  if (iVar1 < 6) {\n    (*(code *)PTR___assert_fail_00412050)(&UNK_00401b18,&UNK_00401a40,0x34,__PRETTY_FUNCTION___0);\n  }\n  return;\n}\n\n",
        "\nvoid func_10eaa6da5c4f49d5\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_fopen_00412098)(&UNK_00401378,&UNK_00401374,param_3,param_4,&_gp);\n                    /* WARNING: Could not recover jumptable at 0x00400bac. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_fclose_00412068)(uVar1);\n  return;\n}\n\n",
        "\nvoid func_6c0865aade034ca7(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar1 = *(undefined4 *)\n           PTR_CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_68_badData_00412040;\n  (*(code *)PTR_wmemset_00412060)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscpy_0041207c)(uVar1,auStack_19c);\n  func_861f20803e634863(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b3f0c8a8e2734fdf(undefined4 *param_1)\n\n{\n  func_66b89f1cba9a4e5e(*param_1);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_07484a246cc740f7(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 auStack_3f4 [4];\n  undefined4 uStack_3e4;\n  undefined4 uStack_3e0;\n  undefined auStack_3dc [976];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  auStack_3f4[0] = _UNK_00401b24;\n  auStack_3f4[1] = _UNK_00401b28;\n  auStack_3f4[2] = _UNK_00401b2c;\n  auStack_3f4[3] = _UNK_00401b30;\n  uStack_3e4 = _UNK_00401b34;\n  uStack_3e0 = _UNK_00401b38;\n  (*(code *)PTR_memset_00412074)(auStack_3dc,0,0x3d0);\n  if (staticTrue != 0) {\n    iVar1 = (*(code *)PTR_wcslen_00412070)(auStack_3f4);\n    if (1 < 0xfaU - iVar1) {\n      iVar2 = (*(code *)PTR_fopen_004120a4)(&UNK_00401b04,&UNK_00401b00);\n      if (iVar2 != 0) {\n        iVar3 = (*(code *)PTR_fgetws_00412090)(auStack_3f4 + iVar1,0xfa - iVar1,iVar2);\n        if (iVar3 == 0) {\n          func_d04ba57dece84abe(&UNK_00401b14);\n          auStack_3f4[iVar1] = 0;\n        }\n        (*(code *)PTR_fclose_00412064)(iVar2);\n      }\n    }\n  }\n  (*(code *)PTR_putenv_00412068)(auStack_3f4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_edbc0c54a0d54281(void)\n\n{\n  undefined4 *in_zero;\n  \n  func_0d10d31894684a2e(*in_zero);\n                    /* WARNING: Could not recover jumptable at 0x00400a84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011c0,in_zero[1]);\n  return;\n}\n\n",
        "\nvoid func_04e14b9b69ee40c3(void)\n\n{\n  int iVar1;\n  undefined auStack_f0 [104];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  uint uStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_74 = auStack_f0;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puStack_74[99] = 0;\n  iVar1 = func_d1a0a9636cdc4001();\n  if (iVar1 != 0) {\n    puStack_7c = puStack_74 + -8;\n  }\n  (**(code **)(puStack_88 + -0x7fc4))(auStack_70,0x43,99);\n  auStack_70[99] = 0;\n  for (uStack_78 = 0; uStack_78 < 100; uStack_78 = uStack_78 + 1) {\n    puStack_7c[uStack_78] = auStack_70[uStack_78];\n  }\n  puStack_7c[99] = 0;\n  func_fd5e2faaaf484bf2(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_9d03599efdee455e(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  \n  iVar1 = func_ae70c60677974fbf(0xffffffff);\n  puVar2 = (undefined4 *)(*(code *)PTR_calloc_00412054)(iVar1 << 2,1);\n  func_6de9f0498527407c(*puVar2);\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412098)(puVar2);\n  return;\n}\n\n",
        "\nvoid func_88d31b0a967945b7(void)\n\n{\n  undefined *puVar1;\n  undefined **ppuVar2;\n  undefined auStack_78 [4];\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x41,99);\n  puStack_74 = auStack_78;\n  ppuVar2 = &puStack_74;\n  uStack_d = 0;\n  func_24cecfda04944594();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (ppuVar2 != (undefined **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_a621e52fb5e84eac(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iStack_10030;\n  undefined2 uStack_10024;\n  undefined2 uStack_10022;\n  undefined4 uStack_10020;\n  undefined auStack_10014 [65540];\n  \n  iVar1 = *(int *)PTR___stack_chk_guard_004130a4;\n  iStack_10030 = -1;\n  iVar2 = (*(code *)PTR_fopen_004130ac)(&UNK_00401f34,&UNK_00401f30);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR_fgets_004130a0)(auStack_10014,0xffff,iVar2);\n    if (iVar3 == 0) {\n      func_306b8b443ab942db(&UNK_00401f40);\n    }\n    (*(code *)PTR_fclose_00413060)(iVar2);\n  }\n  iVar2 = (*(code *)PTR_socket_0041305c)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041306c)(&uStack_10024,0,0x10);\n    uStack_10024 = 2;\n    uStack_10020 = 0;\n    uStack_10022 = (*(code *)PTR_htons_00413094)(0x6987);\n    iVar3 = (*(code *)PTR_bind_00413074)(iVar2,&uStack_10024,0x10);\n    if (((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00413064)(iVar2,5), iVar3 != -1)) &&\n       (iStack_10030 = (*(code *)PTR_accept_0041308c)(iVar2,0,0), iStack_10030 != -1)) {\n      uVar4 = (*(code *)PTR_strlen_00413078)(auStack_10014);\n      (*(code *)PTR_send_0041304c)(iStack_10030,auStack_10014,uVar4,0);\n      (*(code *)PTR_strlen_00413078)(auStack_10014);\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413054)(iVar2);\n  }\n  if (iStack_10030 != -1) {\n    (*(code *)PTR_close_00413054)(iStack_10030);\n  }\n  if (iVar1 != *(int *)PTR___stack_chk_guard_004130a4) {\n    (*(code *)PTR___stack_chk_fail_00413098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_21303d0049ff49de(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  \n  (*(code *)PTR_rand_00412068)();\n  iVar1 = (*(code *)PTR_rand_00412068)();\n  uVar2 = (*(code *)PTR_rand_00412068)();\n  puVar3 = (undefined4 *)(*(code *)PTR_calloc_00412054)((iVar1 << 0xf ^ uVar2) << 2,1);\n  func_403be50108a94c03(*puVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar3);\n  return;\n}\n\n",
        "\nvoid func_c953055ead744d7a(void)\n\n{\n  int iVar1;\n  int iStack_1b4;\n  int iStack_1b0;\n  int iStack_1ac;\n  undefined4 *puStack_1a8;\n  int iStack_1a4;\n  int iStack_1a0;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412068)(auStack_198,0,0x18c);\n  puStack_1a8 = &uStack_19c;\n  iVar1 = func_1cd064f0a2984107();\n  if (iVar1 != 0) {\n    iStack_1a4 = (*(code *)PTR_wcslen_00412064)(puStack_1a8);\n    iStack_1a0 = (*(code *)PTR_getenv_0041207c)(&UNK_00401ae0);\n    if (iStack_1a0 != 0) {\n      (*(code *)PTR_wcsncat_00412058)(puStack_1a8 + iStack_1a4,iStack_1a0,99 - iStack_1a4);\n    }\n  }\n  iVar1 = func_1cd064f0a2984107();\n  if (iVar1 != 0) {\n    iVar1 = (*(code *)PTR___isoc99_swscanf_00412080)(puStack_1a8,&UNK_00401af0,&iStack_1b4);\n    if (iVar1 == 1) {\n      iStack_1ac = 0;\n      for (iStack_1b0 = 0; iStack_1b0 < iStack_1b4; iStack_1b0 = iStack_1b0 + 1) {\n        iStack_1ac = iStack_1ac + 1;\n      }\n      func_8d6e0b6ca7244121(iStack_1ac);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_faf4a999d5434b33(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041207c;\n  puVar3 = &uStack_18;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  uStack_18 = _UNK_004011d4;\n  uStack_14 = _UNK_004011d8;\n  uStack_10 = UNK_004011dc;\n  puVar2 = (undefined4 *)(*(code *)PTR_strdup_00412080)();\n  if (iStack_c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412074)();\n    puVar2 = puVar3;\n  }\n  if (puVar2 == (undefined4 *)0x0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400a80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_puts_0041206c)();\n  return;\n}\n\n",
        "\nvoid func_a6209557266c409c(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  Elf32_Ehdr *pEVar6;\n  Elf32_Ehdr *pEVar7;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 == -1) goto code_r0x00400b14;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_3c = 0x26987;\n  iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_3c,0x10);\n  if (iVar3 == -1) {\ncode_r0x00400b98:\n    (*(code *)PTR_close_00412050)(iVar2);\ncode_r0x00400b14:\n    pEVar7 = &__DT_MIPS_BASE_ADDRESS;\n    if (iStack_1c == *(int *)puVar1) {\n      pEVar7 = (Elf32_Ehdr *)&UNK_004014d4;\n      goto code_r0x00400cf0;\n    }\n  }\n  else {\n    iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar3 = (*(code *)PTR_accept_00412090)(iVar2,0,0);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar4 = (*(code *)PTR_recv_00412054)(iVar3,auStack_2c,0xd,0);\n    if (iVar4 + 1U < 2) {\n      (*(code *)PTR_close_00412050)(iVar2);\n      (*(code *)PTR_close_00412050)(iVar3);\n      goto code_r0x00400b14;\n    }\n    auStack_2c[iVar4] = 0;\n    uVar5 = (*(code *)PTR_strtoul_00412078)(auStack_2c,0,0);\n    (*(code *)PTR_close_00412050)(iVar2);\n    (*(code *)PTR_close_00412050)(iVar3);\n    if (uVar5 < 6) goto code_r0x00400b14;\n    pEVar6 = (Elf32_Ehdr *)(*(code *)PTR_malloc_00412088)(uVar5);\n    pEVar6->e_ident_magic_num = 0x68;\n    pEVar6->e_ident_magic_str[0] = 'e';\n    pEVar6->e_ident_magic_str[1] = 'l';\n    pEVar6->e_ident_magic_str[2] = 'l';\n    pEVar6->e_ident_class = 0x6f;\n    pEVar6->e_ident_data = 0;\n    pEVar7 = pEVar6;\n    func_6cdde1d8877848b2();\n    if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a0)(pEVar6);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\ncode_r0x00400cf0:\n  if (pEVar7 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_38250feb19d14618(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ******ppppppuStack_2c;\n  undefined4 ******ppppppuStack_28;\n  undefined4 *******pppppppuStack_24;\n  undefined4 *******pppppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppppuStack_2c = &pppppppuStack_24;\n  ppppppuStack_28 = &pppppppuStack_24;\n  pppppppuStack_24 = &ppppppuStack_2c;\n  pppppppuStack_20 = &ppppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_00412084)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_00412054)(iStack_38,&ppppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412050)(iStack_38);\n  }\n  linkedListPrev = ppppppuStack_28;\n  linkedListNext = ppppppuStack_2c;\n  *ppppppuStack_28 = ppppppuStack_2c;\n  linkedListNext[1] = linkedListPrev;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_d706a55e8d10487d(void)\n\n{\n  undefined *puStack_f0;\n  uint uStack_e4;\n  undefined4 ****ppppuStack_dc;\n  undefined4 ****ppppuStack_d8;\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  puStack_f0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  ppppuStack_dc = &ppppuStack_dc;\n  ppppuStack_d8 = ppppuStack_dc;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  auStack_70[99] = 0;\n  for (uStack_e4 = 0; uStack_e4 < 100; uStack_e4 = uStack_e4 + 1) {\n    *(undefined *)((int)ppppuStack_d8 + uStack_e4) = auStack_70[uStack_e4];\n  }\n  *(undefined *)((int)ppppuStack_d8 + 99) = 0;\n  func_d0a100090b5644eb(ppppuStack_d8);\n  if (iStack_c != **(int **)(puStack_f0 + -0x7fa4)) {\n    (**(code **)(puStack_f0 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_5c7fd6e0d5664b74(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined auStack_19c [400];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  puVar2 = auStack_19c;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  func_28d35725094f4704();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_1d668e05a54647b5(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined auStack_e0 [99];\n  undefined uStack_7d;\n  int iStack_7c;\n  undefined *puStack_74;\n  undefined auStack_58 [56];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_20 = &_gp;\n  func_1d668e05a54647b5Data = auStack_58;\n  auStack_58[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  func_74917cc623f7424a();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7f9c))();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_74 = puVar1;\n  iStack_7c = *(int *)PTR___stack_chk_guard_0041208c;\n  iVar4 = *(int *)PTR_func_1d668e05a54647b5Data_00412048;\n  uVar3 = (*(code *)PTR_memset_00412068)(auStack_e0,0x43,99);\n  uStack_7d = 0;\n  (*(code *)PTR_strcpy_00412080)(iVar4,uVar3);\n  func_5b6bea6be1724546();\n  if (iStack_7c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_666cc540ae404930(void)\n\n{\n  undefined4 *puStack_338;\n  uint uStack_334;\n  undefined4 auStack_330 [201];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  for (uStack_334 = 0; uStack_334 < 100; uStack_334 = uStack_334 + 1) {\n    auStack_330[uStack_334 * 2 + 1] = 5;\n    auStack_330[uStack_334 * 2] = 0;\n  }\n  puStack_338 = auStack_330;\n  func_0a550f628b7141a8(&puStack_338);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ecda3dbbb4d246b8(undefined4 *param_1)\n\n{\n  param_1 = (undefined4 *)*param_1;\n  param_1[1] = 5;\n  *param_1 = 0;\n  func_1ba103715d804b30(0,5);\n                    /* WARNING: Could not recover jumptable at 0x00400ac4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(param_1);\n  return;\n}\n\n",
        "\nvoid func_17da25f6f10a4bea(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400a64. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011a0,0);\n  return;\n}\n\n",
        "\nvoid func_032d9eb4ef114ec9(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  \n  puVar1 = (undefined4 *)dataBuffer_0;\n  do {\n    puVar1[1] = 5;\n    puVar2 = puVar1 + 2;\n    *puVar1 = 0;\n    puVar1 = puVar2;\n  } while (puVar2 != &globalArgv);\n  func_4a919322d1864b2c(dataBuffer_0._0_4_,dataBuffer_0._4_4_);\n                    /* WARNING: Could not recover jumptable at 0x00400a60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412084)(dataBuffer_0);\n  return;\n}\n\n",
        "\nvoid func_a4a7e878ca8b4dec(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_calloc_00412050)(100,4);\n  (*(code *)PTR___wcscpy_chk_0041206c)(iVar1,&UNK_004011f4,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_0041205c)(1,&UNK_0040123c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_630225e41c054edd(void)\n\n{\n  int iVar1;\n  undefined4 *puStack_b0;\n  int iStack_ac;\n  int iStack_a8;\n  int iStack_a4;\n  undefined4 **ppuStack_a0;\n  undefined4 **ppuStack_9c;\n  undefined4 *puStack_98;\n  int iStack_94;\n  int iStack_90;\n  int iStack_8c;\n  undefined *puStack_88;\n  undefined4 *puStack_84;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  ppuStack_a0 = &puStack_b0;\n  ppuStack_9c = &puStack_b0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412070)(auStack_6c,0,0x60);\n  puStack_b0 = &uStack_70;\n  puStack_98 = *ppuStack_a0;\n  iStack_94 = 0xffffffff;\n  iStack_90 = (*(code *)PTR_strlen_00412078)(puStack_98);\n  iStack_94 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iStack_94 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_80,0,0x10);\n    uStack_80 = 2;\n    uStack_7c = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d20);\n    uStack_7e = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar1 = (*(code *)PTR_connect_0041205c)(iStack_94,&uStack_80,0x10);\n    if (((iVar1 != -1) &&\n        (iStack_8c = (*(code *)PTR_recv_00412058)\n                               (iStack_94,(int)puStack_98 + iStack_90,99 - iStack_90,0),\n        iStack_8c != -1)) && (iStack_8c != 0)) {\n      *(undefined *)((int)puStack_98 + iStack_8c + iStack_90) = 0;\n      puStack_88 = (undefined *)(*(code *)PTR_strchr_0041207c)(puStack_98,0xd);\n      if (puStack_88 != (undefined *)0x0) {\n        *puStack_88 = 0;\n      }\n      puStack_88 = (undefined *)(*(code *)PTR_strchr_0041207c)(puStack_98,10);\n      if (puStack_88 != (undefined *)0x0) {\n        *puStack_88 = 0;\n      }\n    }\n  }\n  if (iStack_94 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_94);\n  }\n  *ppuStack_a0 = puStack_98;\n  puStack_84 = *ppuStack_9c;\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412074)(puStack_84,&UNK_00401d2c,&iStack_ac);\n  if (iVar1 == 1) {\n    iStack_a4 = 0;\n    for (iStack_a8 = 0; iStack_a8 < iStack_ac; iStack_a8 = iStack_a8 + 1) {\n      iStack_a4 = iStack_a4 + 1;\n    }\n    func_30f7f716ac5f49d2(iStack_a4);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_49585951fae646f5(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  badStatic = 1;\n  uVar1 = func_460073fa98b04a8f(0);\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_00412058)(uVar1,auStack_19c);\n  func_8c5f2a614b2a423f(uVar1);\n  (*(code *)PTR_free_0041208c)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_e80dd959ead4484f(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_108 = _UNK_00401b24;\n  uStack_104 = _UNK_00401b28;\n  (*(code *)PTR_memset_00412064)(auStack_102,0,0xf4);\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar1 = (*(code *)PTR_strlen_0041206c)(&uStack_108);\n    if (1 < 0xfaU - iVar1) {\n      iVar2 = (*(code *)PTR_fopen_00412098)(&UNK_00401b04,&UNK_00401b00);\n      if (iVar2 != 0) {\n        iVar3 = (*(code *)PTR_fgets_0041208c)((int)&uStack_108 + iVar1,0xfa - iVar1,iVar2);\n        if (iVar3 == 0) {\n          func_db822da2b722406e(&UNK_00401b14);\n          *(undefined *)((int)&uStack_108 + iVar1) = 0;\n        }\n        (*(code *)PTR_fclose_00412058)(iVar2);\n      }\n    }\n  }\n  (*(code *)PTR_putenv_0041205c)(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_13fa160c68d8497a(void)\n\n{\n  undefined4 auStack_1b0 [100];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  uint uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_18 = (undefined4 *)0x0;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puStack_18 = auStack_1b0;\n    for (uStack_14 = 0; puStack_10 = puStack_18, uStack_14 < 100; uStack_14 = uStack_14 + 1) {\n      puStack_18[uStack_14] = 5;\n    }\n  }\n  func_8e1a0e6a2a034010(*puStack_18);\n  (**(code **)(puStack_20 + -0x7f9c))(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_24f7467f6cf6498a(void)\n\n{\n  undefined8 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined8 **ppuStack_14;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    ppuStack_14 = apuStack_28;\n    func_acfb24646b204a4e(*apuStack_28[0]);\n  }\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_04cc4e5b510144cd(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412070)(auStack_6c,0,0x60);\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = (*(code *)PTR_inet_addr_00412060)(&UNK_00401ce0);\n      uStack_7e = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_80,0x10);\n      if (((iVar3 != -1) &&\n          (iVar3 = (*(code *)PTR_recv_00412058)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n          iVar3 != -1)) && (iVar3 != 0)) {\n        *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n  }\n  (*(code *)PTR_execlp_00412098)\n            (&UNK_00401cf4,&UNK_00401cf4,&UNK_00401cf0,&UNK_00401cec,&uStack_70,0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_548b03f1f4bd4dde(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_rand_00412058)();\n  func_dc45965e9baa4001(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_96b158c97aff4955(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_0041206c)(0x28);\n  for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n    *(int *)(iVar1 + iStack_14 * 4) = iStack_14;\n  }\n  for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n    func_0be83874269a44bf(*(undefined4 *)(iVar1 + iStack_10 * 4));\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_b2113e486dbd404a(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  undefined4 *puStack_74;\n  undefined auStack_70 [4];\n  undefined uStack_6c;\n  undefined uStack_6b;\n  undefined uStack_6a;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  auStack_70 = (undefined  [4])0x0;\n  (*(code *)PTR_memset_00412064)(&uStack_6c,0,0x60);\n  puStack_74 = (undefined4 *)auStack_70;\n  puVar1 = auStack_70 + 3;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n       _UNK_00401a50 << (3 - uVar2) * 8;\n  uStack_6c = UNK_00401a54;\n  uStack_6b = UNK_00401a55;\n  uStack_6a = UNK_00401a56;\n  func_84fac9fedd064d01(&puStack_74);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_48a8a0f4e03a4fbe(int param_1,int *param_2)\n\n{\n  *param_2 = param_1;\n  *(int **)(param_1 + 4) = param_2;\n  return;\n}\n\n",
        "\nvoid func_83b290cd1e804666(undefined4 *param_1)\n\n{\n  (*(code *)PTR_putenv_00412068)(*param_1);\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_54fb89a2fde14697(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_00412084)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_00412054)(iStack_38,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412050)(iStack_38);\n  }\n  func_54fb89a2fde14697Data._0_4_ = ppppuStack_2c;\n  func_54fb89a2fde14697Data._4_4_ = ppppuStack_28;\n  func_ae61a1520eda4eca();\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_434bb83f050a4228(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  code **ppcVar4;\n  code *pcVar5;\n  int iStack_a0;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  (*(code *)PTR_memset_0041207c)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_fopen_004120a4)(&UNK_00401538,&UNK_00401534);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR___fgets_chk_00412078)(&uStack_78,0xffffffff,100,iVar2);\n    if (iVar3 == 0) {\n      func_cbdccbfdc34b4370(&UNK_00401548);\n      uStack_78 = uStack_78 & 0xffffff;\n    }\n    (*(code *)PTR_fclose_0041206c)(iVar2);\n  }\n  func_9cd78f936eee44a3(&uStack_78);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iVar2 = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar3 = (*(code *)PTR___isoc99_sscanf_00412080)();\n  if (iVar3 == 1) {\n    if (iStack_a0 < 1) {\n      iStack_a0 = 0;\n    }\n    func_5d3b30a2c2ae4593(iStack_a0);\n  }\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\n  if (___CTOR_LIST__ != (code *)0xffffffff) {\n    ppcVar4 = (code **)&__CTOR_LIST__;\n    pcVar5 = ___CTOR_LIST__;\n    do {\n      ppcVar4 = ppcVar4 + -1;\n      (*pcVar5)();\n      pcVar5 = *ppcVar4;\n    } while (pcVar5 != (code *)0xffffffff);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b08b317983e54ca9(char *param_1)\n\n{\n  char cVar1;\n  \n  cVar1 = *param_1;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400c20:\n                    /* WARNING: Could not recover jumptable at 0x00400c30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_0041209c)(param_1);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_3632906f42134cd1(&UNK_00401504);\n      goto code_r0x00400c20;\n    }\n    cVar1 = param_1[1];\n    param_1 = param_1 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_1fbb40036a5d4576(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  puVar1 = PTR_CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_65b_badSink_00412040;\n  iStack_c = *(int *)PTR___stack_chk_guard_004120ac;\n  uStack_3c = 0;\n  iVar2 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401dd0);\n    uStack_2a = (*(code *)PTR_htons_004120a0)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00412060)(iVar2,&uStack_2c,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_0041205c)(iVar2,auStack_1c,0xd,0), iVar3 != -1)) && (iVar3 != 0)\n       ) {\n      auStack_1c[iVar3] = 0;\n      uStack_3c = (*(code *)PTR_strtoul_00412080)(auStack_1c,0,0);\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412058)(iVar2);\n  }\n  (*(code *)puVar1)(uStack_3c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120ac) {\n    (*(code *)PTR___stack_chk_fail_004120a4)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_502310eb3608417a(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  uint *puVar3;\n  undefined *puVar4;\n  int iVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_70;\n  undefined auStack_6c [4];\n  undefined auStack_68 [2];\n  undefined auStack_66 [3];\n  undefined auStack_63 [7];\n  undefined4 uStack_5c;\n  undefined2 uStack_58;\n  undefined uStack_56;\n  int iStack_c;\n  \n  puVar4 = PTR___stack_chk_guard_00412080;\n  uStack_70 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  iVar5 = (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  puVar6 = &uStack_70;\n  auStack_6c = (undefined  [4])_UNK_00401238;\n  stack0xffffff9c = _UNK_00401240;\n  uStack_70 = _UNK_00401234;\n  _auStack_68 = _UNK_0040123c;\n  auStack_63._3_4_ = _UNK_00401244;\n  puVar1 = auStack_6c + 2;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_00401238 >> uVar2 * 8;\n  puVar1 = auStack_68 + 1;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n       _UNK_00401238 << (3 - uVar2) * 8;\n  uStack_5c = _UNK_00401248;\n  puVar1 = auStack_68 + 2;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_0040123c >> uVar2 * 8;\n  uVar2 = (uint)auStack_63 & 3;\n  puVar3 = (uint *)(auStack_63 + -uVar2);\n  *puVar3 = *puVar3 & 0xffffffffU >> (uVar2 + 1) * 8 | _UNK_0040123c << (3 - uVar2) * 8;\n  uStack_56 = UNK_0040124e;\n  uStack_58 = _UNK_0040124c;\n  stack0xffffff9c = func_05301ce05c744368(stack0xffffff9c,*(undefined2 *)(iVar5 + 8));\n  func_0cdb8014808a402c();\n  if (iStack_c == *(int *)puVar4) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_da504a6652eb47ac(void)\n\n{\n  int iVar1;\n  undefined *puStack_a8;\n  undefined auStack_a4 [52];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  iVar1 = func_03be04885dfc4a4f();\n  if (iVar1 != 0) {\n    puStack_a8 = auStack_a4;\n    auStack_a4[0] = 0;\n  }\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412074)(puStack_a8,auStack_70);\n  func_3fd1db815f0443a2(puStack_a8);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_2d7a7e5277c54baa(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = func_1e91f9ce76ce4a44();\n  if (iVar1 == 0) {\n    return;\n  }\n  piVar2 = (int *)(*(code *)PTR_malloc_00412074)(4);\n  iVar1 = *piVar2;\n  (*(code *)PTR_free_00412088)(piVar2);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7d60e1463343486f(void)\n\n{\n  undefined auStack_408 [400];\n  undefined4 auStack_278 [50];\n  undefined *puStack_1b0;\n  undefined4 *puStack_1a8;\n  undefined *puStack_1a4;\n  undefined4 *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_1b0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_1a8 = auStack_278;\n  puStack_1a4 = auStack_408;\n  auStack_278[0] = 0;\n  puStack_1a0 = puStack_1a8;\n  (*(code *)PTR_wmemset_00412058)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (**(code **)(puStack_1b0 + -0x7fac))(puStack_1a0,auStack_19c);\n  func_f2bdb8d283bb4cf4(puStack_1a0);\n  if (iStack_c != **(int **)(puStack_1b0 + -0x7f9c)) {\n    (**(code **)(puStack_1b0 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_25d5f152e69f4ffe(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined auStack_98 [104];\n  undefined *puStack_30;\n  undefined auStack_28 [8];\n  int iStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_30 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_98,0x41,99);\n  puVar3 = auStack_28;\n  iStack_20 = iVar2 + -8;\n  *(undefined *)(iVar2 + 99) = 0;\n  func_5d297668717b4902();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_30 + -0x7fa4))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_0ffe8b30da254fae(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  char *pcStack_30;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  pcStack_30 = (char *)(*(code *)PTR_malloc_00412088)(100);\n  *pcStack_30 = '\\0';\n  iVar1 = (*(code *)PTR_strlen_00412074)(pcStack_30);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401d00);\n    uStack_1a = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_1c,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00412054)(iVar2,pcStack_30 + iVar1,99 - iVar1,0), iVar3 != -1))\n       && (iVar3 != 0)) {\n      pcStack_30[iVar3 + iVar1] = '\\0';\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(pcStack_30,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(pcStack_30,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  do {\n    if (*pcStack_30 == '\\0') {\ncode_r0x00400d28:\n      (*(code *)PTR_free_004120a4)(pcStack_30);\n      if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n        (*(code *)PTR___stack_chk_fail_00412098)();\n      }\n      return;\n    }\n    if (*pcStack_30 == 'S') {\n      func_e0d7c86e100e457e(&UNK_00401d0c);\n      goto code_r0x00400d28;\n    }\n    pcStack_30 = pcStack_30 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_50985d49127a417b(undefined4 param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_memcpy_00412080)(auStack_70,param_1,100);\n  uStack_d = 0;\n  func_097ee77afc2d48eb(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041207c) {\n    (*(code *)PTR___stack_chk_fail_00412074)();\n  }\n  return;\n}\n\n",
        "\nvoid func_be65975c5af6476b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412098;\n  iVar2 = (*(code *)PTR_fgets_00412094)(&uStack_24,0xe,*(undefined4 *)PTR_stdin_0041206c);\n  if (iVar2 == 0) {\n    func_69b39bfbc2c04eeb(&UNK_004013bc);\ncode_r0x00400bb4:\n    puVar5 = (undefined *)0x400000;\n    if (iStack_14 == *(int *)puVar1) {\n      puVar5 = &UNK_004013cc;\n      goto code_r0x00400bf0;\n    }\n  }\n  else {\n    uVar3 = (*(code *)PTR_strtoul_00412070)(&uStack_24,0,0);\n    uVar4 = (*(code *)PTR_wcslen_00412064)(&UNK_004013a4);\n    if (uVar3 <= uVar4) goto code_r0x00400bb4;\n    puVar5 = (undefined *)(*(code *)PTR_malloc_00412080)(uVar3 << 2);\n    (*(code *)PTR_wcscpy_00412088)(puVar5,&UNK_004013a4);\n    func_5d83686664bd4e94(puVar5);\n    if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b98. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_0041209c)();\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\ncode_r0x00400bf0:\n  if (puVar5 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ddb82ad6f4304fdb(void)\n\n{\n  undefined auStack_408 [400];\n  undefined4 auStack_278 [50];\n  undefined *puStack_1b0;\n  undefined4 *puStack_1a8;\n  undefined4 *puStack_1a4;\n  undefined *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_1b0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412094;\n  puStack_1a4 = auStack_278;\n  puStack_1a0 = auStack_408;\n  if (staticTrue != 0) {\n    auStack_278[0] = 0;\n    puStack_1a8 = puStack_1a4;\n  }\n  (*(code *)PTR_wmemset_00412068)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (**(code **)(puStack_1b0 + -0x7fac))(puStack_1a8,auStack_19c);\n  func_bbc1109d88e24f30(puStack_1a8);\n  if (iStack_c != **(int **)(puStack_1b0 + -0x7f9c)) {\n    (**(code **)(puStack_1b0 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_3caebe4e43ff491d(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 auStack_330 [201];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  puVar4 = auStack_330;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puVar2 = puVar4;\n  do {\n    puVar2[1] = 5;\n    puVar3 = puVar2 + 2;\n    *puVar2 = 0;\n    puVar2 = puVar3;\n  } while (puVar3 != auStack_330 + 200);\n  func_bdf9dedacc0f47de();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  func_9789864a44bc4d14(*puVar4,puVar4[1]);\n                    /* WARNING: Could not recover jumptable at 0x00401250. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(puVar4);\n  return;\n}\n\n",
        "\nvoid func_73d3717e5730457d(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_94;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    uStack_70 = 0;\n    (*(code *)PTR_memset_0041206c)(auStack_6c,0,0x60);\n    iStack_94 = -1;\n    iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00412060)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_0041206c)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = 0;\n      uStack_7e = (*(code *)PTR_htons_00412098)(0x6987);\n      iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n      if ((((iVar3 != -1) &&\n           (iStack_94 = (*(code *)PTR_accept_00412090)(iVar2,0,0), iStack_94 != -1)) &&\n          (iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_80,0x10), iVar3 != -1)) &&\n         ((iVar1 = (*(code *)PTR_recv_00412058)(iStack_94,auStack_6c + iVar1 + -4,99 - iVar1,0),\n          iVar1 != -1 && (iVar1 != 0)))) {\n        auStack_6c[iVar1 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n    if (iStack_94 != -1) {\n      (*(code *)PTR_close_00412054)(iStack_94);\n    }\n    func_16c3871dfdb84e96(&uStack_70);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_383ce2670c3d4078(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(0x28);\n  iVar2 = func_4919c60a5b624f5e();\n  *puVar1 = 0;\n  if (iVar2 == 0) {\n    puVar1[1] = 1;\n    puVar1[2] = 2;\n    puVar1[3] = 3;\n    puVar1[4] = 4;\n    puVar1[5] = 5;\n    puVar1[6] = 6;\n    puVar1[7] = 7;\n    puVar1[8] = 8;\n    puVar1[9] = 9;\n  }\n  else {\n    puVar1[1] = 1;\n    puVar1[2] = 2;\n    puVar1[3] = 3;\n    puVar1[4] = 4;\n  }\n  iVar2 = func_4919c60a5b624f5e();\n  if (iVar2 != 0) {\n    puVar4 = puVar1;\n    do {\n      puVar3 = puVar4 + 1;\n      func_eb5c5c3c2cab4da9(*puVar4);\n      puVar4 = puVar3;\n    } while (puVar3 != puVar1 + 10);\n    return;\n  }\n  *puVar1 = 0;\n  puVar1[1] = 1;\n  puVar1[2] = 2;\n  puVar1[3] = 3;\n  puVar1[4] = 4;\n  puVar1[5] = 5;\n  puVar1[6] = 6;\n  puVar1[7] = 7;\n  puVar1[8] = 8;\n  puVar1[9] = 9;\n  puVar4 = puVar1;\n  do {\n    puVar3 = puVar4 + 1;\n    func_eb5c5c3c2cab4da9(*puVar4);\n    puVar4 = puVar3;\n  } while (puVar1 + 10 != puVar3);\n  return;\n}\n\n",
        "\nvoid func_8a8d0dd564744429(void)\n\n{\n  undefined *puStack_a8;\n  undefined auStack_a4 [52];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    puStack_a8 = auStack_a4;\n    auStack_a4[0] = 0;\n  }\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412074)(puStack_a8,auStack_70);\n  func_d88ebf974e094961(puStack_a8);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_8c15a4cde4a144ca(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412068)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412070)(auStack_70);\n  (*(code *)PTR_memcpy_00412094)(auStack_70,param_1,uVar1);\n  uStack_d = 0;\n  func_d331c8039cf2473b(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_4e7317390bad43b8(void)\n\n{\n  int iVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    return;\n  }\n  iVar1 = (*(code *)PTR_malloc_00412074)(100);\n  (*(code *)PTR_free_00412088)(iVar1);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_1182679e10c34363(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400a74. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011b0,5);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_d3280b8f81c149d7(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 **ppuVar5;\n  undefined4 *puVar6;\n  undefined4 *puStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined auStack_68 [84];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_78 = _UNK_00401560;\n  uStack_74 = _UNK_00401564;\n  uStack_70 = _UNK_00401568;\n  uStack_6c = _UNK_0040156c;\n  (*(code *)PTR_memset_00412078)(auStack_68,0,0x54);\n  puStack_8c = &uStack_78;\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401524);\n    uStack_88 = func_b014ca883c5a4440(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_88,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_recv_00412058)(iVar2,(int)puStack_8c + 0xf,0x54,0);\n      puVar6 = puStack_8c;\n      puVar4 = PTR_strchr_00412080;\n      if (1 < iVar3 + 1U) {\n        *(undefined *)((int)puStack_8c + iVar3 + 0xf) = 0;\n        puVar4 = (undefined *)(*(code *)puVar4)(puStack_8c,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n          puVar6 = puStack_8c;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(puVar6,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\n  ppuVar5 = &puStack_8c;\n  func_bb5d36cf35b5462d();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (ppuVar5 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_42a9f8dd3f9f470f(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  int iVar4;\n  undefined *puVar5;\n  char *pcVar6;\n  char *unaff_s0;\n  code *pcVar7;\n  undefined *puVar8;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  undefined auStack_50 [16];\n  undefined *puStack_40;\n  undefined4 *puStack_34;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar8 = PTR___stack_chk_guard_004120a4;\n  puStack_40 = &_gp;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  pcVar2 = (char *)(*(code *)PTR_malloc_00412094)(100);\n  pcVar6 = (char *)0x2;\n  *pcVar2 = '\\0';\n  pcVar3 = (char *)(**(code **)(puStack_40 + -0x7fb0))(2,2,6);\n  if (pcVar3 != (char *)0xffffffff) {\n    puStack_34 = &uStack_2c;\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (**(code **)(puStack_40 + -0x7fb8))(&UNK_004015e4);\n    uStack_2c = func_cfd285397eda4437(uStack_2c._0_2_,0x6987);\n    iVar4 = (**(code **)(puStack_40 + -0x7fbc))(pcVar3,puStack_34,0x10);\n    if ((iVar4 != -1) &&\n       (iVar4 = (**(code **)(puStack_40 + -0x7fc0))(pcVar3,pcVar2,99,0), 1 < iVar4 + 1U)) {\n      pcVar7 = *(code **)(puStack_40 + -0x7f9c);\n      pcVar2[iVar4] = '\\0';\n      puVar5 = (undefined *)(*pcVar7)(pcVar2,0xd);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined *)(**(code **)(puStack_40 + -0x7f9c))(pcVar2,10);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n    (**(code **)(puStack_40 + -0x7fc4))();\n    pcVar6 = pcVar3;\n  }\n  pcVar3 = pcVar2;\n  if (iStack_1c != *(int *)puVar8) {\n    unaff_retaddr = &UNK_00400d54;\n    (**(code **)(puStack_40 + -0x7f84))();\n    pcVar3 = pcVar6;\n    unaff_s0 = pcVar2;\n    register0x00000074 = (BADSPACEBASE *)auStack_50;\n  }\n  puVar8 = &_gp;\n  *(char **)((int)register0x00000074 + -8) = unaff_s0;\n  *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n  *(undefined **)((int)register0x00000074 + -0x10) = &_gp;\n  cVar1 = *pcVar3;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400dd0:\n                    /* WARNING: Could not recover jumptable at 0x00400de0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (**(code **)(puVar8 + -0x7f78))(pcVar3);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_ba60deefb8754d02(&UNK_00401614);\n      puVar8 = *(undefined **)((int)register0x00000074 + -0x10);\n      goto code_r0x00400dd0;\n    }\n    cVar1 = pcVar3[1];\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_051010330c434a5a(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 *puVar4;\n  uint uStack_1c;\n  \n  iVar1 = (*(code *)PTR_rand_00412058)();\n  iVar2 = (*(code *)PTR_rand_00412058)();\n  uVar3 = (*(code *)PTR_rand_00412058)();\n  uVar3 = iVar1 << 0x1e ^ iVar2 << 0xf ^ uVar3;\n  puVar4 = (undefined4 *)(*(code *)PTR_malloc_0041206c)(uVar3 << 2);\n  for (uStack_1c = 0; uStack_1c < uVar3; uStack_1c = uStack_1c + 1) {\n    puVar4[uStack_1c] = 0;\n  }\n  func_9e2e013f53404ba1(*puVar4);\n  (*(code *)PTR_free_00412084)(puVar4);\n  return;\n}\n\n",
        "\nvoid func_bfa095767c8e47c4(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  iVar1 = (*(code *)PTR_strlen_00412068)(&uStack_70);\n  if (1 < 100U - iVar1) {\n    iVar2 = (*(code *)PTR_fopen_00412094)(&UNK_00401b98,&UNK_00401b94);\n    if (iVar2 != 0) {\n      iVar3 = (*(code *)PTR_fgets_00412088)((int)&uStack_70 + iVar1,100 - iVar1,iVar2);\n      if (iVar3 == 0) {\n        func_8d5a852f07314919(&UNK_00401ba8);\n        *(undefined *)((int)&uStack_70 + iVar1) = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iVar2);\n    }\n  }\n  func_163dfbd88d8d4060(&uStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_682706b7fe4e4535(void)\n\n{\n  return;\n}\n\n",
        "\nvoid func_ad16993f47a348ab(void)\n\n{\n  int iVar1;\n  int iStack_88;\n  int iStack_84;\n  int iStack_80;\n  undefined4 *puStack_7c;\n  int iStack_78;\n  int iStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  puStack_7c = &uStack_70;\n  iStack_78 = (*(code *)PTR_strlen_00412068)(puStack_7c);\n  if (1 < 100U - iStack_78) {\n    iStack_74 = (*(code *)PTR_fopen_00412094)(&UNK_00401b24,&UNK_00401b20);\n    if (iStack_74 != 0) {\n      iVar1 = (*(code *)PTR_fgets_00412088)((int)puStack_7c + iStack_78,100 - iStack_78,iStack_74);\n      if (iVar1 == 0) {\n        func_542ea164070e408e(&UNK_00401b34);\n        *(undefined *)((int)puStack_7c + iStack_78) = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iStack_74);\n    }\n  }\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412064)(puStack_7c,&UNK_00401b44,&iStack_88);\n  if (iVar1 == 1) {\n    iStack_80 = 0;\n    for (iStack_84 = 0; iStack_84 < iStack_88; iStack_84 = iStack_84 + 1) {\n      iStack_80 = iStack_80 + 1;\n    }\n    func_8d8075fe04eb40e4(iStack_80);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_2c24888335d549ee(void)\n\n{\n  undefined *puVar1;\n  int **ppiVar2;\n  int *piVar3;\n  int *piStack_1a0;\n  int aiStack_19c [100];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  piStack_1a0 = aiStack_19c;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  piVar3 = piStack_1a0;\n  do {\n    *piVar3 = 5;\n    piVar3 = piVar3 + 1;\n  } while (piVar3 != &iStack_c);\n  ppiVar2 = &piStack_1a0;\n  func_3382db7b447d4939();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  piVar3 = *ppiVar2;\n  func_bf2e58af42b341b3(*piVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400b0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(piVar3);\n  return;\n}\n\n",
        "\nvoid func_3049a3ba44404c1d(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  char cStack_79;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412064)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR___fgets_chk_00412060)\n                    (&uStack_78,0xffffffff,100,*(undefined4 *)PTR_stdin_0041206c);\n  if (iVar2 == 0) {\n    func_7ab6bbf9865d4bab(&UNK_00401304);\n    uStack_78 = uStack_78 & 0xffffff;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412070)(&uStack_78);\n    if ((iVar2 != 0) && (pcVar3 = (char *)((int)&uStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n      *pcVar3 = '\\0';\n    }\n  }\n  puVar4 = &UNK_0040131c;\n  (*(code *)PTR_execlp_00412084)\n            (&UNK_0040131c,&UNK_0040131c,&UNK_00401318,&UNK_00401314,&uStack_78,0);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_fd641f1b62de4056(void)\n\n{\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  func_fd641f1b62de4056Data = auStack_70;\n  func_ad992b09314043be();\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_93bdbf7cd9144f6f(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_108 = _UNK_004012b0;\n  uStack_104 = _UNK_004012b4;\n  (*(code *)PTR_memset_00412068)(auStack_102,0,0xf4);\n  iVar2 = (*(code *)PTR_getenv_0041207c)(&UNK_00401284);\n  if (iVar2 != 0) {\n    (*(code *)PTR_strncat_0041204c)((int)&uStack_104 + 1,iVar2,0xf4);\n  }\n  puVar3 = &uStack_108;\n  (*(code *)PTR_putenv_0041205c)();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (puVar3 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ccaf8562427a4aa6(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412094;\n  (*(code *)PTR_memset_00412074)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_fopen_0041209c)(&UNK_00401458,&UNK_00401454);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR___fgets_chk_00412070)(&uStack_78,0xffffffff,100,iVar2);\n    if (iVar3 == 0) {\n      func_9656118175e04bf2(&UNK_00401468);\n      uStack_78 = uStack_78 & 0xffffff;\n    }\n    (*(code *)PTR_fclose_00412064)(iVar2);\n  }\n  puVar4 = &uStack_78;\n  func_ccaf8562427a4aa6Global = 1;\n  func_8364a5d65bb04df5();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  if (puVar4 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_30c2d79bd6384f8e(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412050)(1,8);\n  *puVar1 = 1;\n  puVar1[1] = 1;\n  func_97abe74e13e64617(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400a7c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_cbc8a05ca47645a5(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  \n  pcVar2 = (char *)(*(code *)PTR_malloc_00412078)(100);\n  *pcVar2 = '\\0';\n  iVar3 = (*(code *)PTR_fopen_00412094)(&UNK_00401318,&UNK_00401314);\n  if (iVar3 != 0) {\n    iVar4 = (*(code *)PTR___fgets_chk_00412064)(pcVar2,0xffffffff,100,iVar3);\n    if (iVar4 == 0) {\n      func_409f8704d03e41c9(&UNK_00401328);\n      *pcVar2 = '\\0';\n    }\n    (*(code *)PTR_fclose_00412058)(iVar3);\n  }\n  cVar1 = *pcVar2;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b30:\n                    /* WARNING: Could not recover jumptable at 0x00400b44. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_0041208c)(pcVar2);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_409f8704d03e41c9(&UNK_00401338);\n      goto code_r0x00400b30;\n    }\n    cVar1 = pcVar2[1];\n    pcVar2 = pcVar2 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_31962824a12f43ab(void)\n\n{\n  func_60bc1f93078b4f40(0);\n  return;\n}\n\n",
        "\nvoid func_9a9c1bce9c87497e(int *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iVar3 = *param_1;\n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar2 = (*(code *)PTR___isoc99_swscanf_00412098)(iVar3,&UNK_00401554,&iStack_10);\n  if (iVar2 == 1) {\n    iVar3 = iStack_10;\n    if (iStack_10 < 1) {\n      iVar3 = 0;\n    }\n    func_7dcdfb9afcd540e8();\n  }\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_85e8d3972cab4010(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_0041206c)(uVar2);\n  iVar4 = (*(code *)PTR___memmove_chk_00412078)(uVar2,param_1,uVar3,100);\n  uStack_15 = 0;\n  func_cfd37dbd370146f8();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_7a84eeecdfcb4bf7(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uStack_24;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_24 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iVar4 = (*(code *)PTR_fgets_00412084)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_0041205c);\n  if (iVar4 == 0) {\n    func_cb4553f8efad45fb(&UNK_00401a70);\n  }\n  else {\n    uStack_24 = (*(code *)PTR_strtoul_00412060)(&uStack_1c,0,0);\n  }\n  if (uStack_24 < 6) {\n    func_cb4553f8efad45fb(&UNK_00401a88);\n  }\n  else {\n    uVar5 = (*(code *)PTR_malloc_00412070)(uStack_24);\n    uVar3 = _UNK_00401a80;\n    uVar1 = uVar5 & 3;\n    *(uint *)(uVar5 - uVar1) =\n         *(uint *)(uVar5 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401a80 >> uVar1 * 8;\n    uVar1 = uVar5 + 3 & 3;\n    puVar2 = (uint *)((uVar5 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    *(undefined *)(uVar5 + 4) = UNK_00401a84;\n    *(undefined *)(uVar5 + 5) = UNK_00401a85;\n    func_cb4553f8efad45fb(uVar5);\n    (*(code *)PTR_free_0041208c)(uVar5);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_d695f1e032724f1d(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  \n  pcVar2 = (char *)(*(code *)PTR_malloc_0041207c)(100);\n  *pcVar2 = '\\0';\n  iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_00401398,&UNK_00401394);\n  if (iVar3 != 0) {\n    iVar4 = (*(code *)PTR___fgets_chk_00412068)(pcVar2,0xffffffff,100,iVar3);\n    if (iVar4 == 0) {\n      func_ff542810eb854848(&UNK_004013a8);\n      *pcVar2 = '\\0';\n    }\n    (*(code *)PTR_fclose_0041205c)(iVar3);\n  }\n  cVar1 = *pcVar2;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400bd0:\n                    /* WARNING: Could not recover jumptable at 0x00400be0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412090)(pcVar2);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_ff542810eb854848(&UNK_004013dc);\n      goto code_r0x00400bd0;\n    }\n    cVar1 = pcVar2[1];\n    pcVar2 = pcVar2 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_877b2082446046f8(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_0041206c)(4);\n  iVar2 = func_a2c8b237d10545ef();\n  if (iVar2 != 0) {\n    *puVar1 = 5;\n    func_fcf742e4f6e541bd(*puVar1);\n    (*(code *)PTR_free_00412084)(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_7ea9873dfe0246de(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  uStack_3c = 0;\n  iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d00);\n    uStack_2a = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_00412058)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStack_3c = (*(code *)PTR_strtoul_0041207c)(auStack_1c,0,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412054)(iVar1);\n  }\n  uVar3 = (*(code *)PTR_wcslen_00412070)(&UNK_00401d0c);\n  if (uVar3 < uStack_3c) {\n    uVar4 = (*(code *)PTR_malloc_0041208c)(uStack_3c << 2);\n    (*(code *)PTR_wcscpy_00412094)(uVar4,&UNK_00401d0c);\n    func_1cfbc6029ce04cb3(uVar4);\n    (*(code *)PTR_free_004120ac)(uVar4);\n  }\n  else {\n    func_0472ca31d2504bb3(&UNK_00401d24);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_40f796ed7f7a42b0(void)\n\n{\n  int iVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  int unaff_s0;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  puVar3 = PTR___stack_chk_guard_004120a0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  iVar1 = (*(code *)PTR_fgets_0041209c)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412074);\n  if (iVar1 == 0) {\n    func_5752a93dec56472d(&UNK_004014a4);\n    puVar2 = (undefined *)0x0;\n  }\n  else {\n    puVar2 = (undefined *)(*(code *)PTR_strtoul_00412078)(&uStack_1c,0,0);\n  }\n  func_40f796ed7f7a42b0Global = 1;\n  if (iStack_c == *(int *)puVar3) {\n    if (*(int *)PTR_func_40f796ed7f7a42b0Global_00412048 == 0)\n    {\n      return;\n    }\n    iStack_c = unaff_s0;\n    puVar3 = (undefined *)(*(code *)PTR_wcslen_0041206c)(&UNK_00401570);\n    if (puVar3 < puVar2) {\n      uStack_14 = (*(code *)PTR_malloc_00412088)((int)puVar2 << 2);\n      (*(code *)PTR_wcscpy_00412090)(uStack_14,&UNK_00401570);\n      func_301735cea4cd4aec(uStack_14);\n                    /* WARNING: Could not recover jumptable at 0x00401288. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a4)(uStack_14);\n      return;\n    }\n    puVar2 = &UNK_00401588;\n  }\n  else {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2b975d826ad743ee(void)\n\n{\n  int iVar1;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iVar1 = (*(code *)PTR_fgets_00412088)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412060);\n  if (iVar1 == 0) {\n    func_e8b5012a592840ca(&UNK_00401b20);\n  }\n  else {\n    uStack_20 = (*(code *)PTR_strtoul_00412064)(&uStack_1c,0,0);\n  }\n  func_f592327433234569(uStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4e29f27868944174(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_420;\n  undefined4 uStack_41c;\n  undefined4 *puStack_418;\n  undefined4 uStack_414;\n  undefined4 auStack_40c [4];\n  undefined4 uStack_3fc;\n  undefined4 uStack_3f8;\n  undefined auStack_3f4 [976];\n  int iStack_24;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_24 = *(int *)PTR___stack_chk_guard_004120a4;\n  auStack_40c[0] = _UNK_00401570;\n  auStack_40c[1] = _UNK_00401574;\n  auStack_40c[2] = _UNK_00401578;\n  auStack_40c[3] = _UNK_0040157c;\n  uStack_3fc = _UNK_00401580;\n  uStack_3f8 = _UNK_00401584;\n  (*(code *)PTR_memset_00412084)(auStack_3f4,0,0x3d0);\n  iVar2 = (*(code *)PTR_wcslen_00412080)(auStack_40c);\n  iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_41c = 0;\n    puStack_418 = (undefined4 *)0x0;\n    uStack_414 = 0;\n    uStack_420._2_2_ = 0;\n    uStack_420._0_2_ = 2;\n    uStack_41c = (*(code *)PTR_inet_addr_00412060)(&UNK_00401534);\n    uStack_420 = func_1ad7d6b7b9684037(uStack_420._0_2_,0x6987);\n    iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_420,0x10);\n    if ((iVar4 != -1) &&\n       (uVar5 = (*(code *)PTR_recv_00412058)(iVar3,auStack_40c + iVar2,(0xf9 - iVar2) * 4,0),\n       1 < uVar5 + 1)) {\n      auStack_40c[(uVar5 >> 2) + iVar2] = 0;\n      puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412074)(auStack_40c,0xd);\n      if (puVar6 != (undefined4 *)0x0) {\n        *puVar6 = 0;\n      }\n      puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412074)(auStack_40c,10);\n      if (puVar6 != (undefined4 *)0x0) {\n        *puVar6 = 0;\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  puVar6 = &uStack_420;\n  puStack_418 = auStack_40c;\n  func_d16fa2ddec954ed7();\n  if (iStack_24 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n    if (puVar6 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400d40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_0bccfb393c8e42a1(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_0041206c)(0,4);\n  *puVar1 = 5;\n  func_b6634aa33f6040d6(*puVar1);\n  (*(code *)PTR_free_00412084)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_1e40d41b73c0488c(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  int iVar4;\n  undefined *puVar5;\n  char *pcVar6;\n  char *unaff_s0;\n  code *pcVar7;\n  undefined *puVar8;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  undefined auStack_50 [16];\n  undefined *puStack_40;\n  undefined4 *puStack_34;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar8 = PTR___stack_chk_guard_0041209c;\n  puStack_40 = &_gp;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  pcVar2 = (char *)(*(code *)PTR_malloc_0041208c)(100);\n  pcVar6 = (char *)0x2;\n  *pcVar2 = '\\0';\n  pcVar3 = (char *)(**(code **)(puStack_40 + -0x7fb8))(2,2,6);\n  if (pcVar3 != (char *)0xffffffff) {\n    puStack_34 = &uStack_2c;\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (**(code **)(puStack_40 + -0x7fc0))(&UNK_004014d4);\n    uStack_2c = func_23f48c617e184e57(uStack_2c._0_2_,0x6987);\n    iVar4 = (**(code **)(puStack_40 + -0x7fc4))(pcVar3,puStack_34,0x10);\n    if ((iVar4 != -1) &&\n       (iVar4 = (**(code **)(puStack_40 + -0x7fc8))(pcVar3,pcVar2,99,0), 1 < iVar4 + 1U)) {\n      pcVar7 = *(code **)(puStack_40 + -0x7fa4);\n      pcVar2[iVar4] = '\\0';\n      puVar5 = (undefined *)(*pcVar7)(pcVar2,0xd);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined *)(**(code **)(puStack_40 + -0x7fa4))(pcVar2,10);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n    (**(code **)(puStack_40 + -0x7fcc))();\n    pcVar6 = pcVar3;\n  }\n  pcVar3 = pcVar2;\n  if (iStack_1c != *(int *)puVar8) {\n    unaff_retaddr = &UNK_00400c84;\n    (**(code **)(puStack_40 + -0x7f8c))();\n    pcVar3 = pcVar6;\n    unaff_s0 = pcVar2;\n    register0x00000074 = (BADSPACEBASE *)auStack_50;\n  }\n  puVar8 = &_gp;\n  *(char **)((int)register0x00000074 + -8) = unaff_s0;\n  *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n  *(undefined **)((int)register0x00000074 + -0x10) = &_gp;\n  cVar1 = *pcVar3;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400ce0:\n                    /* WARNING: Could not recover jumptable at 0x00400cf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (**(code **)(puVar8 + -0x7f80))(pcVar3);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_4aefe172280f4064(&UNK_00401504);\n      puVar8 = *(undefined **)((int)register0x00000074 + -0x10);\n      goto code_r0x00400ce0;\n    }\n    cVar1 = pcVar3[1];\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_44f83c39bcbc4dd5(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_00412084)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_00412054)(iStack_38,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412050)(iStack_38);\n  }\n  func_84024a46b4104daa(ppppuStack_2c,ppppuStack_28);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_981d3933b64e4185(void)\n\n{\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  func_0bed6aabb4ec4169(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_8d2356a520eb4836(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uStack_24;\n  undefined auStack_20 [8];\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  uStack_24 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR___isoc99_fscanf_00412094)\n            (*(undefined4 *)PTR_stdin_00412068,&UNK_00401334,&uStack_24);\n  puVar2 = auStack_20;\n  uStack_18 = uStack_24;\n  func_4faffb15a88f4bc3();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f62bad7c35084a96(void)\n\n{\n  undefined4 ***pppuStack_78;\n  undefined4 ***pppuStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x41,99);\n  uStack_d = 0;\n  pppuStack_78 = &pppuStack_78;\n  pppuStack_74 = pppuStack_78;\n  func_27466eca44b94398(pppuStack_78);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_52ec51cff4364e9e(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(4);\n  uVar2 = *puVar1;\n  (*(code *)PTR_free_00412088)(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400ad4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401230,uVar2);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_50f3465be1fc476b(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_108 = _UNK_00401b60;\n  uStack_104 = _UNK_00401b64;\n  (*(code *)PTR_memset_00412060)(auStack_102,0,0xf4);\n  uVar1 = func_3e8624b4ba72465f(&uStack_108);\n  (*(code *)PTR_putenv_00412058)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e1df8e3bb9a34586(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 *unaff_s1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_e8,0x41,99);\n  *(undefined *)(iVar2 + 99) = 0;\n  if (**(int **)(puStack_80 + -0x7fe0) == 5) {\n    unaff_s1 = (undefined4 *)(iVar2 + -8);\n  }\n  puVar3 = (undefined4 *)(**(code **)(puStack_80 + -0x7fbc))(auStack_78,0x43,99);\n  uStack_18._3_1_ = 0;\n  puVar4 = unaff_s1;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar6 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar4 = *puVar3;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar4 = puVar5;\n    puVar3 = puVar6;\n  } while (puVar6 != &uStack_18);\n  *puVar5 = *puVar6;\n  func_5e6fe513025a45cd();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa4))();\n  if (unaff_s1 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_8b2078c6ce894654(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_48 [52];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR___strcpy_chk_00412064)(auStack_48,param_1,0x32);\n  iVar2 = param_1;\n  func_19041b213c4f42ff();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b58. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(param_1);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_aaebc99166614eb9(void)\n\n{\n  int iVar1;\n  undefined4 *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  puStack_1a0 = (undefined4 *)0x0;\n  iVar1 = func_5a517fb2c4a648aa();\n  if (iVar1 != 0) {\n    puStack_1a0 = (undefined4 *)(*(code *)PTR_malloc_00412074)(200);\n    *puStack_1a0 = 0;\n  }\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_00412058)(puStack_1a0,auStack_19c);\n  func_9fdc1640b65d4eed(puStack_1a0);\n  (*(code *)PTR_free_0041208c)(puStack_1a0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c59430614f204617(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *unaff_s0;\n  int iVar3;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412098;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x18) = &_gp;\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = *(undefined4 *)PTR___stack_chk_guard_00412098;\n    iVar2 = (*(code *)PTR___isoc99_sscanf_0041207c)();\n    iVar3 = *(int *)((int)register0x00000074 + -0x18);\n    if (iVar2 == 1) {\n      iVar2 = *(int *)((int)register0x00000074 + -0x10);\n      if (iVar2 < 1) {\n        iVar2 = 0;\n      }\n      func_a35f48f4e9d64e1c(iVar2);\n      iVar3 = *(int *)((int)register0x00000074 + -0x18);\n    }\n    if (*(int *)((int)register0x00000074 + -0xc) == *(int *)puVar1) break;\n    unaff_retaddr = &UNK_00400bd8;\n    (**(code **)(iVar3 + -0x7f90))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x28);\n  }\n  return;\n}\n\n",
        "\nvoid func_a753f01aab244836(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar3;\n  undefined4 unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar2 = param_1;\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s1;\n    unaff_s1 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined4 *)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 **)((int)register0x00000074 + -0x10) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041208c\n    ;\n    (*(code *)PTR_wmemset_00412060)(unaff_s1,0x43,99);\n    pcVar3 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fc4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    (*pcVar3)(puVar2,unaff_s1);\n    func_9cd02947d40a40b3(puVar2);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    pcVar3 = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cat_41_bad;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f9c))();\n    *(code **)((int)register0x00000074 + -0x1c4) = pcVar3;\n    *(undefined **)((int)register0x00000074 + -0x1d0) = &_gp;\n    param_1 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(200);\n    unaff_retaddr = *(undefined4 *)((int)register0x00000074 + -0x1c4);\n    *param_1 = 0;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n    unaff_s0 = puVar2;\n    unaff_s2 = puVar1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f90))(puVar2);\n  return;\n}\n\n",
        "\nvoid func_6a38d7b30c994700(void)\n\n{\n  undefined4 ***pppuStack_28;\n  undefined4 **ppuStack_24;\n  undefined4 ****ppppuStack_1c;\n  undefined4 ****ppppuStack_18;\n  undefined4 ****ppppuStack_14;\n  undefined4 ****ppppuStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  ppppuStack_1c = &ppppuStack_14;\n  ppppuStack_18 = &ppppuStack_14;\n  ppppuStack_14 = &ppppuStack_1c;\n  ppppuStack_10 = &ppppuStack_1c;\n  func_6a38d7b30c994700Global = 1;\n  func_b0c8309a0bf544a8\n            (&pppuStack_28,ppppuStack_1c,ppppuStack_18);\n  ppppuStack_1c = (undefined4 ****)pppuStack_28;\n  ppppuStack_18 = (undefined4 ****)ppuStack_24;\n  linkedListPrev = ppuStack_24;\n  linkedListNext = pppuStack_28;\n  *ppuStack_24 = pppuStack_28;\n  linkedListNext[1] = linkedListPrev;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_cb6e95ff0d334d0a(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar1 = PTR_CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_badSink_00412040;\n  puVar2 = (undefined *)(*(code *)PTR_malloc_00412070)(0x32);\n  *puVar2 = 0;\n  (*(code *)puVar1)(puVar2);\n  return;\n}\n\n",
        "\nvoid func_2a2095de21ac4295(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_20;\n  int iStack_1c;\n  int iStack_18;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(0x50);\n  iVar2 = func_eddd3e5594884461();\n  if (iVar2 == 0) {\n    for (iStack_1c = 0; iStack_1c < 10; iStack_1c = iStack_1c + 1) {\n      *(double *)(iVar1 + iStack_1c * 8) = (double)iStack_1c;\n    }\n  }\n  else {\n    for (iStack_20 = 0; iStack_20 < 5; iStack_20 = iStack_20 + 1) {\n      *(double *)(iVar1 + iStack_20 * 8) = (double)iStack_20;\n    }\n  }\n  iVar2 = func_eddd3e5594884461();\n  if (iVar2 == 0) {\n    for (iStack_14 = 0; iStack_14 < 10; iStack_14 = iStack_14 + 1) {\n      *(double *)(iVar1 + iStack_14 * 8) = (double)iStack_14;\n    }\n    for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n      func_1f4510cca8d34210(*(undefined8 *)(iVar1 + iStack_10 * 8));\n    }\n  }\n  else {\n    for (iStack_18 = 0; iStack_18 < 10; iStack_18 = iStack_18 + 1) {\n      func_1f4510cca8d34210(*(undefined8 *)(iVar1 + iStack_18 * 8));\n    }\n  }\n  return;\n}\n\n",
        "\nvoid func_dfd1a5b3a71946e6(int param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_0041205c)(*(undefined4 *)(param_1 + 8),&UNK_00401bd0);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_00412050)(iVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_88dcda6f92e24055(void)\n\n{\n  int iVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  iVar1 = *(int *)PTR_CWE124_Buffer_Underwrite__char_alloca_ncpy_68_badData_00412040;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strncpy_00412060)(iVar1,auStack_70,99);\n  *(undefined *)(iVar1 + 99) = 0;\n  func_116f9ac219f24261(iVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_54c719d98cb64e99(void)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  \n  piVar1 = (int *)(*(code *)PTR_malloc_0041206c)(4);\n  puVar2 = (undefined4 *)*piVar1;\n  (*(code *)PTR_free_00412084)(piVar1);\n  func_c8e907277426485f(*puVar2);\n  func_c8e907277426485f(puVar2[1]);\n  return;\n}\n\n",
        "\nvoid func_6d224d9ee2054076(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined *puVar5;\n  uint uVar6;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  undefined *puVar7;\n  \n  puVar7 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 == -1) {\n    uVar6 = 0;\n  }\n  else {\n    uStack_38 = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_3c = 0x26987;\n    iVar2 = (*(code *)PTR_bind_0041207c)(iVar1,&uStack_3c,0x10);\n    if (iVar2 != -1) {\n      iVar2 = (*(code *)PTR_listen_0041206c)(iVar1,5);\n      if (iVar2 != -1) {\n        iVar2 = (*(code *)PTR_accept_00412098)(iVar1,0,0);\n        if (iVar2 != -1) {\n          iVar3 = (*(code *)PTR_recv_0041205c)(iVar2,auStack_2c,0xd,0);\n          if (iVar3 + 1U < 2) {\n            uVar6 = 0;\n          }\n          else {\n            auStack_2c[iVar3] = 0;\n            uVar6 = (*(code *)PTR_strtoul_00412080)(auStack_2c,0,0);\n          }\n          (*(code *)PTR_close_00412058)(iVar1);\n          (*(code *)PTR_close_00412058)(iVar2);\n          goto code_r0x00400bc8;\n        }\n      }\n    }\n    uVar6 = 0;\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\ncode_r0x00400bc8:\n  puVar5 = (undefined *)0x410000;\n  func_6d224d9ee2054076Global = 1;\n  if (iStack_1c == *(int *)puVar7) {\n    puVar7 = &_gp;\n    if (*(int *)PTR_func_6d224d9ee2054076Global_00412048\n        == 0) {\n      return;\n    }\n    if (5 < uVar6) {\n      puVar4 = (undefined4 *)(*(code *)PTR_malloc_00412090)();\n      *puVar4 = 0x68656c6c;\n      *(undefined2 *)(puVar4 + 1) = 0x6f00;\n      func_3d6a436921af4299(puVar4);\n                    /* WARNING: Could not recover jumptable at 0x0040136c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (**(code **)(puVar7 + -0x7f78))(puVar4);\n      return;\n    }\n    puVar5 = &UNK_00401670;\n  }\n  else {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  if (puVar5 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041208c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_cde5b21b5d1b4965(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_d800b46efa3b47b4();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nundefined4 func_b0096b6983eb4b77(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar4 = PTR___stack_chk_guard_0041209c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar1 = (*(code *)PTR_socket_00412070)(2,2,6);\n  if (iVar1 != -1) {\n    uStack_38 = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_3c._2_2_ = 0;\n    uStack_3c._0_2_ = 2;\n    uStack_38 = (*(code *)PTR_inet_addr_00412068)(&UNK_00401464);\n    uStack_3c = func_e93abed0e8c8497b(uStack_3c._0_2_,0x6987);\n    iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_3c,0x10);\n    if (iVar2 != -1) {\n      iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_2c,0xd,0);\n      if (1 < iVar2 + 1U) {\n        auStack_2c[iVar2] = 0;\n        param_1 = (*(code *)PTR_strtol_00412064)(auStack_2c,0,10);\n      }\n    }\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_1c == *(int *)puVar4) {\n    return param_1;\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\n  iVar1 = func_b0096b6983eb4b77(0xffffffff);\n  if (5 < iVar1) {\n    return 0;\n  }\n  puVar4 = &UNK_00401554;\n  uVar3 = (*(code *)PTR___assert_fail_00412054)\n                    (&UNK_00401554,&UNK_00401470,0x39,__PRETTY_FUNCTION___0);\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    uVar3 = (*(code *)PTR_puts_0041208c)();\n    return uVar3;\n  }\n  return uVar3;\n}\n\n",
        "\nvoid func_32277d2b31014496(int param_1)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  uint uStack_14;\n  \n  uVar1 = *(uint *)(param_1 + 8);\n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412070)(uVar1 << 2);\n  for (uStack_14 = 0; uStack_14 < uVar1; uStack_14 = uStack_14 + 1) {\n    puVar2[uStack_14] = 0;\n  }\n  func_c84a8e1eed1a4a56(*puVar2);\n  (*(code *)PTR_free_00412088)(puVar2);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_015ffbf951774e55(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  int iVar3;\n  undefined auStack_70 [4];\n  undefined auStack_6c [4];\n  undefined auStack_68 [4];\n  undefined auStack_64 [4];\n  undefined auStack_60 [4];\n  undefined auStack_5c [4];\n  undefined uStack_58;\n  undefined uStack_57;\n  undefined uStack_56;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  iVar3 = func_4ad486998837498d();\n  if (iVar3 != 0) {\n    auStack_70 = (undefined  [4])0x0;\n    (*(code *)PTR_memset_0041205c)(auStack_6c,0,0x60);\n    puVar1 = auStack_70 + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a10 << (3 - uVar2) * 8;\n    auStack_6c = (undefined  [4])_UNK_00401a14;\n    puVar1 = auStack_6c + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a14 << (3 - uVar2) * 8;\n    auStack_68 = (undefined  [4])_UNK_00401a18;\n    puVar1 = auStack_68 + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a18 << (3 - uVar2) * 8;\n    auStack_64 = (undefined  [4])_UNK_00401a1c;\n    puVar1 = auStack_64 + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a1c << (3 - uVar2) * 8;\n    auStack_60 = (undefined  [4])_UNK_00401a20;\n    puVar1 = auStack_60 + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a20 << (3 - uVar2) * 8;\n    auStack_5c = (undefined  [4])_UNK_00401a24;\n    puVar1 = auStack_5c + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a24 << (3 - uVar2) * 8;\n    uStack_58 = UNK_00401a28;\n    uStack_57 = UNK_00401a29;\n    uStack_56 = UNK_00401a2a;\n    (*(code *)PTR_memcpy_00412084)(auStack_6c + 2,auStack_6c,10);\n    func_af2000931d7741c1(auStack_70);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_dbe610154b6540ee\n               (uint param_1,undefined4 param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint uVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint in_t0;\n  uint auStack_70 [24];\n  undefined uStack_d;\n  uint uStack_c;\n  \n  puVar5 = PTR___stack_chk_guard_00412084;\n  puVar10 = auStack_70;\n  uVar11 = *(uint *)PTR___stack_chk_guard_00412084;\n  uVar7 = param_1;\n  puVar8 = puVar10;\n  uStack_c = uVar11;\n  do {\n    uVar6 = uVar7;\n    uVar7 = uVar6 + 4 & 3;\n    puVar9 = puVar8 + 4;\n    uVar1 = uVar6 + 8 & 3;\n    uVar2 = uVar6 + 0xc & 3;\n    uVar3 = uVar6 & 3;\n    uVar4 = uVar6 + 7 & 3;\n    in_t0 = (*(int *)((uVar6 + 4) - uVar7) << uVar7 * 8 | in_t0 & 0xffffffffU >> (4 - uVar7) * 8) &\n            -1 << (uVar4 + 1) * 8 | *(uint *)((uVar6 + 7) - uVar4) >> (3 - uVar4) * 8;\n    uVar7 = uVar6 + 0xb & 3;\n    param_4 = (*(int *)((uVar6 + 8) - uVar1) << uVar1 * 8 | param_4 & 0xffffffffU >> (4 - uVar1) * 8\n              ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xb) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0xf & 3;\n    uVar11 = (*(int *)((uVar6 + 0xc) - uVar2) << uVar2 * 8 | uVar11 & 0xffffffffU >> (4 - uVar2) * 8\n             ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xf) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 3 & 3;\n    param_3 = (*(int *)(uVar6 - uVar3) << uVar3 * 8 | param_3 & 0xffffffffU >> (4 - uVar3) * 8) &\n              -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 3) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0x10;\n    puVar8[1] = in_t0;\n    puVar8[2] = param_4;\n    *puVar8 = param_3;\n    puVar8[3] = uVar11;\n    puVar8 = puVar9;\n  } while (uVar7 != param_1 + 0x60);\n  uVar1 = uVar7 & 3;\n  uVar2 = uVar6 + 0x13 & 3;\n  *puVar9 = (*(int *)(uVar7 - uVar1) << uVar1 * 8 | uVar11 & 0xffffffffU >> (4 - uVar1) * 8) &\n            -1 << (uVar2 + 1) * 8 | *(uint *)((uVar6 + 0x13) - uVar2) >> (3 - uVar2) * 8;\n  uStack_d = 0;\n  func_0cff2456543d4c70();\n  if (uStack_c == *(uint *)puVar5) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar10 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ecdc6276caaa4c5d(void)\n\n{\n  undefined4 *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_1a0 = (undefined4 *)0x0;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    puStack_1a0 = (undefined4 *)(*(code *)PTR_malloc_00412078)(200);\n    *puStack_1a0 = 0;\n  }\n  (*(code *)PTR_wmemset_00412060)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_0041205c)(puStack_1a0,auStack_19c);\n  func_763be81a269a45d4(puStack_1a0);\n  (*(code *)PTR_free_00412090)(puStack_1a0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a1ad76929db34057(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_10 = 0;\n  (*(code *)PTR___isoc99_fscanf_0041209c)\n            (*(undefined4 *)PTR_stdin_0041206c,&UNK_00401cc0,&uStack_10);\n  func_c77aa85115224d86(uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fc23c83066c1496a(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  int iVar3;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(400);\n  *puVar1 = 0;\n  iVar2 = (*(code *)PTR_wcslen_00412058)(puVar1);\n  if (1 < 100U - iVar2) {\n    iVar3 = (*(code *)PTR_fgetws_0041207c)\n                      (puVar1 + iVar2,100 - iVar2,*(undefined4 *)PTR_stdin_00412060);\n    if (iVar3 == 0) {\n      func_7c169d531f8641d2(&UNK_00401b44);\n      puVar1[iVar2] = 0;\n    }\n    else {\n      iVar2 = (*(code *)PTR_wcslen_00412058)(puVar1);\n      if ((iVar2 != 0) && (puVar1[iVar2 + 0x3fffffff] == 10)) {\n        puVar1[iVar2 + 0x3fffffff] = 0;\n      }\n    }\n  }\n  badStatic = 1;\n  func_589d0506f3bc4229(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e66c5880ed124c55(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_f0 [104];\n  undefined *puStack_88;\n  undefined *puStack_80;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_7c = auStack_f0;\n  (*(code *)PTR_memset_00412058)(puStack_7c,0x41,99);\n  puVar1 = puStack_88;\n  puStack_7c[99] = 0;\n  puStack_80 = puStack_7c + -8;\n  puStack_78 = puStack_80;\n  puStack_74 = puStack_80;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fa0))(puStack_74,auStack_70,100);\n  puStack_74[99] = 0;\n  func_1451c3a6666d45eb(puStack_74);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa4)) {\n    (**(code **)(puStack_88 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_42d63b272cbb42bc(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  code *pcVar4;\n  undefined auStack_16c [8];\n  undefined auStack_164 [99];\n  undefined uStack_101;\n  undefined auStack_100 [99];\n  undefined uStack_9d;\n  int iStack_9c;\n  undefined4 uStack_98;\n  code *pcStack_94;\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa4))(param_1,uVar2);\n  func_6e487678999e4053(param_1);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  pcVar4 = CWE124_Buffer_Underwrite__char_declare_cpy_41_bad;\n  (**(code **)(puStack_80 + -0x7fa0))();\n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_9c = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_98 = param_1;\n  pcStack_94 = pcVar4;\n  (*(code *)PTR_memset_00412064)(auStack_164,0x41,99);\n  uStack_101 = 0;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_100,0x43,99);\n  uStack_9d = 0;\n  iVar3 = (*(code *)PTR___strcpy_chk_0041205c)(auStack_16c,uVar2,0x6c);\n  func_6e487678999e4053();\n  if (iStack_9c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_407f5ae186af435f(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 auStack_408 [100];\n  undefined4 auStack_278 [50];\n  undefined *puStack_1b0;\n  undefined4 *puStack_1a8;\n  undefined4 *puStack_1a4;\n  undefined4 *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_1b0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  puStack_1a4 = auStack_278;\n  puStack_1a0 = auStack_408;\n  iVar2 = func_0d52afe0771a4d2b();\n  puVar1 = puStack_1b0;\n  if (iVar2 == 0) {\n    puStack_1a8 = puStack_1a0;\n    *puStack_1a0 = 0;\n  }\n  else {\n    puStack_1a8 = puStack_1a4;\n    *puStack_1a4 = 0;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (**(code **)(puStack_1b0 + -0x7fa8))(puStack_1a8,auStack_19c);\n  func_cbeee7d8b9df48cb(puStack_1a8);\n  if (iStack_c != **(int **)(puStack_1b0 + -0x7f98)) {\n    (**(code **)(puStack_1b0 + -0x7fa0))();\n  }\n  return;\n}\n\n",
        "\nvoid func_0da26e493ffa4c7c(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 auStack_280 [50];\n  undefined *puStack_1b8;\n  undefined auStack_1ac [396];\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_1b8 = &_gp;\n  puVar2 = auStack_280;\n  auStack_280[0] = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_wmemset_0041205c)(auStack_1ac,0x43,99);\n  uStack_20 = 0;\n  (**(code **)(puStack_1b8 + -0x7fb4))(puVar2,auStack_1ac,0x32);\n  func_0585e53567924baa();\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_1b8 + -0x7fa0))();\n  if (puVar2 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b1fedb8b2c714ae0(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined2 uStack_10024;\n  undefined2 uStack_10022;\n  undefined4 uStack_10020;\n  undefined auStack_10014 [65540];\n  \n  iVar1 = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_fopen_004120a4)(&UNK_00401db4,&UNK_00401db0);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR_fgets_00412098)(auStack_10014,0xffff,iVar2);\n    if (iVar3 == 0) {\n      func_7d17d2a04c0c4a43(&UNK_00401dc0);\n    }\n    (*(code *)PTR_fclose_00412064)(iVar2);\n  }\n  iVar2 = (*(code *)PTR_socket_00412060)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_10024,0,0x10);\n    uStack_10024 = 2;\n    uStack_10020 = 0;\n    uStack_10022 = (*(code *)PTR_htons_0041208c)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_10024,0x10);\n    if (iVar3 != -1) {\n      uVar4 = (*(code *)PTR_strlen_00412074)(auStack_10014);\n      (*(code *)PTR_send_0041204c)(iVar2,auStack_10014,uVar4,0);\n      (*(code *)PTR_strlen_00412074)(auStack_10014);\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\n  if (iVar1 != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e1d11894761e4dea(undefined4 param_1)\n\n{\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_wmemset_00412064)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_00412060)(param_1,auStack_19c);\n  func_3c7704b4cb004e26(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_2d197594f3024303(undefined4 param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412080)(param_1,auStack_70);\n  func_17cf6c8917db4012(param_1);\n  (*(code *)PTR_free_00412094)(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_621b491aa6aa4753(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_3c;\n  int iStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  uStack_3c = 0xffffffff;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_0041207c)(iVar1,&uStack_2c,0x10);\n    if ((((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_0041206c)(iVar1,5), iVar2 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412094)(iVar1,0,0), iStack_38 != -1)) &&\n       ((iVar2 = (*(code *)PTR_recv_0041205c)(iStack_38,auStack_1c,0xd,0), iVar2 != -1 &&\n        (iVar2 != 0)))) {\n      auStack_1c[iVar2] = 0;\n      uStack_3c = (*(code *)PTR_atoi_00412068)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_891e356213d94875(uStack_3c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_207e7eb370ac4d8d(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined auStack_70 [96];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  uStack_71 = 0;\n  puVar2 = (undefined4 *)(*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  puVar6 = auStack_dc;\n  uStack_10._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_10);\n  *puVar5 = *puVar3;\n  func_292726e2112946c1();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_19c95c2bd5054cfc(void)\n\n{\n  int iVar1;\n  int iStack_88;\n  int iStack_84;\n  int iStack_80;\n  undefined4 *puStack_7c;\n  int iStack_78;\n  int iStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  puStack_7c = &uStack_70;\n  iStack_78 = (*(code *)PTR_strlen_00412068)(puStack_7c);\n  if (1 < 100U - iStack_78) {\n    iStack_74 = (*(code *)PTR_fopen_00412094)(&UNK_00401b24,&UNK_00401b20);\n    if (iStack_74 != 0) {\n      iVar1 = (*(code *)PTR_fgets_00412088)((int)puStack_7c + iStack_78,100 - iStack_78,iStack_74);\n      if (iVar1 == 0) {\n        func_1f63a37349064b30(&UNK_00401b34);\n        *(undefined *)((int)puStack_7c + iStack_78) = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iStack_74);\n    }\n  }\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412064)(puStack_7c,&UNK_00401b44,&iStack_88);\n  if (iVar1 == 1) {\n    iStack_80 = 0;\n    for (iStack_84 = 0; iStack_84 < iStack_88; iStack_84 = iStack_84 + 1) {\n      iStack_80 = iStack_80 + 1;\n    }\n    func_f1c28fafe5a442fa(iStack_80);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_bb9ff76193db439c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  iStack_38 = -1;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401c20);\n      uStack_2a = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n      if (((iVar2 != -1) &&\n          (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) &&\n         (iVar2 != 0)) {\n        auStack_1c[iVar2] = 0;\n        iStack_38 = (*(code *)PTR_atoi_00412070)(auStack_1c);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n  }\n  if (iStack_38 < 6) {\n    (*(code *)PTR___assert_fail_00412054)(&UNK_00401d10,&UNK_00401c2c,0x70,__PRETTY_FUNCTION___0);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ed71c24f2d024604(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  undefined4 *puVar5;\n  undefined4 ****ppppuStack_54;\n  undefined4 ****ppppuStack_50;\n  undefined4 ****ppppuStack_4c;\n  undefined4 ****ppppuStack_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 ****ppppuStack_34;\n  undefined4 ****ppppuStack_30;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  ppppuStack_54 = &ppppuStack_4c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412094;\n  ppppuStack_50 = ppppuStack_54;\n  ppppuStack_4c = &ppppuStack_54;\n  ppppuStack_48 = &ppppuStack_54;\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_40 = 0;\n    uStack_3c = 0;\n    uStack_38 = 0;\n    uStack_44._2_2_ = 0;\n    uStack_44._0_2_ = 2;\n    uStack_40 = (*(code *)PTR_inet_addr_00412060)(&UNK_004013c4);\n    uStack_44 = func_1b7514de25744a2a(uStack_44._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_44,0x10);\n    if (iVar3 != -1) {\n      (*(code *)PTR_recv_00412058)(iVar2,&ppppuStack_54,8,0);\n    }\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\n  puVar5 = &uStack_44;\n  ppppuStack_34 = ppppuStack_54;\n  ppppuStack_30 = ppppuStack_50;\n  func_56c5be1abf7a43b2();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n    iVar2 = puVar5[4];\n    piVar4 = (int *)puVar5[5];\n    *piVar4 = iVar2;\n    *(int **)(iVar2 + 4) = piVar4;\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_631d2b2a3f954a8c(int param_1,int *param_2)\n\n{\n  *param_2 = param_1;\n  *(int **)(param_1 + 4) = param_2;\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_e50f3ae5eb7e4073\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  undefined uVar4;\n  undefined uVar5;\n  undefined uVar6;\n  uint uVar7;\n  undefined *puVar8;\n  \n  uVar7 = (*(code *)PTR_calloc_00412050)(0x14,1,param_3,param_4,&_gp);\n  uVar3 = _UNK_00401330;\n  puVar8 = &_gp;\n  uVar1 = uVar7 & 3;\n  *(uint *)(uVar7 - uVar1) =\n       *(uint *)(uVar7 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401330 >> uVar1 * 8;\n  uVar1 = uVar7 + 3 & 3;\n  puVar2 = (uint *)((uVar7 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar6 = UNK_0040133a;\n  uVar5 = UNK_00401339;\n  uVar4 = UNK_00401338;\n  uVar3 = _UNK_00401334;\n  uVar1 = uVar7 + 4 & 3;\n  puVar2 = (uint *)((uVar7 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | _UNK_00401334 >> uVar1 * 8;\n  uVar1 = uVar7 + 7 & 3;\n  puVar2 = (uint *)((uVar7 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  *(undefined *)(uVar7 + 8) = uVar4;\n  *(undefined *)(uVar7 + 9) = uVar5;\n  *(undefined *)(uVar7 + 10) = uVar6;\n  func_b0a190ab754f4297();\n                    /* WARNING: Could not recover jumptable at 0x004010c0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(puVar8 + -0x7f98))(uVar7);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_7005726bc91941fa(void)\n\n{\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  uint uStack_18;\n  undefined *puStack_14;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412078;\n  puStack_14 = &UNK_00401924;\n  func_e06058cb15ff4658(&UNK_00401924);\n  uStack_24 = _UNK_00401924;\n  uStack_20 = _UNK_00401928;\n  uStack_1c = _UNK_0040192c;\n  puStack_14 = (undefined *)_UNK_00401934;\n  uStack_10 = _UNK_00401938;\n  uStack_18 = _UNK_00401930 & 0xffffff00;\n  func_e06058cb15ff4658(&uStack_24);\n  func_e06058cb15ff4658(puStack_14);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412078) {\n    (*(code *)PTR___stack_chk_fail_00412070)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fdf9905f7e494cbb(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412064)(auStack_70);\n  (*(code *)PTR_memcpy_00412088)(auStack_70,param_1,uVar1);\n  uStack_d = 0;\n  func_3bdf4f014d03467b(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_10d1d9639a074987(void)\n\n{\n  undefined4 *in_zero;\n  \n  func_6ec3711817af4c5d(*in_zero);\n                    /* WARNING: Could not recover jumptable at 0x00400a84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011c0,in_zero[1]);\n  return;\n}\n\n",
        "\nvoid func_b61b9ebf83a74728(void)\n\n{\n  undefined4 auStack_1b0 [100];\n  undefined *puStack_20;\n  uint uStack_18;\n  undefined4 *puStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_14 = auStack_1b0;\n  for (uStack_18 = 0; uStack_18 < 100; uStack_18 = uStack_18 + 1) {\n    puStack_14[uStack_18] = 5;\n  }\n  puStack_10 = puStack_14;\n  func_4ef004574a454327(puStack_14);\n  if (iStack_c != **(int **)(puStack_20 + -0x7f94)) {\n    (**(code **)(puStack_20 + -0x7f9c))();\n  }\n  return;\n}\n\n",
        "\nvoid func_a8fd9ac3851d43a6(void)\n\n{\n  return;\n}\n\n",
        "\nvoid func_b5f5a7fe82c84dc6(void)\n\n{\n  undefined auStack_24 [15];\n  undefined uStack_15;\n  undefined *puStack_14;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412078;\n  puStack_14 = &UNK_00401934;\n  func_b5ef4e58a60c49e6(&UNK_00401934);\n  (*(code *)PTR_memcpy_0041207c)(auStack_24,&UNK_00401934,0x18);\n  uStack_15 = 0;\n  func_b5ef4e58a60c49e6(auStack_24);\n  func_b5ef4e58a60c49e6(puStack_14);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412078) {\n    (*(code *)PTR___stack_chk_fail_00412070)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_81a4586706ad4bb3(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  uVar9 = (*(code *)PTR_malloc_00412068)(0x18);\n  *(undefined **)(uVar9 + 0x10) = &UNK_00401960;\n  func_fbcc29c2bcfc4ea6(*(undefined4 *)(uVar9 + 0x10));\n  uVar8 = _UNK_00401974;\n  uVar7 = _UNK_00401970;\n  uVar6 = _UNK_0040196c;\n  uVar5 = _UNK_00401968;\n  uVar4 = _UNK_00401964;\n  uVar3 = _UNK_00401960;\n  uVar1 = uVar9 & 3;\n  *(uint *)(uVar9 - uVar1) =\n       *(uint *)(uVar9 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401960 >> uVar1 * 8;\n  uVar1 = uVar9 + 3 & 3;\n  puVar2 = (uint *)((uVar9 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 4 & 3;\n  puVar2 = (uint *)((uVar9 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n  uVar1 = uVar9 + 7 & 3;\n  puVar2 = (uint *)((uVar9 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 8 & 3;\n  puVar2 = (uint *)((uVar9 + 8) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar5 >> uVar1 * 8;\n  uVar1 = uVar9 + 0xb & 3;\n  puVar2 = (uint *)((uVar9 + 0xb) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar5 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0xc & 3;\n  puVar2 = (uint *)((uVar9 + 0xc) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar6 >> uVar1 * 8;\n  uVar1 = uVar9 + 0xf & 3;\n  puVar2 = (uint *)((uVar9 + 0xf) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar6 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0x10 & 3;\n  puVar2 = (uint *)((uVar9 + 0x10) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar7 >> uVar1 * 8;\n  uVar1 = uVar9 + 0x13 & 3;\n  puVar2 = (uint *)((uVar9 + 0x13) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar7 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0x14 & 3;\n  puVar2 = (uint *)((uVar9 + 0x14) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar8 >> uVar1 * 8;\n  uVar1 = uVar9 + 0x17 & 3;\n  puVar2 = (uint *)((uVar9 + 0x17) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar8 << (3 - uVar1) * 8;\n  *(undefined *)(uVar9 + 0xf) = 0;\n  func_fbcc29c2bcfc4ea6(uVar9);\n  func_fbcc29c2bcfc4ea6(*(undefined4 *)(uVar9 + 0x10));\n  return;\n}\n\n",
        "\nvoid func_11fd86e9aa224595(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  uint *puVar4;\n  char cStack_79;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  puVar4 = &uStack_78;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412094;\n  (*(code *)PTR_memset_0041206c)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR___fgets_chk_00412068)\n                    (puVar4,0xffffffff,100,*(undefined4 *)PTR_stdin_00412074);\n  if (iVar2 == 0) {\n    func_2f2467402b584067(&UNK_00401384);\n    uStack_78 = uStack_78 & 0xffffff;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412078)(puVar4);\n    if ((iVar2 != 0) && (pcVar3 = (char *)((int)puVar4 + iVar2 + -1), *pcVar3 == '\\n')) {\n      *pcVar3 = '\\0';\n    }\n  }\n  func_baad7c16f23b43c3();\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n    if (puVar4 == (uint *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2ecaa315b6484535(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400a74. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011b0,5);\n  return;\n}\n\n",
        "\nvoid func_63d4486693384779(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_98;\n  int iStack_94;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  for (iStack_98 = 0; iStack_98 < 1; iStack_98 = iStack_98 + 1) {\n    uStack_70 = 0;\n    (*(code *)PTR_memset_00412068)(auStack_6c,0,0x60);\n    iStack_94 = -1;\n    iVar1 = (*(code *)PTR_strlen_00412074)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412068)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = 0;\n      uStack_7e = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar3 = (*(code *)PTR_listen_00412060)(iVar2,5);\n      if ((((iVar3 != -1) &&\n           (iStack_94 = (*(code *)PTR_accept_0041208c)(iVar2,0,0), iStack_94 != -1)) &&\n          (iVar3 = (*(code *)PTR_bind_00412070)(iVar2,&uStack_80,0x10), iVar3 != -1)) &&\n         ((iVar1 = (*(code *)PTR_recv_00412054)(iStack_94,auStack_6c + iVar1 + -4,99 - iVar1,0),\n          iVar1 != -1 && (iVar1 != 0)))) {\n        auStack_6c[iVar1 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    if (iStack_94 != -1) {\n      (*(code *)PTR_close_00412050)(iStack_94);\n    }\n    func_106ea5c9f181443a(&uStack_70);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9f0aff31b0514c33(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  undefined4 *puVar7;\n  undefined4 *puStack_1c0;\n  undefined4 uStack_1bc;\n  undefined4 uStack_1b8;\n  undefined4 uStack_1b4;\n  undefined4 uStack_1b0;\n  undefined4 uStack_1ac;\n  undefined auStack_1a8 [396];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  puVar7 = &uStack_1ac;\n  uStack_1ac = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_00412080)(auStack_1a8,0,0x18c);\n  iVar2 = (*(code *)PTR_wcslen_0041207c)(puVar7);\n  iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_1b8 = 0;\n    uStack_1b4 = 0;\n    uStack_1b0 = 0;\n    uStack_1bc._2_2_ = 0;\n    uStack_1bc._0_2_ = 2;\n    uStack_1b8 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401494);\n    uStack_1bc = func_430562be92334829(uStack_1bc._0_2_,0x6987);\n    iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_1bc,0x10);\n    if (iVar4 != -1) {\n      uVar5 = (*(code *)PTR_recv_00412058)(iVar3,puVar7 + iVar2,(99 - iVar2) * 4,0);\n      if (1 < uVar5 + 1) {\n        *(undefined4 *)(auStack_1a8 + ((uVar5 >> 2) + iVar2) * 4 + -4) = 0;\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,0xd);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,10);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  iVar2 = (*(code *)PTR___isoc99_swscanf_00412094)(puVar7,&UNK_004014c4,&puStack_1c0);\n  if (iVar2 == 1) {\n    puVar7 = puStack_1c0;\n    if ((int)puStack_1c0 < 1) {\n      puVar7 = (undefined4 *)0x0;\n    }\n    func_b75f56627c454af7();\n  }\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  if (puVar7 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_cc39568a71954bd3(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_128;\n  undefined4 uStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 uStack_118;\n  undefined2 uStack_114;\n  undefined auStack_112 [246];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_118 = _UNK_00401550;\n  uStack_114 = _UNK_00401554;\n  (*(code *)PTR_memset_0041207c)(auStack_112,0,0xf4);\n  iVar2 = func_d959e80585774401();\n  if (iVar2 == 0) {\n    (*(code *)PTR__MIPS_STUBS__004120b4)(&uStack_118,&UNK_00401520,0xfa);\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412084)(&uStack_118);\n    iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar3 != -1) {\n      uStack_124 = 0;\n      uStack_120 = 0;\n      uStack_11c = 0;\n      uStack_128._2_2_ = 0;\n      uStack_128._0_2_ = 2;\n      uStack_124 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401514);\n      uStack_128 = func_835389a00c614083(uStack_128._0_2_,0x6987);\n      iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_128,0x10);\n      if (iVar4 != -1) {\n        iVar4 = (*(code *)PTR_recv_00412058)(iVar3,(int)&uStack_118 + iVar2,0xf9 - iVar2,0);\n        if (1 < iVar4 + 1U) {\n          *(undefined *)((int)&uStack_118 + iVar2 + iVar4) = 0;\n          puVar5 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_118,0xd);\n          if (puVar5 != (undefined *)0x0) {\n            *puVar5 = 0;\n          }\n          puVar5 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_118,10);\n          if (puVar5 != (undefined *)0x0) {\n            *puVar5 = 0;\n          }\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar3);\n    }\n  }\n  puVar6 = &uStack_118;\n  (*(code *)PTR_putenv_00412070)();\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_86e72722db6942b5(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  (*(code *)PTR_memset_00412068)(puStack_78,0x41,0x31);\n  puVar1 = puStack_88;\n  puStack_78[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc8))(puStack_74,0x41,99);\n  puVar1 = puStack_88;\n  puStack_74[99] = 0;\n  if (staticTrue != 0) {\n    puStack_7c = puStack_78;\n  }\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar2 = (**(code **)(puStack_88 + -0x7fc0))(auStack_70);\n  (**(code **)(puStack_88 + -0x7f9c))(auStack_70,puStack_7c,uVar2);\n  uStack_d = 0;\n  func_d598f53b5fc04ea8(auStack_70);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_1ac7b2e9fcae4f60(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_150 [104];\n  undefined *puStack_e8;\n  undefined *puStack_dc;\n  undefined *puStack_d8;\n  undefined auStack_d4 [199];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_e8 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_dc = auStack_150;\n  (*(code *)PTR_memset_00412058)(puStack_dc,0x41,99);\n  puVar1 = puStack_e8;\n  puStack_dc[99] = 0;\n  puStack_d8 = puStack_dc + -8;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_d4,0x43,199);\n  uStack_d = 0;\n  (**(code **)(puStack_e8 + -0x7fb0))(auStack_d4,puStack_d8);\n  func_6c9e55307b714252(auStack_d4);\n  if (iStack_c != **(int **)(puStack_e8 + -0x7fa0)) {\n    (**(code **)(puStack_e8 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_3bedf5292d084b75(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(100);\n  (*(code *)PTR_free_00412084)(iVar1);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400a50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041206c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_e0cc56c4fd8a4ad6(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_d4 [100];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  iVar3 = (*(code *)PTR__MIPS_STUBS__00412090)(auStack_d4,uVar2,100);\n  func_4bbca0e8ef034271();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ab0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_93c73e8ac1034589(void)\n\n{\n  uint uVar1;\n  int iStack_7c;\n  uint uStack_78;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  iStack_7c = 0;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    iStack_7c = (*(code *)PTR_malloc_00412074)(0x32);\n    (*(code *)PTR_memset_0041205c)(iStack_7c,0x41,0x31);\n    *(undefined *)(iStack_7c + 0x31) = 0;\n  }\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412064)(auStack_70);\n  for (uStack_78 = 0; uStack_78 < uVar1; uStack_78 = uStack_78 + 1) {\n    auStack_70[uStack_78] = *(undefined *)(iStack_7c + uStack_78);\n  }\n  uStack_d = 0;\n  func_136afab787de4325(auStack_70);\n  (*(code *)PTR_free_0041208c)(iStack_7c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b2839529f8cb40d0(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  iVar3 = *(int *)PTR_CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData_00412048;\n  uVar2 = (*(code *)PTR_memset_00412068)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_strcpy_00412084)(iVar3,uVar2);\n  func_857b17a423ea472d(iVar3);\n  (*(code *)PTR_free_00412094)();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ba0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_6db1a0278f1d4dd4(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  \n  puVar1 = PTR___stack_chk_guard_0041207c;\n  iVar2 = *(int *)PTR___stack_chk_guard_0041207c;\n  func_07307bfed70b4990(&UNK_004011e4);\n  iVar3 = _UNK_004011f4;\n  func_07307bfed70b4990();\n  func_07307bfed70b4990();\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412074)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041206c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_af35983d19164e82(void)\n\n{\n  int iVar1;\n  \n  iVar1 = func_8697699778084571();\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400ab4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_004011f0,5);\n  return;\n}\n\n",
        "\nvoid func_454b2e80680f4769(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  iVar2 = func_a3c989439d2c4204();\n  puVar1 = puStack_88;\n  if (iVar2 != 0) {\n    puStack_7c = puStack_78;\n    *puStack_78 = 0;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fac))(puStack_7c,auStack_70);\n  func_c05cdd3fbe244bff(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7f9c)) {\n    (**(code **)(puStack_88 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_a2fff5cb87384ae2(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar1 = (*(code *)PTR_wcslen_00412064)(auStack_19c);\n  (*(code *)PTR_wcsncat_00412054)(auStack_32c,auStack_19c,uVar1);\n  func_c53f59aa6ab54e4a(auStack_32c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400c08) */\n\nvoid func_229d7e807211453f(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400c00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_0041207c)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_cda465578792432c(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400b08. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e1ae586ca6074af7(undefined4 param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_00412074)(param_1,&UNK_00401e80);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_00412054)(iVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_a61b55058e8b4427(undefined4 param_1)\n\n{\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  (*(code *)PTR_wmemset_00412068)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscpy_00412088)(param_1,auStack_19c);\n  func_525593aeb46c4b91(param_1);\n  (*(code *)PTR_free_0041209c)(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c2d431a781ac4e5b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_0041207c)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401464);\n    uStack_88 = func_53f61e7f12884ce5(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_88,0x10);\n    if (iVar3 == -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    else {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,&uStack_78,99,0);\n      if (1 < iVar3 + 1U) {\n        auStack_74[iVar3 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n  }\n  iVar2 = *(int *)PTR_stdout_00412074;\n  (*(code *)PTR___fprintf_chk_00412064)(iVar2,1,&uStack_78);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (iVar2 == 0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400ca0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_52257251947b44d0\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_realloc_00412074)(0,4,param_3,param_4,&_gp);\n  func_e7a5ba9321ad4ebc(uVar1);\n  return;\n}\n\n",
        "\nvoid func_6b1ba60db8d945dc(undefined4 param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_0041207c)(param_1,&UNK_00401624);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c18. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_pclose_00412058)(iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b3cf3d4ea10d494c(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined auStack_f0 [8];\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_80 = &_gp;\n  puVar4 = auStack_f0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_e8,0x41,99);\n  *(undefined *)(iVar2 + 99) = 0;\n  func_b3cf3d4ea10d494cData = puVar4;\n  uVar3 = (**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa8))(puVar4,uVar3);\n  func_fea4e2ce0b2c4dcf();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa4))();\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_d42b65b53ad64fac(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 *puVar6;\n  \n  puVar6 = (undefined4 *)(*(code *)PTR_malloc_00412070)(0x18);\n  puVar6[4] = &UNK_00401234;\n  func_4c0fd03492c546f6(&UNK_00401234);\n  uVar5 = _UNK_00401248;\n  uVar4 = _UNK_00401244;\n  uVar3 = _UNK_0040123c;\n  uVar2 = _UNK_00401238;\n  uVar1 = _UNK_00401234;\n  puVar6[3] = _UNK_00401240;\n  *puVar6 = uVar1;\n  puVar6[1] = uVar2;\n  puVar6[2] = uVar3;\n  puVar6[4] = uVar4;\n  puVar6[5] = uVar5;\n  *(undefined *)((int)puVar6 + 0xf) = 0;\n  func_4c0fd03492c546f6(puVar6);\n  func_4c0fd03492c546f6(puVar6[4]);\n                    /* WARNING: Could not recover jumptable at 0x00400aac. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412084)(puVar6);\n  return;\n}\n\n",
        "\nvoid func_6e0b473d304148f4(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  char cStack_79;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412064)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR___fgets_chk_00412060)\n                    (&uStack_78,0xffffffff,100,*(undefined4 *)PTR_stdin_0041206c);\n  if (iVar2 == 0) {\n    func_9d1424171b254513(&UNK_00401304);\n    uStack_78 = uStack_78 & 0xffffff;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412070)(&uStack_78);\n    if ((iVar2 != 0) && (pcVar3 = (char *)((int)&uStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n      *pcVar3 = '\\0';\n    }\n  }\n  puVar4 = &UNK_0040131c;\n  (*(code *)PTR_execlp_00412084)\n            (&UNK_0040131c,&UNK_0040131c,&UNK_00401318,&UNK_00401314,&uStack_78,0);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_1bfc444d74b04120(void)\n\n{\n  int iVar1;\n  int iVar2;\n  char cStack_71;\n  undefined4 auStack_70 [4];\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  auStack_70[0] = _UNK_00401b84;\n  auStack_70[1] = _UNK_00401b88;\n  auStack_70[2] = _UNK_00401b8c;\n  auStack_70[3] = _UNK_00401b90;\n  (*(code *)PTR_memset_00412060)(auStack_60,0,0x54);\n  iVar1 = (*(code *)PTR_strlen_0041206c)(auStack_70);\n  if (1 < 100U - iVar1) {\n    iVar2 = (*(code *)PTR_fgets_0041208c)\n                      ((int)auStack_70 + iVar1,100 - iVar1,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar2 == 0) {\n      func_0f46ca089feb400e(&UNK_00401b74);\n      *(undefined *)((int)auStack_70 + iVar1) = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_strlen_0041206c)(auStack_70);\n      if ((iVar1 != 0) && (*(char *)((int)auStack_70 + iVar1 + -1) == '\\n')) {\n        *(undefined *)((int)auStack_70 + iVar1 + -1) = 0;\n      }\n    }\n  }\n  func_ff9704b13b444c1c(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9e7c67fbe05b4029(void)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  uint uStack_14;\n  \n  func_9e7c67fbe05b4029Global = 1;\n  uVar1 = func_1438d2a79e1f4a37(0xffffffff);\n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412074)(uVar1 << 2);\n  for (uStack_14 = 0; uStack_14 < uVar1; uStack_14 = uStack_14 + 1) {\n    puVar2[uStack_14] = 0;\n  }\n  func_72925d71b8fe4391(*puVar2);\n  (*(code *)PTR_free_0041208c)(puVar2);\n  return;\n}\n\n",
        "\nint func_2971d4f588c64430(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = (*(code *)PTR_strlen_0041206c)();\n  iVar2 = (*(code *)PTR_getenv_00412080)(&UNK_00401364);\n  if (iVar2 != 0) {\n    (*(code *)PTR_strncat_00412050)(param_1 + iVar1,iVar2,99 - iVar1);\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_7d7e295009364d30(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int unaff_s0;\n  undefined4 unaff_s1;\n  undefined *unaff_s2;\n  int unaff_s3;\n  code *pcVar4;\n  int iVar5;\n  int iVar6;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  do {\n    puVar1 = PTR___stack_chk_guard_0041209c;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s2;\n    *(undefined4 *)((int)register0x00000074 + -0x40) = 0x10;\n    *(undefined4 *)((int)register0x00000074 + -0x10) = unaff_s1;\n    unaff_s1 = 0xffffffff;\n    *(undefined **)((int)register0x00000074 + -0x48) = &_gp;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(int *)((int)register0x00000074 + -8) = unaff_s3;\n    *(int *)((int)register0x00000074 + -0x14) = unaff_s0;\n    *(undefined4 *)((int)register0x00000074 + -0x1c) = *(undefined4 *)PTR___stack_chk_guard_0041209c\n    ;\n    iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n    iVar5 = *(int *)((int)register0x00000074 + -0x48);\n    if (iVar2 != -1) {\n      pcVar4 = *(code **)(iVar5 + -0x7fa8);\n      *(undefined4 *)((int)register0x00000074 + -0x38) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x34) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x30) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x3c) = 0x24e20;\n      iVar5 = (*pcVar4)(iVar2,(undefined *)((int)register0x00000074 + -0x3c),0x10);\n      iVar6 = *(int *)((int)register0x00000074 + -0x48);\n      unaff_s0 = iVar2;\n      if (iVar5 != -1) {\n        iVar5 = (**(code **)(iVar6 + -0x7fb8))(iVar2,5);\n        iVar6 = *(int *)((int)register0x00000074 + -0x48);\n        if (iVar5 != -1) {\n          unaff_s3 = (**(code **)(iVar6 + -0x7f94))(iVar2,0,0);\n          iVar6 = *(int *)((int)register0x00000074 + -0x48);\n          if (unaff_s3 != -1) {\n            iVar5 = (**(code **)(iVar6 + -0x7fbc))\n                              (unaff_s3,(undefined *)((int)register0x00000074 + -0x2c),\n                               (undefined *)((int)register0x00000074 + -0x40));\n            iVar6 = *(int *)((int)register0x00000074 + -0x48);\n            if (iVar5 != -1) {\n              uVar3 = (**(code **)(iVar6 + -0x7f8c))\n                                (*(undefined4 *)((int)register0x00000074 + -0x28));\n              iVar5 = (**(code **)(*(int *)((int)register0x00000074 + -0x48) + -0x7f74))\n                                (&UNK_00401484,uVar3);\n              if (iVar5 == 0) {\n                (**(code **)(*(int *)((int)register0x00000074 + -0x48) + -0x7fd4))\n                          (unaff_s3,&UNK_00401494,0xf);\n                iVar6 = *(int *)((int)register0x00000074 + -0x48);\n              }\n              else {\n                iVar5 = (**(code **)(*(int *)((int)register0x00000074 + -0x48) + -0x7fd4))\n                                  (unaff_s3,&UNK_004014a4,8,0);\n                iVar6 = *(int *)((int)register0x00000074 + -0x48);\n                if (iVar5 == -1) {\n                  func_093e839540d84373(&UNK_004014b0);\n                  iVar6 = *(int *)((int)register0x00000074 + -0x48);\n                }\n              }\n            }\n            (**(code **)(iVar6 + -0x7fcc))(iVar2);\n            (**(code **)(*(int *)((int)register0x00000074 + -0x48) + -0x7fcc))(unaff_s3);\n            iVar5 = *(int *)((int)register0x00000074 + -0x48);\n            goto code_r0x00400b1c;\n          }\n        }\n      }\n      (**(code **)(iVar6 + -0x7fcc))(iVar2);\n      iVar5 = *(int *)((int)register0x00000074 + -0x48);\n    }\ncode_r0x00400b1c:\n    if (*(int *)((int)register0x00000074 + -0x1c) == *(int *)puVar1) {\n      return;\n    }\n    unaff_retaddr = func_7d7e295009364d30;\n    (**(code **)(iVar5 + -0x7f90))();\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x58);\n  } while( true );\n}\n\n",
        "\nvoid func_724e5170a41546af(void)\n\n{\n  short *psVar1;\n  \n  psVar1 = (short *)(*(code *)PTR_malloc_0041206c)(4);\n  *psVar1 = 5;\n  func_5fce8116a7ff45ab((int)*psVar1);\n  (*(code *)PTR_free_00412084)(psVar1);\n  return;\n}\n\n",
        "\nvoid func_8fd29aca11ae4970(void)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    return;\n  }\n  piVar1 = (int *)(*(code *)PTR_malloc_00412074)(4);\n  iVar2 = *piVar1;\n  (*(code *)PTR_free_00412088)(piVar1);\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f128f963c6b04255(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 *puVar5;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 *puStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_80;\n  undefined auStack_7c [96];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  uStack_80 = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_0041207c)(auStack_7c,0,0x60);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_90 = 0;\n    puStack_8c = (undefined4 *)0x0;\n    uStack_88 = 0;\n    uStack_94._2_2_ = 0;\n    uStack_94._0_2_ = 2;\n    uStack_90 = (*(code *)PTR_inet_addr_00412060)(&UNK_004014e4);\n    uStack_94 = func_c00f855edbc64f02(uStack_94._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_94,0x10);\n    if (iVar3 == -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n    else {\n      iVar3 = (*(code *)PTR_recv_00412058)(iVar2,&uStack_80,99,0);\n      if (1 < iVar3 + 1U) {\n        auStack_7c[iVar3 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_80,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_80,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n  }\n  puVar5 = &uStack_94;\n  puStack_8c = &uStack_80;\n  func_d8d2762203634f54();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (puVar5 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_817d439743be4350(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iStack_10030;\n  undefined2 uStack_10024;\n  undefined2 uStack_10022;\n  undefined4 uStack_10020;\n  undefined auStack_10014 [65540];\n  \n  iVar1 = *(int *)PTR___stack_chk_guard_004130a4;\n  iStack_10030 = -1;\n  iVar2 = (*(code *)PTR_fopen_004130ac)(&UNK_00401f34,&UNK_00401f30);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR_fgets_004130a0)(auStack_10014,0xffff,iVar2);\n    if (iVar3 == 0) {\n      func_2ddee277bde44032(&UNK_00401f40);\n    }\n    (*(code *)PTR_fclose_00413060)(iVar2);\n  }\n  iVar2 = (*(code *)PTR_socket_0041305c)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041306c)(&uStack_10024,0,0x10);\n    uStack_10024 = 2;\n    uStack_10020 = 0;\n    uStack_10022 = (*(code *)PTR_htons_00413094)(0x6987);\n    iVar3 = (*(code *)PTR_bind_00413074)(iVar2,&uStack_10024,0x10);\n    if (((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00413064)(iVar2,5), iVar3 != -1)) &&\n       (iStack_10030 = (*(code *)PTR_accept_0041308c)(iVar2,0,0), iStack_10030 != -1)) {\n      uVar4 = (*(code *)PTR_strlen_00413078)(auStack_10014);\n      (*(code *)PTR_send_0041304c)(iStack_10030,auStack_10014,uVar4,0);\n      (*(code *)PTR_strlen_00413078)(auStack_10014);\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413054)(iVar2);\n  }\n  if (iStack_10030 != -1) {\n    (*(code *)PTR_close_00413054)(iStack_10030);\n  }\n  if (iVar1 != *(int *)PTR___stack_chk_guard_004130a4) {\n    (*(code *)PTR___stack_chk_fail_00413098)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_22b3aafc8f7e4bf4(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  uint *puVar3;\n  undefined *puVar4;\n  int iVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_70;\n  undefined auStack_6c [4];\n  undefined auStack_68 [2];\n  undefined auStack_66 [3];\n  undefined auStack_63 [7];\n  undefined4 uStack_5c;\n  undefined2 uStack_58;\n  undefined uStack_56;\n  int iStack_c;\n  \n  puVar4 = PTR___stack_chk_guard_00412080;\n  uStack_70 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  iVar5 = (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  puVar6 = &uStack_70;\n  auStack_6c = (undefined  [4])_UNK_00401238;\n  stack0xffffff9c = _UNK_00401240;\n  uStack_70 = _UNK_00401234;\n  _auStack_68 = _UNK_0040123c;\n  auStack_63._3_4_ = _UNK_00401244;\n  puVar1 = auStack_6c + 2;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_00401238 >> uVar2 * 8;\n  puVar1 = auStack_68 + 1;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n       _UNK_00401238 << (3 - uVar2) * 8;\n  uStack_5c = _UNK_00401248;\n  puVar1 = auStack_68 + 2;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_0040123c >> uVar2 * 8;\n  uVar2 = (uint)auStack_63 & 3;\n  puVar3 = (uint *)(auStack_63 + -uVar2);\n  *puVar3 = *puVar3 & 0xffffffffU >> (uVar2 + 1) * 8 | _UNK_0040123c << (3 - uVar2) * 8;\n  uStack_56 = UNK_0040124e;\n  uStack_58 = _UNK_0040124c;\n  stack0xffffff9c = func_210a95f116cb478f(stack0xffffff9c,*(undefined2 *)(iVar5 + 8));\n  func_8689b34171f242b1();\n  if (iStack_c == *(int *)puVar4) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_6d65c488e13e4a76(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar3;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    uVar2 = param_1;\n    puVar1 = PTR___stack_chk_guard_00412098;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s1;\n    unaff_s1 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0x10) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412098\n    ;\n    (*(code *)PTR_wmemset_00412070)(unaff_s1,0x43,99);\n    pcVar3 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fb4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    (*pcVar3)(uVar2,unaff_s1);\n    param_1 = uVar2;\n    func_aca3434f5c7f446c();\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = &UNK_00400c38;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f90))();\n    unaff_s0 = uVar2;\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\nvoid func_a2ceb03a429f4b1f(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  uint uVar3;\n  undefined *puVar4;\n  int iVar5;\n  uint uVar6;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined auStack_24 [16];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a8;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a8;\n  iVar2 = func_db6660a17ce24a99();\n  if (iVar2 == 0) {\n    uVar6 = 0x14;\n  }\n  else {\n    iVar2 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar2 == -1) {\n      uVar6 = 0;\n    }\n    else {\n      uStack_30 = 0;\n      uStack_2c = 0;\n      uStack_28 = 0;\n      uStack_34._2_2_ = 0;\n      uStack_34._0_2_ = 2;\n      uStack_30 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401584);\n      uStack_34 = func_9f7246a8dfad4788(uStack_34._0_2_,0x6987);\n      iVar5 = (*(code *)PTR_connect_00412060)(iVar2,&uStack_34,0x10);\n      if (iVar5 == -1) {\ncode_r0x00400d3c:\n        uVar6 = 0;\n      }\n      else {\n        iVar5 = (*(code *)PTR_recv_0041205c)(iVar2,auStack_24,0xd,0);\n        if (iVar5 + 1U < 2) goto code_r0x00400d3c;\n        auStack_24[iVar5] = 0;\n        uVar6 = (*(code *)PTR_strtoul_00412084)(auStack_24,0,0);\n      }\n      (*(code *)PTR_close_00412058)(iVar2);\n    }\n  }\n  iVar2 = func_db6660a17ce24a99();\n  if (iVar2 == 0) {\n    uVar3 = (*(code *)PTR_wcslen_0041207c)(&UNK_00401628);\n    if ((uVar3 < uVar6) && (uVar6 < 100)) goto code_r0x00400ba8;\n    puVar4 = (undefined *)0x400000;\n    if (iStack_14 == *(int *)puVar1) {\n      puVar4 = &UNK_004015c4;\n      goto printLine;\n    }\n  }\n  else {\n    uVar3 = (*(code *)PTR_wcslen_0041207c)();\n    if (uVar3 < uVar6) {\ncode_r0x00400ba8:\n      puVar4 = (undefined *)(*(code *)PTR_malloc_00412094)(uVar6 << 2);\n      (*(code *)PTR_wcscpy_0041209c)(puVar4,&UNK_00401628);\n      func_96f2e6b1d2b440fb(puVar4);\n      if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400c00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_free_004120ac)();\n        return;\n      }\n    }\n    else {\n      puVar4 = (undefined *)0x400000;\n      if (iStack_14 == *(int *)puVar1) {\n        puVar4 = &UNK_00401590;\n        goto printLine;\n      }\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_004120a0)();\nprintLine:\n  if (puVar4 == (undefined *)0x0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400da0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_puts_00412090)();\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0523f0c11eff40c0(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_108 = _UNK_00401a84;\n  uStack_104 = _UNK_00401a88;\n  (*(code *)PTR_memset_00412060)(auStack_102,0,0xf4);\n  uVar1 = func_5bbfc484f4cd44bc(&uStack_108);\n  (*(code *)PTR_putenv_00412058)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_464f90d7cceb41bf(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  iVar1 = (*(code *)PTR_rand_0041205c)();\n  iVar2 = (*(code *)PTR_rand_0041205c)();\n  uVar3 = (*(code *)PTR_rand_0041205c)();\n  func_fa3bc340308e4331\n            (iVar1 << 0x1e ^ iVar2 << 0xf ^ uVar3);\n  return;\n}\n\n",
        "\nvoid func_37fb4c73fc794d1d(void)\n\n{\n  undefined *puStack_60;\n  int iStack_54;\n  int *piStack_50;\n  int *piStack_4c;\n  int iStack_48;\n  int iStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  puStack_60 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  piStack_50 = &iStack_54;\n  piStack_4c = &iStack_54;\n  iStack_54 = (*(code *)PTR_malloc_0041206c)(100);\n  iStack_48 = *piStack_50;\n  (*(code *)PTR_memset_00412058)(iStack_48,0x41,99);\n  *(undefined *)(iStack_48 + 99) = 0;\n  *piStack_50 = iStack_48;\n  iStack_44 = *piStack_4c;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  (*(code *)PTR_strcpy_00412074)(&uStack_40,iStack_44);\n  func_343e0a7c5d8e431a(iStack_44);\n  (**(code **)(puStack_60 + -0x7f98))(iStack_44);\n  if (iStack_c != **(int **)(puStack_60 + -0x7f9c)) {\n    (**(code **)(puStack_60 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_cb422ce50da44da7(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_20 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_88,0x41,99);\n  iVar3 = iVar2 + -8;\n  *(undefined *)(iVar2 + 99) = 0;\n  func_68e2cd496999405b();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7fa4))();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_25e9fb6ddec949e2(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_3384a26b52db4bdc();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_783af6c4f7d74533(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  int iVar9;\n  uint uVar10;\n  \n  iVar9 = func_3e77f4061a804e25();\n  if (iVar9 != 0) {\n    uVar10 = (*(code *)PTR_malloc_00412068)(0x18);\n    *(undefined **)(uVar10 + 0x10) = &UNK_004019b0;\n    func_8e618e4a231640b2(*(undefined4 *)(uVar10 + 0x10));\n    uVar8 = _UNK_004019c4;\n    uVar7 = _UNK_004019c0;\n    uVar6 = _UNK_004019bc;\n    uVar5 = _UNK_004019b8;\n    uVar4 = _UNK_004019b4;\n    uVar3 = _UNK_004019b0;\n    uVar1 = uVar10 & 3;\n    *(uint *)(uVar10 - uVar1) =\n         *(uint *)(uVar10 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_004019b0 >> uVar1 * 8;\n    uVar1 = uVar10 + 3 & 3;\n    puVar2 = (uint *)((uVar10 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    uVar1 = uVar10 + 4 & 3;\n    puVar2 = (uint *)((uVar10 + 4) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n    uVar1 = uVar10 + 7 & 3;\n    puVar2 = (uint *)((uVar10 + 7) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n    uVar1 = uVar10 + 8 & 3;\n    puVar2 = (uint *)((uVar10 + 8) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar5 >> uVar1 * 8;\n    uVar1 = uVar10 + 0xb & 3;\n    puVar2 = (uint *)((uVar10 + 0xb) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar5 << (3 - uVar1) * 8;\n    uVar1 = uVar10 + 0xc & 3;\n    puVar2 = (uint *)((uVar10 + 0xc) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar6 >> uVar1 * 8;\n    uVar1 = uVar10 + 0xf & 3;\n    puVar2 = (uint *)((uVar10 + 0xf) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar6 << (3 - uVar1) * 8;\n    uVar1 = uVar10 + 0x10 & 3;\n    puVar2 = (uint *)((uVar10 + 0x10) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar7 >> uVar1 * 8;\n    uVar1 = uVar10 + 0x13 & 3;\n    puVar2 = (uint *)((uVar10 + 0x13) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar7 << (3 - uVar1) * 8;\n    uVar1 = uVar10 + 0x14 & 3;\n    puVar2 = (uint *)((uVar10 + 0x14) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar8 >> uVar1 * 8;\n    uVar1 = uVar10 + 0x17 & 3;\n    puVar2 = (uint *)((uVar10 + 0x17) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar8 << (3 - uVar1) * 8;\n    *(undefined *)(uVar10 + 0xf) = 0;\n    func_8e618e4a231640b2(uVar10);\n    func_8e618e4a231640b2(*(undefined4 *)(uVar10 + 0x10));\n  }\n  return;\n}\n\n",
        "\nvoid func_115aca8b87c14e13(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_system_00412090)\n                    (*(undefined4 *)\n                      PTR_CWE78_OS_Command_Injection__char_connect_socket_system_68_badData_00412040\n                    );\n  if (iVar1 < 1) {\n    func_6176b9317d034673(&UNK_00401e30);\n    (*(code *)PTR_exit_00412088)(1);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_5c38b2a205c54439(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 uStack_68;\n  undefined4 uStack_64;\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  uStack_70 = _UNK_00401c34;\n  uStack_6c = _UNK_00401c38;\n  uStack_68 = _UNK_00401c3c;\n  uStack_64 = _UNK_00401c40;\n  (*(code *)PTR_memset_00412068)(auStack_60,0,0x54);\n  func_5c38b2a205c54439Global = 1;\n  uVar1 = func_20b2ae09d2174989(&uStack_70);\n  iVar2 = (*(code *)PTR_popen_00412060)(uVar1,&UNK_00401c30);\n  if (iVar2 != 0) {\n    (*(code *)PTR_pclose_00412054)(iVar2);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_d47533fcfff842c7(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_134;\n  int iStack_130;\n  undefined2 uStack_118;\n  undefined2 uStack_116;\n  undefined4 uStack_114;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_108 = _UNK_00401d70;\n  uStack_104 = _UNK_00401d74;\n  (*(code *)PTR_memset_0041206c)(auStack_102,0,0xf4);\n  for (iStack_134 = 0; iStack_134 < 1; iStack_134 = iStack_134 + 1) {\n    iStack_130 = -1;\n    iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_108);\n    iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_0041206c)(&uStack_118,0,0x10);\n      uStack_118 = 2;\n      uStack_114 = 0;\n      uStack_116 = (*(code *)PTR_htons_00412098)(0x6987);\n      iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_118,0x10);\n      if ((((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00412060)(iVar2,5), iVar3 != -1)) &&\n          (iStack_130 = (*(code *)PTR_accept_00412090)(iVar2,0,0), iStack_130 != -1)) &&\n         ((iVar3 = (*(code *)PTR_recv_00412054)(iStack_130,(int)&uStack_108 + iVar1,0xf9 - iVar1,0),\n          iVar3 != -1 && (iVar3 != 0)))) {\n        *(undefined *)((int)&uStack_108 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_108,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_108,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    if (iStack_130 != -1) {\n      (*(code *)PTR_close_00412050)(iStack_130);\n    }\n  }\n  (*(code *)PTR_putenv_00412064)(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a0e090954838439a(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412078)(400);\n  (*(code *)PTR___wcscpy_chk_00412068)(iVar1,&UNK_00401234,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400afc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_00412058)(1,&UNK_0040127c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_da0dfe5b51554448(int param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined4 uVar4;\n  code *pcVar5;\n  undefined auStack_e4 [8];\n  undefined *puStack_dc;\n  undefined auStack_d0 [52];\n  int iStack_9c;\n  undefined *puStack_98;\n  code *pcStack_94;\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar3 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar4 = *(undefined4 *)(param_1 + 8);\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa4))(uVar4,uVar2);\n  func_3188cb71676e4802(uVar4);\n  if (iStack_14 == *(int *)puVar3) {\n    return;\n  }\n  pcVar5 = CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_66_bad;\n  (**(code **)(puStack_80 + -0x7fa0))();\n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_dc = auStack_d0;\n  puStack_98 = puVar3;\n  puVar3 = auStack_e4;\n  auStack_d0[0] = 0;\n  iStack_9c = *(int *)PTR___stack_chk_guard_00412088;\n  pcStack_94 = pcVar5;\n  func_da0dfe5b51554448();\n  if (iStack_9c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_72948126f72344f2(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_f0 [24];\n  undefined uStack_8d;\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_f0 + 2,0x41,99);\n  uStack_85 = 0;\n  puVar2 = (undefined4 *)(**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  puVar6 = auStack_f0;\n  uStack_18._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_18);\n  *puVar5 = *puVar3;\n  uStack_8d = 0;\n  func_8d7fb0d971254ac1();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f24b5238423c4571(undefined4 param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412068)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412080)(param_1,auStack_70);\n  func_d44ae42a4f26430b(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_79c6043828a44872(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_10 = (undefined *)(*(code *)PTR_malloc_0041206c)(100);\n  *puStack_10 = 0;\n  uVar5 = _UNK_00401a68;\n  uVar4 = _UNK_00401a64;\n  uVar3 = _UNK_00401a60;\n  uVar2 = (uint)puStack_10 & 3;\n  *(uint *)(puStack_10 + -uVar2) =\n       *(uint *)(puStack_10 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_00401a60 >> uVar2 * 8;\n  puVar1 = puStack_10 + 3;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar3 << (3 - uVar2) * 8;\n  puVar1 = puStack_10 + 4;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | uVar4 >> uVar2 * 8;\n  puVar1 = puStack_10 + 7;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar4 << (3 - uVar2) * 8;\n  puVar1 = puStack_10 + 8;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | uVar5 >> uVar2 * 8;\n  puVar1 = puStack_10 + 0xb;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar5 << (3 - uVar2) * 8;\n  puStack_10[0xc] = UNK_00401a6c;\n  func_f1c88b2e6da346e0(&puStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400ca8) */\n\nvoid func_4a44a6afc04f4ae5(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  undefined *puVar5;\n  uint uVar6;\n  undefined auStack_30 [8];\n  undefined4 uStack_28;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_fgets_00412098)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412070);\n  if (iVar2 == 0) {\n    func_472e340e0584472b(&UNK_00401444);\n    uStack_28 = 0;\n  }\n  else {\n    uStack_28 = (*(code *)PTR_strtoul_00412074)(&uStack_1c,0,0);\n  }\n  puVar5 = auStack_30;\n  func_297ec57ec25f4b3e();\n  if (iStack_c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n    uVar6 = *(uint *)(puVar5 + 8);\n    uVar3 = (*(code *)PTR_wcslen_00412068)(&UNK_00401478);\n    if (uVar6 <= uVar3) {\n                    /* WARNING: Could not recover jumptable at 0x00400ca0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_puts_00412080)();\n      return;\n    }\n    uVar4 = (*(code *)PTR_malloc_00412084)(uVar6 << 2);\n    (*(code *)PTR_wcscpy_0041208c)(uVar4,&UNK_00401478);\n    func_14bc6b75747a41cc(uVar4);\n                    /* WARNING: Could not recover jumptable at 0x00400c5c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_004120a0)(uVar4);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_200681d7de36416e(int *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined auStack_48 [52];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iVar3 = *param_1;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR___strcpy_chk_00412060)(auStack_48,iVar3,0x32);\n  iVar2 = iVar3;\n  func_ea816f538a4c4cc0();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400af8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(iVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_16ffabb2582a43b6(void)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  int aiStack_1a4 [100];\n  int aiStack_14 [2];\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412084;\n  iVar2 = func_b29ca9ceacdf47d0();\n  if (iVar2 != 0) {\n    piVar3 = aiStack_1a4;\n    do {\n      *piVar3 = 5;\n      piVar3 = piVar3 + 1;\n    } while (piVar3 != aiStack_14);\n    func_0641c08f33c44156(aiStack_1a4[0]);\n    (*(code *)PTR_free_00412088)(aiStack_1a4);\n    if (aiStack_14[0] == *(int *)puVar1) {\n      return;\n    }\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n                    /* WARNING: Treating indirect jump as call */\n  UNRECOVERED_JUMPTABLE = (code *)func_09190dabbc8b41e6(0);\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
        "\nvoid func_30c772d9ff1043c7(void)\n\n{\n  uint uStack_10;\n  \n  for (uStack_10 = 0; uStack_10 < 100; uStack_10 = uStack_10 + 1) {\n    *(undefined4 *)(dataBuffer_0 + uStack_10 * 8 + 4) = 5;\n    *(undefined4 *)(dataBuffer_0 + uStack_10 * 8) = 0;\n  }\n  func_4a68a7c08c7a46bf(dataBuffer_0);\n  return;\n}\n\n",
        "\nint func_8448318c404140bb(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int unaff_s0;\n  code *pcVar6;\n  undefined *puVar7;\n  int iStack_c4;\n  undefined4 uStack_c0;\n  undefined auStack_bc [96];\n  int iStack_5c;\n  int iStack_58;\n  undefined *puStack_54;\n  undefined *puStack_40;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  int iStack_24;\n  \n  puVar1 = PTR___stack_chk_guard_004120a8;\n  puStack_40 = &_gp;\n  iStack_24 = *(int *)PTR___stack_chk_guard_004120a8;\n  iVar2 = (*(code *)PTR_strlen_00412084)();\n  iVar3 = (**(code **)(puStack_40 + -0x7fbc))(2,2,6);\n  if (iVar3 != -1) {\n    uStack_30 = 0;\n    uStack_2c = 0;\n    uStack_28 = 0;\n    uStack_34 = 0x26987;\n    iVar4 = (**(code **)(puStack_40 + -0x7fa0))(iVar3,&uStack_34,0x10);\n    unaff_s0 = iVar3;\n    if (iVar4 != -1) {\n      iVar4 = (**(code **)(puStack_40 + -0x7fb4))(iVar3,5);\n      if (iVar4 != -1) {\n        iVar4 = (**(code **)(puStack_40 + -0x7f84))(iVar3,0,0);\n        if (iVar4 != -1) {\n          iVar5 = (**(code **)(puStack_40 + -0x7fc4))(iVar4,param_1 + iVar2,99 - iVar2,0);\n          if (1 < iVar5 + 1U) {\n            pcVar6 = *(code **)(puStack_40 + -0x7f98);\n            *(undefined *)(param_1 + iVar5 + iVar2) = 0;\n            puVar7 = (undefined *)(*pcVar6)(param_1,0xd);\n            if (puVar7 != (undefined *)0x0) {\n              *puVar7 = 0;\n            }\n            puVar7 = (undefined *)(**(code **)(puStack_40 + -0x7f98))(param_1,10);\n            if (puVar7 != (undefined *)0x0) {\n              *puVar7 = 0;\n            }\n          }\n          (**(code **)(puStack_40 + -0x7fc8))(iVar3);\n          (**(code **)(puStack_40 + -0x7fc8))(iVar4);\n          goto code_r0x00400ba0;\n        }\n      }\n    }\n    (**(code **)(puStack_40 + -0x7fc8))(iVar3);\n  }\ncode_r0x00400ba0:\n  if (iStack_24 == *(int *)puVar1) {\n    return param_1;\n  }\n  puVar7 = &UNK_00400cf8;\n  (**(code **)(puStack_40 + -0x7f80))();\n  puVar1 = PTR___stack_chk_guard_004120a8;\n  uStack_c0 = 0;\n  iStack_5c = *(int *)PTR___stack_chk_guard_004120a8;\n  iStack_58 = unaff_s0;\n  puStack_54 = puVar7;\n  (*(code *)PTR_memset_00412078)(auStack_bc,0,0x60);\n  iVar2 = func_8448318c404140bb(&uStack_c0);\n  iVar3 = (*(code *)PTR___isoc99_sscanf_0041207c)(iVar2,&UNK_004015a4,&iStack_c4);\n  if (iVar3 == 1) {\n    iVar2 = iStack_c4;\n    if (iStack_c4 < 1) {\n      iVar2 = 0;\n    }\n    func_25937156f48e4a92();\n  }\n  if (iStack_5c == *(int *)puVar1) {\n    return *(int *)puVar1;\n  }\n  iVar3 = (*(code *)PTR___stack_chk_fail_004120a0)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400dd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    iVar2 = (*(code *)PTR_puts_00412094)();\n    return iVar2;\n  }\n  return iVar3;\n}\n\n",
        "\nvoid func_64479bf17d8646c9(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uStack_38;\n  int iStack_34;\n  int iStack_30;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [4];\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_38 = 0x10;\n  iStack_30 = 0xffffffff;\n  iStack_34 = -1;\n  iStack_30 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iStack_30 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_00412090)(20000);\n    iVar1 = (*(code *)PTR_bind_00412074)(iStack_30,&uStack_2c,0x10);\n    if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_00412064)(iStack_30,5), iVar1 != -1)) &&\n        (iStack_34 = (*(code *)PTR_accept_00412088)(iStack_30,0,0), iStack_34 != -1)) &&\n       (iVar1 = (*(code *)PTR_getsockname_00412060)(iStack_34,auStack_1c,&uStack_38), iVar1 != -1))\n    {\n      uVar2 = (*(code *)PTR_inet_ntoa_00412098)(uStack_18);\n      iVar1 = (*(code *)PTR_strcmp_004120b4)(&UNK_00401d10,uVar2);\n      if (iVar1 == 0) {\n        (*(code *)PTR_send_0041204c)(iStack_34,&UNK_00401d20,0xf,0);\n      }\n      else {\n        iVar1 = (*(code *)PTR_send_0041204c)(iStack_34,&UNK_00401d30,8,0);\n        if (iVar1 == -1) {\n          func_d1a9da4f427f411f(&UNK_00401d3c);\n        }\n      }\n    }\n  }\n  if (iStack_30 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_30);\n  }\n  if (iStack_34 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_34);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f3786bb7ab334d6c(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  undefined auStack_110 [99];\n  undefined uStack_ad;\n  int iStack_ac;\n  undefined *puStack_a4;\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  puStack_20 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  iVar3 = (*(code *)PTR_memset_0041206c)(auStack_88,0x41,99);\n  iVar6 = iVar3 + -8;\n  *(undefined *)(iVar3 + 99) = 0;\n  func_e5aac7073f7e459c(iVar6);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7f98))();\n  puVar2 = PTR___stack_chk_guard_00412090;\n  puStack_a4 = puVar1;\n  iStack_ac = *(int *)PTR___stack_chk_guard_00412090;\n  uVar4 = (*(code *)PTR_memset_0041206c)(auStack_110,0x43,99);\n  uStack_ad = 0;\n  uVar5 = (*(code *)PTR_strlen_00412074)(uVar4);\n  iVar3 = (*(code *)PTR___strncpy_chk_00412068)(uVar4,iVar6,uVar5,100);\n  uStack_ad = 0;\n  func_9bbc01f774fc44c8();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b7283338e6104fb6(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_f6f3f9e18b354b7c();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_62f312b3376e41a1(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_d4 [100];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  func_6e8e9cf0693d4dab();\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412064)(auStack_70);\n  (*(code *)PTR_strncat_0041204c)(auStack_d4,auStack_70,uVar1);\n  func_303fc898625f4af9(auStack_d4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c83e10756b7d4105(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  undefined4 *puVar7;\n  undefined4 *puStack_1c0;\n  undefined4 uStack_1bc;\n  undefined4 uStack_1b8;\n  undefined4 uStack_1b4;\n  undefined4 uStack_1b0;\n  undefined4 uStack_1ac;\n  undefined auStack_1a8 [396];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  puVar7 = &uStack_1ac;\n  uStack_1ac = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_00412080)(auStack_1a8,0,0x18c);\n  iVar2 = (*(code *)PTR_wcslen_0041207c)(puVar7);\n  iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_1b8 = 0;\n    uStack_1b4 = 0;\n    uStack_1b0 = 0;\n    uStack_1bc._2_2_ = 0;\n    uStack_1bc._0_2_ = 2;\n    uStack_1b8 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401494);\n    uStack_1bc = func_1af3a988a9fc4dc9(uStack_1bc._0_2_,0x6987);\n    iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_1bc,0x10);\n    if (iVar4 != -1) {\n      uVar5 = (*(code *)PTR_recv_00412058)(iVar3,puVar7 + iVar2,(99 - iVar2) * 4,0);\n      if (1 < uVar5 + 1) {\n        *(undefined4 *)(auStack_1a8 + ((uVar5 >> 2) + iVar2) * 4 + -4) = 0;\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,0xd);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,10);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  iVar2 = (*(code *)PTR___isoc99_swscanf_00412094)(puVar7,&UNK_004014c4,&puStack_1c0);\n  if (iVar2 == 1) {\n    puVar7 = puStack_1c0;\n    if ((int)puStack_1c0 < 1) {\n      puVar7 = (undefined4 *)0x0;\n    }\n    func_f6e13f19d4b4471f();\n  }\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  if (puVar7 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_716c651f64504471(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined *puVar5;\n  undefined4 uStack_98;\n  undefined auStack_94 [96];\n  int iStack_34;\n  undefined *puStack_30;\n  undefined *puStack_2c;\n  undefined *puStack_18;\n  int iStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  puStack_18 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  iVar3 = (*(code *)PTR___isoc99_sscanf_00412070)(param_1,&UNK_00401364,&iStack_10);\n  if (iVar3 == 1) {\n    if (iStack_10 < 1) {\n      iStack_10 = 0;\n    }\n    func_b2a99e25edce4b33(iStack_10);\n  }\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  puVar5 = &UNK_00400b18;\n  (**(code **)(puStack_18 + -0x7f98))();\n  puVar2 = PTR___stack_chk_guard_00412090;\n  puStack_30 = puVar1;\n  uStack_98 = 0;\n  iStack_34 = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_2c = puVar5;\n  (*(code *)PTR_memset_0041206c)(auStack_94,0,0x60);\n  iVar3 = (*(code *)PTR_getenv_00412080)(&UNK_00401368);\n  if (iVar3 == 0) {\n    puVar4 = &uStack_98;\n  }\n  else {\n    puVar4 = (undefined4 *)(*(code *)PTR_strncat_00412054)(&uStack_98,iVar3,99);\n  }\n  func_716c651f64504471();\n  if (iStack_34 == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (puVar4 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d464ee7fa1354aa2(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 unaff_s0;\n  undefined *unaff_s1;\n  code *pcVar4;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    uVar3 = param_1;\n    puVar1 = PTR___stack_chk_guard_00412090;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = unaff_s0;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0xe8) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412090\n    ;\n    uVar2 = (*(code *)PTR_memset_00412070)((undefined *)((int)register0x00000074 + -0xdc),0x43,199);\n    pcVar4 = *(code **)(*(int *)((int)register0x00000074 + -0xe8) + -0x7fb8);\n    *(undefined *)((int)register0x00000074 + -0x15) = 0;\n    param_1 = (*pcVar4)(uVar2,uVar3,200);\n    func_4082c1854e854132();\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE127_Buffer_Underread__char_alloca_cpy_53b_badSink;\n    (**(code **)(*(int *)((int)register0x00000074 + -0xe8) + -0x7f98))();\n    unaff_s0 = uVar3;\n    unaff_s1 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0xf8);\n  }\n  return;\n}\n\n",
        "\nvoid func_4b030e956c34447c(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(800);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    func_f0f83fdfec6f4151(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_0f6b1eee28cb45dd(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int ***pppiVar4;\n  int ***pppiVar5;\n  int ***pppiStack_3c;\n  int ***pppiStack_38;\n  undefined4 ***pppuStack_34;\n  undefined4 ***pppuStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  pppiStack_3c = (int ***)&pppuStack_34;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412098;\n  pppiStack_38 = pppiStack_3c;\n  pppuStack_34 = &pppiStack_3c;\n  pppuStack_30 = &pppiStack_3c;\n  iVar2 = (*(code *)PTR_socket_00412060)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar3 = (*(code *)PTR_bind_00412078)(iVar2,&uStack_2c,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_listen_00412068)(iVar2,5);\n      if (iVar3 != -1) {\n        iVar3 = (*(code *)PTR_accept_0041208c)(iVar2,0,0);\n        if (iVar3 != -1) {\n          (*(code *)PTR_recv_00412058)(iVar3,&pppiStack_3c,8,0);\n          (*(code *)PTR_close_00412054)(iVar2);\n          (*(code *)PTR_close_00412054)(iVar3);\n          goto code_r0x00400b20;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\ncode_r0x00400b20:\n  pppiVar4 = pppiStack_3c;\n  pppiVar5 = pppiStack_38;\n  func_26d85c0793c34bbd();\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412090)();\n  *pppiVar5 = (int **)pppiVar4;\n  pppiVar4[1] = (int **)pppiVar5;\n  return;\n}\n\n",
        "\nvoid func_3ac24be980b241d4(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_0041206c)(0x50);\n  for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n    *(int *)(iVar1 + iStack_14 * 8) = iStack_14;\n    *(int *)(iVar1 + iStack_14 * 8 + 4) = iStack_14;\n  }\n  for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n    func_06478d4a88374e3b(*(undefined4 *)(iVar1 + iStack_10 * 8));\n    func_06478d4a88374e3b(*(undefined4 *)(iVar1 + iStack_10 * 8 + 4));\n  }\n  return;\n}\n\n",
        "\nvoid func_0d064e4567d7447c(void)\n\n{\n  undefined auStack_20 [8];\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  uStack_18 = (*(code *)PTR_rand_00412058)();\n  func_faaa9b8e4efc4aa9(auStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e6b3e7423e314489(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined4 *puVar6;\n  undefined auStack_158 [104];\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 uStack_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 uStack_c8;\n  undefined4 uStack_c4;\n  undefined uStack_c0;\n  undefined uStack_bf;\n  undefined *puStack_b8;\n  int iStack_ac;\n  undefined4 uStack_a8;\n  undefined *puStack_a4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar4 = (*(code *)PTR_strlen_0041206c)(uVar3);\n  uVar3 = (*(code *)PTR___memmove_chk_00412078)(uVar3,param_1,uVar4,100);\n  uStack_15 = 0;\n  func_6540ec7e69fd4ee5(uVar3);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_a4 = puVar1;\n  puStack_b8 = &_gp;\n  puVar6 = &uStack_f0;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41414141;\n  uStack_dc = 0x41414141;\n  uStack_d8 = 0x41414141;\n  uStack_d4 = 0x41414141;\n  uStack_d0 = 0x41414141;\n  uStack_cc = 0x41414141;\n  uStack_c8 = 0x41414141;\n  uStack_c4 = 0x41414141;\n  uStack_bf = 0;\n  uStack_c0 = 0x41;\n  iStack_ac = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_a8 = param_1;\n  iVar5 = (*(code *)PTR_memset_00412064)(auStack_158,0x41,99);\n  *(undefined *)(iVar5 + 99) = 0;\n  func_e6b3e7423e314489();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (**(code **)(puStack_b8 + -0x7f9c))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_bc7a069043c04fd4(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_10 = (*(code *)PTR_calloc_00412054)(1,4);\n  puVar2 = &uStack_10;\n  func_41c5fca9e05d4cfd();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar2 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_8d91ca5876fa49b6(void)\n\n{\n  undefined4 uVar1;\n  undefined2 uVar2;\n  undefined uVar3;\n  undefined4 *puVar4;\n  \n  puVar4 = (undefined4 *)(*(code *)PTR_calloc_00412050)(0x14,1);\n  uVar3 = UNK_0040123e;\n  uVar2 = _UNK_0040123c;\n  uVar1 = _UNK_00401238;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    return;\n  }\n  *puVar4 = _UNK_00401234;\n  puVar4[1] = uVar1;\n  *(undefined2 *)(puVar4 + 2) = uVar2;\n  *(undefined *)((int)puVar4 + 10) = uVar3;\n  func_c9c11261e51c473e(puVar4);\n                    /* WARNING: Could not recover jumptable at 0x00400ab4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar4);\n  return;\n}\n\n",
        "\nvoid func_923126af7ca84663(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int unaff_s0;\n  undefined4 unaff_s1;\n  undefined *unaff_s2;\n  int unaff_s3;\n  undefined *unaff_s4;\n  undefined *unaff_s5;\n  code *pcVar3;\n  int iVar4;\n  int iVar5;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  do {\n    puVar1 = PTR___stack_chk_guard_004120a0;\n    if (*(int *)PTR_globalFive_00412044 != 5) {\n      return;\n    }\n    *(undefined **)((int)register0x00000074 + -0x14) = unaff_s2;\n    *(undefined4 *)((int)register0x00000074 + -0x46c) = 0x10;\n    *(undefined4 *)((int)register0x00000074 + -0x18) = unaff_s1;\n    unaff_s1 = 0xffffffff;\n    *(undefined **)((int)register0x00000074 + -0x478) = &_gp;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s5;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s4;\n    *(int *)((int)register0x00000074 + -0x10) = unaff_s3;\n    *(int *)((int)register0x00000074 + -0x1c) = unaff_s0;\n    *(undefined4 *)((int)register0x00000074 + -0x24) = *(undefined4 *)PTR___stack_chk_guard_004120a0\n    ;\n    iVar2 = (*(code *)PTR_socket_00412060)(2,2,6);\n    iVar4 = *(int *)((int)register0x00000074 + -0x478);\n    if (iVar2 != -1) {\n      pcVar3 = *(code **)(iVar4 + -0x7fa0);\n      *(undefined4 *)((int)register0x00000074 + -0x464) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x460) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x45c) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x468) = 0x24e20;\n      iVar4 = (*pcVar3)(iVar2,(undefined *)((int)register0x00000074 + -0x468),0x10);\n      iVar5 = *(int *)((int)register0x00000074 + -0x478);\n      unaff_s0 = iVar2;\n      if (iVar4 != -1) {\n        iVar4 = (**(code **)(iVar5 + -0x7fb4))(iVar2,5);\n        iVar5 = *(int *)((int)register0x00000074 + -0x478);\n        if (iVar4 != -1) {\n          unaff_s3 = (**(code **)(iVar5 + -0x7f8c))(iVar2,0,0);\n          iVar5 = *(int *)((int)register0x00000074 + -0x478);\n          if (unaff_s3 != -1) {\n            unaff_s4 = (undefined *)((int)register0x00000074 + -0x458);\n            iVar4 = (**(code **)(iVar5 + -0x7fb8))\n                              (unaff_s3,unaff_s4,(undefined *)((int)register0x00000074 + -0x46c));\n            iVar5 = *(int *)((int)register0x00000074 + -0x478);\n            if (iVar4 != -1) {\n              pcVar3 = *(code **)(iVar5 + -0x7fb0);\n              unaff_s5 = (undefined *)((int)register0x00000074 + -0x428);\n              *(undefined4 *)((int)register0x00000074 + -0x480) = 2;\n              *(undefined4 *)((int)register0x00000074 + -0x484) = 0x20;\n              *(undefined **)((int)register0x00000074 + -0x488) =\n                   (undefined *)((int)register0x00000074 + -0x448);\n              iVar4 = (*pcVar3)(unaff_s4,0x10,unaff_s5,0x401);\n              iVar5 = *(int *)((int)register0x00000074 + -0x478);\n              if (iVar4 == 0) {\n                iVar4 = (**(code **)(iVar5 + -0x7f70))(&UNK_00401554,unaff_s5);\n                if (iVar4 == 0) {\n                  (**(code **)(*(int *)((int)register0x00000074 + -0x478) + -0x7fd0))\n                            (unaff_s3,&UNK_00401568,0xf);\n                  iVar5 = *(int *)((int)register0x00000074 + -0x478);\n                }\n                else {\n                  iVar4 = (**(code **)(*(int *)((int)register0x00000074 + -0x478) + -0x7fd0))\n                                    (unaff_s3,&UNK_00401578,8,0);\n                  iVar5 = *(int *)((int)register0x00000074 + -0x478);\n                  if (iVar4 == -1) {\n                    func_dc53618b34a542dc(&UNK_00401584);\n                    iVar5 = *(int *)((int)register0x00000074 + -0x478);\n                  }\n                }\n              }\n            }\n            (**(code **)(iVar5 + -0x7fc8))(iVar2);\n            (**(code **)(*(int *)((int)register0x00000074 + -0x478) + -0x7fc8))(unaff_s3);\n            iVar4 = *(int *)((int)register0x00000074 + -0x478);\n            goto code_r0x00400b84;\n          }\n        }\n      }\n      (**(code **)(iVar5 + -0x7fc8))(iVar2);\n      iVar4 = *(int *)((int)register0x00000074 + -0x478);\n    }\ncode_r0x00400b84:\n    if (*(int *)((int)register0x00000074 + -0x24) == *(int *)puVar1) {\n      return;\n    }\n    unaff_retaddr = func_923126af7ca84663;\n    (**(code **)(iVar4 + -0x7f88))();\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x498);\n  } while( true );\n}\n\n",
        "\nvoid func_bf5d204174c64548(void)\n\n{\n  undefined4 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined4 **ppuStack_14;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  ppuStack_14 = apuStack_28;\n  func_0a43b087847e409c(*apuStack_28[0]);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_542e0ecd3bd344c6(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  code **ppcVar3;\n  code *pcVar4;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = (undefined *)(uint)uStack_10._2_2_;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  iVar2 = (*(code *)PTR_fgets_0041208c)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412070);\n  if (iVar2 == 0) {\n    func_e3590b8c41404566(&UNK_00401314);\n    iVar2 = -1;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strtol_00412058)(&uStack_1c,0,10);\n  }\n  if (iStack_c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n    if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_puts_0041207c)();\n      return;\n    }\n    return;\n  }\n  if (5 < iVar2) {\n    return;\n  }\n  uStack_10 = &_gp;\n  (*(code *)PTR___assert_fail_00412054)(&UNK_004014bc,&UNK_004013e0,0x24,__PRETTY_FUNCTION___0);\n  if (___CTOR_LIST__ != (code *)0xffffffff) {\n    ppcVar3 = (code **)&__CTOR_LIST__;\n    pcVar4 = ___CTOR_LIST__;\n    do {\n      ppcVar3 = ppcVar3 + -1;\n      (*pcVar4)();\n      pcVar4 = *ppcVar3;\n    } while (pcVar4 != (code *)0xffffffff);\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0880bea7174545df(void)\n\n{\n  int iVar1;\n  int iVar2;\n  char cStack_71;\n  undefined4 auStack_70 [4];\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  auStack_70[0] = _UNK_00401c80;\n  auStack_70[1] = _UNK_00401c84;\n  auStack_70[2] = _UNK_00401c88;\n  auStack_70[3] = _UNK_00401c8c;\n  (*(code *)PTR_memset_00412068)(auStack_60,0,0x54);\n  iVar1 = (*(code *)PTR_strlen_00412074)(auStack_70);\n  if (1 < 100U - iVar1) {\n    iVar2 = (*(code *)PTR_fgets_00412094)\n                      ((int)auStack_70 + iVar1,100 - iVar1,*(undefined4 *)PTR_stdin_00412070);\n    if (iVar2 == 0) {\n      func_a2850eb10cc04162(&UNK_00401c70);\n      *(undefined *)((int)auStack_70 + iVar1) = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_strlen_00412074)(auStack_70);\n      if ((iVar1 != 0) && (*(char *)((int)auStack_70 + iVar1 + -1) == '\\n')) {\n        *(undefined *)((int)auStack_70 + iVar1 + -1) = 0;\n      }\n    }\n  }\n  func_56bac19656e54875(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_44daedbeb60e4d1f(void)\n\n{\n  int iVar1;\n  undefined4 *puStack_130;\n  int iStack_12c;\n  int iStack_128;\n  int iStack_124;\n  int iStack_120;\n  undefined *puStack_11c;\n  undefined2 uStack_118;\n  undefined2 uStack_116;\n  undefined4 uStack_114;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  uStack_108 = _UNK_00401e20;\n  uStack_104 = _UNK_00401e24;\n  (*(code *)PTR_memset_00412070)(auStack_102,0,0xf4);\n  puStack_130 = &uStack_108;\n  iStack_128 = 0xffffffff;\n  iStack_12c = -1;\n  iStack_124 = (*(code *)PTR_strlen_0041207c)(puStack_130);\n  iStack_128 = (*(code *)PTR_socket_00412060)(2,2,6);\n  if (iStack_128 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_118,0,0x10);\n    uStack_118 = 2;\n    uStack_114 = 0;\n    uStack_116 = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar1 = (*(code *)PTR_bind_00412078)(iStack_128,&uStack_118,0x10);\n    if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_00412064)(iStack_128,5), iVar1 != -1)) &&\n        (iStack_12c = (*(code *)PTR_accept_00412094)(iStack_128,0,0), iStack_12c != -1)) &&\n       ((iStack_120 = (*(code *)PTR_recv_00412058)\n                                (iStack_12c,(int)puStack_130 + iStack_124,0xf9 - iStack_124,0),\n        iStack_120 != -1 && (iStack_120 != 0)))) {\n      *(undefined *)((int)puStack_130 + iStack_120 + iStack_124) = 0;\n      puStack_11c = (undefined *)(*(code *)PTR_strchr_00412080)(puStack_130,0xd);\n      if (puStack_11c != (undefined *)0x0) {\n        *puStack_11c = 0;\n      }\n      puStack_11c = (undefined *)(*(code *)PTR_strchr_00412080)(puStack_130,10);\n      if (puStack_11c != (undefined *)0x0) {\n        *puStack_11c = 0;\n      }\n    }\n  }\n  if (iStack_128 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_128);\n  }\n  if (iStack_12c != -1) {\n    (*(code *)PTR_close_00412054)(iStack_12c);\n  }\n  func_1990a33bd68c4dd4(&puStack_130);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_cbb00b2f5eac4336(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401230,*puVar1,puVar1[1]);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_c053fd44eca345cc(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iVar2 = *(int *)PTR___stack_chk_guard_00412080;\n  iVar3 = iVar2;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    func_67a0354e66fb4489(&UNK_004012d4);\n    iVar3 = _UNK_004012e4;\n    func_67a0354e66fb4489();\n    func_67a0354e66fb4489();\n  }\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nint func_3e2b6800b7f449b0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  iVar1 = (*(code *)PTR_strlen_00412078)(param_1);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401e10);\n    uStack_1a = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_1c,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00412058)(iVar2,param_1 + iVar1,99 - iVar1,0), iVar3 != -1)) &&\n       (iVar3 != 0)) {\n      *(undefined *)(param_1 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(param_1,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(param_1,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_58719562a90546c0(void)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  int iVar3;\n  int *piVar4;\n  int *piVar5;\n  int *piVar6;\n  int *unaff_s0;\n  int aiStack_f8 [2];\n  undefined auStack_f0 [99];\n  undefined uStack_8d;\n  undefined *puStack_88;\n  undefined auStack_80 [99];\n  undefined uStack_1d;\n  int aiStack_1c [2];\n  \n  puVar2 = PTR___stack_chk_guard_00412084;\n  puStack_88 = &_gp;\n  aiStack_1c[0] = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412064)(auStack_f0,0x41,99);\n  uStack_8d = 0;\n  iVar3 = func_a3d28cdaa623425e();\n  if (iVar3 != 0) {\n    unaff_s0 = aiStack_f8;\n  }\n  piVar4 = (int *)(**(code **)(puStack_88 + -0x7fbc))(auStack_80,0x43,99);\n  uStack_1d = 0;\n  piVar5 = piVar4;\n  if ((uint)((int)piVar4 - (int)((int)unaff_s0 + 1)) < 3) {\n    do {\n      uVar1 = *(undefined *)unaff_s0;\n      piVar6 = (int *)((int)piVar5 + 1);\n      unaff_s0 = (int *)((int)unaff_s0 + 1);\n      *(undefined *)piVar5 = uVar1;\n      piVar5 = piVar6;\n    } while (piVar6 != aiStack_1c);\n  }\n  else {\n    do {\n      iVar3 = *unaff_s0;\n      piVar6 = piVar5 + 1;\n      unaff_s0 = unaff_s0 + 1;\n      *piVar5 = iVar3;\n      piVar5 = piVar6;\n    } while (piVar6 != aiStack_1c);\n  }\n  uStack_1d = 0;\n  func_2921d903ed1e4f43();\n  if (aiStack_1c[0] != *(int *)puVar2) {\n    (**(code **)(puStack_88 + -0x7fa4))();\n    if (piVar4 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b6ee7f7e938a47e0(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined auStack_f0 [8];\n  undefined auStack_e8 [99];\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  puVar4 = auStack_e8;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(puVar4,0x41,99);\n  uStack_85 = 0;\n  iVar2 = func_ebb050dcf9a346b3();\n  if (iVar2 != 0) {\n    puVar4 = auStack_f0;\n  }\n  uVar3 = (**(code **)(puStack_80 + -0x7fbc))(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa4))(puVar4,uVar3);\n  func_87c5655bafde4046();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa0))();\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2b46a4e965f547c5(undefined4 *param_1)\n\n{\n  *param_1 = 5;\n  func_7c2f1e57c83c4902(5);\n                    /* WARNING: Could not recover jumptable at 0x00400aa4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(param_1);\n  return;\n}\n\n",
        "\nvoid func_69e040270ff243da(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  undefined auStack_16c [199];\n  undefined uStack_a5;\n  int iStack_a4;\n  undefined *puStack_9c;\n  undefined auStack_78 [4];\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar5 = PTR___stack_chk_guard_00412088;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412068)(auStack_70,0x41,99);\n  puStack_74 = auStack_78;\n  ppuVar4 = &puStack_74;\n  uStack_d = 0;\n  func_3475772595774fbc();\n  if (iStack_c == *(int *)puVar5) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_9c = puVar5;\n  iStack_a4 = *(int *)PTR___stack_chk_guard_00412088;\n  puVar5 = *ppuVar4;\n  uVar2 = (*(code *)PTR_memset_00412068)(auStack_16c,0x43,199);\n  uStack_a5 = 0;\n  iVar3 = (*(code *)PTR___strcpy_chk_00412060)(uVar2,puVar5,200);\n  func_1abdf06c2042476a();\n  if (iStack_a4 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b12bdc3f48e34df1(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 ***pppuStack_3c;\n  undefined4 ***pppuStack_38;\n  undefined4 ***pppuStack_34;\n  undefined4 ***pppuStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  pppuStack_3c = &pppuStack_34;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412090;\n  pppuStack_38 = pppuStack_3c;\n  pppuStack_34 = &pppuStack_3c;\n  pppuStack_30 = &pppuStack_3c;\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401334);\n    uStack_2c = func_c62938d83ed741d9(uStack_2c._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_2c,0x10);\n    if (iVar3 != -1) {\n      (*(code *)PTR_recv_00412054)(iVar2,&pppuStack_3c,8,0);\n    }\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  iVar2 = iStack_1c;\n  iVar3 = *(int *)puVar1;\n  *pppuStack_38 = pppuStack_3c;\n  pppuStack_3c[1] = pppuStack_38;\n  if (iVar2 == iVar3) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ba0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_93ee66c591424c36(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_14 = auStack_88;\n  (*(code *)PTR_memset_0041205c)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_14 + -8;\n  func_f273b577284d4617(puStack_10);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_d7ba650a176a4632(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint uStack_40;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  uStack_40 = 0;\n  iVar4 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar4 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401c70);\n    uStack_2a = (*(code *)PTR_htons_00412090)(0x6987);\n    iVar5 = (*(code *)PTR_connect_00412058)(iVar4,&uStack_2c,0x10);\n    if (((iVar5 != -1) &&\n        (iVar5 = (*(code *)PTR_recv_00412054)(iVar4,auStack_1c,0xd,0), iVar5 != -1)) && (iVar5 != 0)\n       ) {\n      auStack_1c[iVar5] = 0;\n      uStack_40 = (*(code *)PTR_strtoul_00412074)(auStack_1c,0,0);\n    }\n  }\n  if (iVar4 != -1) {\n    (*(code *)PTR_close_00412050)(iVar4);\n  }\n  if (uStack_40 < 6) {\n    func_bfd095d763434bcb(&UNK_00401c84);\n  }\n  else {\n    uVar6 = (*(code *)PTR_malloc_00412084)(uStack_40);\n    uVar3 = _UNK_00401c7c;\n    uVar1 = uVar6 & 3;\n    *(uint *)(uVar6 - uVar1) =\n         *(uint *)(uVar6 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401c7c >> uVar1 * 8;\n    uVar1 = uVar6 + 3 & 3;\n    puVar2 = (uint *)((uVar6 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    *(undefined *)(uVar6 + 4) = UNK_00401c80;\n    *(undefined *)(uVar6 + 5) = UNK_00401c81;\n    func_bfd095d763434bcb(uVar6);\n    (*(code *)PTR_free_004120a0)(uVar6);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_6ebcb7f294844181(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  int aiStack_404 [4];\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_3f4 = _UNK_004013a0;\n  piVar4 = aiStack_404;\n  aiStack_404[0] = _UNK_00401390;\n  aiStack_404[1] = _UNK_00401394;\n  aiStack_404[2] = _UNK_00401398;\n  aiStack_404[3] = _UNK_0040139c;\n  uStack_3f0 = _UNK_004013a4;\n  (*(code *)PTR_memset_00412068)(auStack_3ec,0,0x3d0);\n  iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n  if (1 < 0xfaU - iVar2) {\n    iVar3 = (*(code *)PTR___fgetws_chk_00412094)\n                      (piVar4 + iVar2,0x3fffffff,0xfaU - iVar2,*(undefined4 *)PTR_stdin_00412070);\n    if (iVar3 == 0) {\n      func_61d8b3f70de24c69(&UNK_00401354);\n      piVar4[iVar2] = 0;\n    }\n    else {\n      iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n      if ((iVar2 != 0) && (piVar4[iVar2 + 0x3fffffff] == 10)) {\n        piVar4[iVar2 + 0x3fffffff] = 0;\n      }\n    }\n  }\n  (*(code *)PTR_putenv_00412058)();\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (piVar4 != (int *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_7f2d07740fc845b3(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int aiStack_3f4 [4];\n  undefined4 uStack_3e4;\n  undefined4 uStack_3e0;\n  undefined auStack_3dc [976];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  aiStack_3f4[0] = _UNK_00401b00;\n  aiStack_3f4[1] = _UNK_00401b04;\n  aiStack_3f4[2] = _UNK_00401b08;\n  aiStack_3f4[3] = _UNK_00401b0c;\n  uStack_3e4 = _UNK_00401b10;\n  uStack_3e0 = _UNK_00401b14;\n  (*(code *)PTR_memset_00412060)(auStack_3dc,0,0x3d0);\n  iVar1 = (*(code *)PTR_wcslen_0041205c)(aiStack_3f4);\n  if (1 < 0xfaU - iVar1) {\n    iVar2 = (*(code *)PTR_fgetws_00412080)\n                      (aiStack_3f4 + iVar1,0xfa - iVar1,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar2 == 0) {\n      func_6dcac65df32643a3(&UNK_00401af0);\n      aiStack_3f4[iVar1] = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_wcslen_0041205c)(aiStack_3f4);\n      if ((iVar1 != 0) && (aiStack_3f4[iVar1 + 0x3fffffff] == 10)) {\n        aiStack_3f4[iVar1 + 0x3fffffff] = 0;\n      }\n    }\n  }\n  (*(code *)PTR_putenv_00412054)(aiStack_3f4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f157d2f23843478f(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)func_910e0e6413624d5c(0);\n  *puVar1 = 5;\n  func_d3428308c14b44fb(5);\n                    /* WARNING: Could not recover jumptable at 0x00400ab4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_d8bec1f9c5d94ac7(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_d4 [199];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar1 = *(undefined4 *)(param_1 + 8);\n  (*(code *)PTR_memset_0041205c)(auStack_d4,0x43,199);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412074)(auStack_d4,uVar1);\n  func_fdd3baccbaeb4544(auStack_d4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_54415c4be0f44f30(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  char *pcStack_30;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  pcStack_30 = (char *)(*(code *)PTR_malloc_00412088)(100);\n  *pcStack_30 = '\\0';\n  iVar1 = (*(code *)PTR_strlen_00412074)(pcStack_30);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401d00);\n    uStack_1a = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_1c,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00412054)(iVar2,pcStack_30 + iVar1,99 - iVar1,0), iVar3 != -1))\n       && (iVar3 != 0)) {\n      pcStack_30[iVar3 + iVar1] = '\\0';\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(pcStack_30,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00412078)(pcStack_30,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  do {\n    if (*pcStack_30 == '\\0') {\ncode_r0x00400d28:\n      (*(code *)PTR_free_004120a4)(pcStack_30);\n      if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n        (*(code *)PTR___stack_chk_fail_00412098)();\n      }\n      return;\n    }\n    if (*pcStack_30 == 'S') {\n      func_a8a006eb5fb34aab(&UNK_00401d0c);\n      goto code_r0x00400d28;\n    }\n    pcStack_30 = pcStack_30 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_087c1962ad5640d2(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  \n  iVar1 = func_bd0fb5aa34064000();\n  if (iVar1 != 0) {\n    puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412070)(8);\n    uVar4 = *puVar2;\n    uVar3 = puVar2[1];\n    (*(code *)PTR_free_00412088)(puVar2);\n    func_b80765c1b45d4993(uVar4);\n    func_b80765c1b45d4993(uVar3);\n  }\n  return;\n}\n\n",
        "\nvoid func_9420ce6ea53e442e(void)\n\n{\n  int iVar1;\n  short *psVar2;\n  \n  iVar1 = func_e8a1e390d22d460c();\n  if (iVar1 == 0) {\n    psVar2 = (short *)(*(code *)PTR_malloc_00412070)(2);\n    *psVar2 = 6;\n    func_59d22b2204f14c27((int)*psVar2);\n    (*(code *)PTR_free_00412088)(psVar2);\n  }\n  else {\n    psVar2 = (short *)(*(code *)PTR_malloc_00412070)(4);\n    *psVar2 = 5;\n    func_59d22b2204f14c27((int)*psVar2);\n    (*(code *)PTR_free_00412088)(psVar2);\n  }\n  return;\n}\n\n",
        "\nvoid func_f20ddfac080b4162(void)\n\n{\n  undefined4 *puStack_338;\n  uint uStack_334;\n  undefined4 auStack_330 [201];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_338 = (undefined4 *)0x0;\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    for (uStack_334 = 0; uStack_334 < 100; uStack_334 = uStack_334 + 1) {\n      auStack_330[uStack_334 * 2 + 1] = 5;\n      auStack_330[uStack_334 * 2] = 0;\n    }\n    puStack_338 = auStack_330;\n  }\n  func_30cf233b31a2462f(*puStack_338,puStack_338[1]);\n  (*(code *)PTR_free_00412084)(puStack_338);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_4b59da714467457d(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412068)(4);\n  uVar2 = *puVar1;\n  (*(code *)PTR_free_00412080)(puVar1);\n  func_1585d8caa4234422(uVar2);\n  return;\n}\n\n",
        "\nvoid func_33b2dd86a8ea4bf2(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar1 = (*(code *)PTR_malloc_0041206c)(100);\n  badStatic = 1;\n  uVar1 = func_a98d4476e1814102(uVar1);\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  (*(code *)PTR_strcpy_00412074)(&uStack_40,uVar1);\n  func_412bd14dd8eb4f5b(uVar1);\n  (*(code *)PTR_free_00412088)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_777d8f1e294148c3(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_realloc_00412070)(0,8);\n  func_c6aaa863dbf44b11(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_87fbbb04dd6640c2(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n                    /* WARNING: Could not recover jumptable at 0x00400ce0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_004012a0,*puVar1,puVar1[1]);\n  return;\n}\n\n",
        "\nvoid func_9158be330d374a6a(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_dc [100];\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puVar3 = auStack_dc;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  func_9158be330d374a6aData = puVar3;\n  (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar2 = (*(code *)PTR_strlen_0041206c)(auStack_78);\n  (*(code *)PTR_strncat_0041204c)(puVar3,auStack_78,uVar2);\n  func_74d24fa0726047c3();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c4d680a809074b8c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120b4;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412080)(auStack_6c,0,0x60);\n  if (staticTrue != 0) {\n    iVar1 = (*(code *)PTR_strlen_0041208c)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00412074)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412080)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = (*(code *)PTR_inet_addr_0041206c)(&UNK_00401cd0);\n      uStack_7e = (*(code *)PTR_htons_004120a8)(0x6987);\n      iVar3 = (*(code *)PTR_connect_00412068)(iVar2,&uStack_80,0x10);\n      if (((iVar3 != -1) &&\n          (iVar3 = (*(code *)PTR_recv_00412064)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n          iVar3 != -1)) && (iVar3 != 0)) {\n        *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412090)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412090)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412060)(iVar2);\n    }\n  }\n  if (staticTrue != 0) {\n    (*(code *)PTR_fprintf_00412088)(*(undefined4 *)PTR_stdout_00412078,&uStack_70);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120b4) {\n    (*(code *)PTR___stack_chk_fail_004120ac)();\n  }\n  return;\n}\n\n",
        "\nvoid func_6b1c4532e75942ab(void)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  int *piVar4;\n  int *piVar5;\n  int *piVar6;\n  int **ppiVar7;\n  int iVar8;\n  int *piVar9;\n  undefined auStack_108 [99];\n  undefined uStack_a5;\n  int aiStack_a4 [2];\n  undefined *puStack_9c;\n  int iStack_78;\n  int *piStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar2 = PTR___stack_chk_guard_00412084;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x41,99);\n  piStack_74 = &iStack_78;\n  ppiVar7 = &piStack_74;\n  uStack_d = 0;\n  func_eb4d901edbca4340();\n  if (iStack_c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  puVar3 = PTR___stack_chk_guard_00412084;\n  puStack_9c = puVar2;\n  aiStack_a4[0] = *(int *)PTR___stack_chk_guard_00412084;\n  piVar9 = *ppiVar7;\n  piVar4 = (int *)(*(code *)PTR_memset_00412064)(auStack_108,0x43,99);\n  piVar5 = piVar4;\n  if (((uint)((int)piVar4 - (int)((int)piVar9 + 1)) < 3) || (((uint)piVar9 & 3) != 0)) {\n    do {\n      uVar1 = *(undefined *)piVar9;\n      piVar6 = (int *)((int)piVar5 + 1);\n      piVar9 = (int *)((int)piVar9 + 1);\n      *(undefined *)piVar5 = uVar1;\n      piVar5 = piVar6;\n    } while (piVar6 != aiStack_a4);\n  }\n  else {\n    do {\n      iVar8 = *piVar9;\n      piVar6 = piVar5 + 1;\n      piVar9 = piVar9 + 1;\n      *piVar5 = iVar8;\n      piVar5 = piVar6;\n    } while (piVar6 != aiStack_a4);\n  }\n  uStack_a5 = 0;\n  func_06e488a1917e4259();\n  if (aiStack_a4[0] != *(int *)puVar3) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n    if (piVar4 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_044a7c00e599459a(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412080)(8);\n  puVar1[1] = 5;\n  *puVar1 = 0;\n  func_920043a6d79643a3(0,5);\n                    /* WARNING: Could not recover jumptable at 0x00400c00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(puVar1);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_b15beb6461564c12(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uStack_10;\n  \n  uStack_10 = 0;\n  if (staticTrue != 0) {\n    uStack_10 = (*(code *)PTR_rand_00412064)();\n  }\n  if (staticTrue != 0) {\n    if (uStack_10 < 6) {\n      func_b6648ee83fba4262(&UNK_00401978);\n    }\n    else {\n      uVar4 = (*(code *)PTR_malloc_00412078)(uStack_10);\n      uVar3 = _UNK_00401970;\n      uVar1 = uVar4 & 3;\n      *(uint *)(uVar4 - uVar1) =\n           *(uint *)(uVar4 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401970 >> uVar1 * 8;\n      uVar1 = uVar4 + 3 & 3;\n      puVar2 = (uint *)((uVar4 + 3) - uVar1);\n      *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n      *(undefined *)(uVar4 + 4) = UNK_00401974;\n      *(undefined *)(uVar4 + 5) = UNK_00401975;\n      func_b6648ee83fba4262(uVar4);\n      (*(code *)PTR_free_00412090)(uVar4);\n    }\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_14babc9c336b4244(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  code **ppcVar4;\n  code *pcVar5;\n  int iStack_a0;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412094;\n  (*(code *)PTR_memset_00412074)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_fopen_0041209c)(&UNK_00401468,&UNK_00401464);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR___fgets_chk_00412070)(&uStack_78,0xffffffff,100,iVar2);\n    if (iVar3 == 0) {\n      func_90aee98b9c4443b1(&UNK_00401478);\n      uStack_78 = uStack_78 & 0xffffff;\n    }\n    (*(code *)PTR_fclose_00412064)(iVar2);\n  }\n  func_de8f1065b66a4c05(&uStack_78);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  puVar1 = PTR___stack_chk_guard_00412094;\n  iVar2 = *(int *)PTR___stack_chk_guard_00412094;\n  iVar3 = (*(code *)PTR___isoc99_sscanf_00412078)();\n  if (iVar3 == 1) {\n    if (iStack_a0 < 1) {\n      iStack_a0 = 0;\n    }\n    func_cf0026c68e0845c1(iStack_a0);\n  }\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  if (___CTOR_LIST__ != (code *)0xffffffff) {\n    ppcVar4 = (code **)&__CTOR_LIST__;\n    pcVar5 = ___CTOR_LIST__;\n    do {\n      ppcVar4 = ppcVar4 + -1;\n      (*pcVar5)();\n      pcVar5 = *ppcVar4;\n    } while (pcVar5 != (code *)0xffffffff);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ab066214390a4c90(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = func_1b65bc5162a4404f(0);\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412078)(uVar1,auStack_70);\n  func_29eddbea8d3544e5(uVar1);\n  (*(code *)PTR_free_0041208c)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b35632425aac48d1(int param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_memmove_0041208c)(param_1,auStack_70,100);\n  *(undefined *)(param_1 + 99) = 0;\n  func_5233b2c1f1c5426d(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9afd39228ce9401b(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined *puVar6;\n  undefined4 uVar7;\n  code *pcVar8;\n  undefined auStack_150 [99];\n  undefined uStack_ed;\n  int iStack_ec;\n  undefined4 *puStack_e4;\n  undefined *puStack_e0;\n  code *pcStack_dc;\n  undefined *puStack_c8;\n  undefined auStack_c0 [8];\n  undefined4 *puStack_b8;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined uStack_7c;\n  undefined uStack_7b;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_90 = 0x41414141;\n  uStack_8c = 0x41414141;\n  uStack_88 = 0x41414141;\n  uStack_84 = 0x41414141;\n  uStack_80 = 0x41414141;\n  uStack_7c = 0x41;\n  puStack_c8 = &_gp;\n  uStack_7b = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_memset_00412064)(auStack_78,0x41,99);\n  puVar6 = auStack_c0;\n  uStack_15 = 0;\n  puStack_b8 = &uStack_ac;\n  func_d663dd247bcb45c0();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  pcVar8 = func_d663dd247bcb45c0;\n  (**(code **)(puStack_c8 + -0x7f9c))();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_e0 = puVar1;\n  iStack_ec = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar7 = *(undefined4 *)(puVar6 + 8);\n  puStack_e4 = &uStack_ac;\n  pcStack_dc = pcVar8;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_150,0x43,99);\n  uStack_ed = 0;\n  uVar4 = (*(code *)PTR_strlen_0041206c)(uVar3);\n  iVar5 = (*(code *)PTR___memmove_chk_00412078)(uVar3,uVar7,uVar4,100);\n  uStack_ed = 0;\n  func_20e05fad47064e51();\n  if (iStack_ec == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar5 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c10. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_8d90514737c24b6b(void)\n\n{\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_00401228,0x42);\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_4bbb0f1fc83d4c74(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ******ppppppuStack_2c;\n  undefined4 ******ppppppuStack_28;\n  undefined4 *******pppppppuStack_24;\n  undefined4 *******pppppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppppuStack_2c = &pppppppuStack_24;\n  ppppppuStack_28 = &pppppppuStack_24;\n  pppppppuStack_24 = &ppppppuStack_2c;\n  pppppppuStack_20 = &ppppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_00412084)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_00412054)(iStack_38,&ppppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412050)(iStack_38);\n  }\n  linkedListPrev = ppppppuStack_28;\n  linkedListNext = ppppppuStack_2c;\n  *ppppppuStack_28 = ppppppuStack_2c;\n  linkedListNext[1] = linkedListPrev;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_63c0703dfbcc4831(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uStack_7c;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  iVar1 = (*(code *)PTR_malloc_00412070)(0x32);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar2 = (*(code *)PTR_strlen_00412060)(auStack_70);\n  for (uStack_7c = 0; uStack_7c < uVar2; uStack_7c = uStack_7c + 1) {\n    auStack_70[uStack_7c] = *(undefined *)(iVar1 + uStack_7c);\n  }\n  uStack_d = 0;\n  func_b74bd7f438f34025(auStack_70);\n  (*(code *)PTR_free_00412088)(iVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_1c3e538a1a304849(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar4 = (undefined *)(*(code *)PTR_malloc_00412078)(0x32);\n    *puVar4 = 0;\n  }\n  else {\n    puVar4 = (undefined *)0x0;\n  }\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_strcpy_00412080)(puVar4,uVar2);\n  puVar3 = puVar4;\n  func_e7c91d05821c4674();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400af4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(puVar4);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_52bd6c3caad84843(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_130;\n  undefined2 uStack_118;\n  undefined2 uStack_116;\n  undefined4 uStack_114;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  uStack_108 = _UNK_00401d90;\n  uStack_104 = _UNK_00401d94;\n  (*(code *)PTR_memset_00412070)(auStack_102,0,0xf4);\n  iVar1 = func_b850be8de7f04199();\n  if (iVar1 != 0) {\n    iStack_130 = -1;\n    iVar1 = (*(code *)PTR_strlen_0041207c)(&uStack_108);\n    iVar2 = (*(code *)PTR_socket_00412060)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_118,0,0x10);\n      uStack_118 = 2;\n      uStack_114 = 0;\n      uStack_116 = (*(code *)PTR_htons_0041209c)(0x6987);\n      iVar3 = (*(code *)PTR_bind_00412078)(iVar2,&uStack_118,0x10);\n      if ((((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5), iVar3 != -1)) &&\n          (iStack_130 = (*(code *)PTR_accept_00412094)(iVar2,0,0), iStack_130 != -1)) &&\n         ((iVar3 = (*(code *)PTR_recv_00412058)(iStack_130,(int)&uStack_108 + iVar1,0xf9 - iVar1,0),\n          iVar3 != -1 && (iVar3 != 0)))) {\n        *(undefined *)((int)&uStack_108 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_108,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_108,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n    if (iStack_130 != -1) {\n      (*(code *)PTR_close_00412054)(iStack_130);\n    }\n  }\n  (*(code *)PTR_putenv_00412068)(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_48eb746f8f6f4072(void)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  int iVar5;\n  undefined *puVar6;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar2 = PTR___stack_chk_guard_00412098;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412098;\n  pcVar3 = (char *)(*(code *)PTR_malloc_00412088)(100);\n  puVar6 = (undefined *)0x2;\n  *pcVar3 = '\\0';\n  puVar4 = (undefined *)(*(code *)PTR_socket_00412064)(2,2,6);\n  if (puVar4 != (undefined *)0xffffffff) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401434);\n    uStack_2c = func_b9c10076b5f14db6(uStack_2c._0_2_,0x6987);\n    iVar5 = (*(code *)PTR_connect_00412058)(puVar4,&uStack_2c,0x10);\n    if ((iVar5 != -1) &&\n       (iVar5 = (*(code *)PTR_recv_00412054)(puVar4,pcVar3,99,0), puVar6 = PTR_strchr_00412078,\n       1 < iVar5 + 1U)) {\n      pcVar3[iVar5] = '\\0';\n      puVar6 = (undefined *)(*(code *)puVar6)(pcVar3,0xd);\n      if (puVar6 != (undefined *)0x0) {\n        *puVar6 = 0;\n      }\n      puVar6 = (undefined *)(*(code *)PTR_strchr_00412078)(pcVar3,10);\n      if (puVar6 != (undefined *)0x0) {\n        *puVar6 = 0;\n      }\n    }\n    (*(code *)PTR_close_00412050)();\n    puVar6 = puVar4;\n  }\n  cVar1 = *pcVar3;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b44:\n      if (iStack_1c == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400b6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_free_0041209c)(pcVar3);\n        return;\n      }\n      (*(code *)PTR___stack_chk_fail_00412090)();\n      if (puVar6 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_puts_00412084)();\n        return;\n      }\n      return;\n    }\n    puVar6 = (undefined *)0x400000;\n    if (cVar1 == 'S') {\n      puVar6 = &UNK_00401440;\n      func_74ef4d457b7849fa();\n      goto code_r0x00400b44;\n    }\n    cVar1 = pcVar3[1];\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_0a3cef60cc434e7e(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  Elf32_Ehdr *pEVar6;\n  Elf32_Ehdr *pEVar7;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 == -1) goto code_r0x00400b14;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_3c = 0x26987;\n  iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_3c,0x10);\n  if (iVar3 == -1) {\ncode_r0x00400b98:\n    (*(code *)PTR_close_00412050)(iVar2);\ncode_r0x00400b14:\n    pEVar7 = &__DT_MIPS_BASE_ADDRESS;\n    if (iStack_1c == *(int *)puVar1) {\n      pEVar7 = (Elf32_Ehdr *)&UNK_004014d4;\n      goto code_r0x00400cf0;\n    }\n  }\n  else {\n    iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar3 = (*(code *)PTR_accept_00412090)(iVar2,0,0);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar4 = (*(code *)PTR_recv_00412054)(iVar3,auStack_2c,0xd,0);\n    if (iVar4 + 1U < 2) {\n      (*(code *)PTR_close_00412050)(iVar2);\n      (*(code *)PTR_close_00412050)(iVar3);\n      goto code_r0x00400b14;\n    }\n    auStack_2c[iVar4] = 0;\n    uVar5 = (*(code *)PTR_strtoul_00412078)(auStack_2c,0,0);\n    (*(code *)PTR_close_00412050)(iVar2);\n    (*(code *)PTR_close_00412050)(iVar3);\n    if (uVar5 < 6) goto code_r0x00400b14;\n    pEVar6 = (Elf32_Ehdr *)(*(code *)PTR_malloc_00412088)(uVar5);\n    pEVar6->e_ident_magic_num = 0x68;\n    pEVar6->e_ident_magic_str[0] = 'e';\n    pEVar6->e_ident_magic_str[1] = 'l';\n    pEVar6->e_ident_magic_str[2] = 'l';\n    pEVar6->e_ident_class = 0x6f;\n    pEVar6->e_ident_data = 0;\n    pEVar7 = pEVar6;\n    func_e96637ba54be4505();\n    if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a0)(pEVar6);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\ncode_r0x00400cf0:\n  if (pEVar7 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b145e3e8d5954219(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412078)(400);\n  (*(code *)PTR___wcscpy_chk_00412068)(iVar1,&UNK_004011f4,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_00412058)(1,&UNK_0040123c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_1d9cbd80642e49be(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 *puVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar2 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(0x32);\n  *(undefined *)((int)puVar3 + 0x31) = 0;\n  puVar1 = PTR_memset_00412060;\n  *puVar3 = 0x41414141;\n  puVar3[1] = 0x41414141;\n  puVar3[2] = 0x41414141;\n  puVar3[3] = 0x41414141;\n  puVar3[4] = 0x41414141;\n  puVar3[5] = 0x41414141;\n  puVar3[6] = 0x41414141;\n  puVar3[7] = 0x41414141;\n  puVar3[8] = 0x41414141;\n  puVar3[9] = 0x41414141;\n  puVar3[10] = 0x41414141;\n  puVar3[0xb] = 0x41414141;\n  *(undefined *)(puVar3 + 0xc) = 0x41;\n  uVar4 = (*(code *)puVar1)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar5 = (*(code *)PTR_strlen_00412068)(uVar4);\n  iVar6 = (*(code *)PTR___memcpy_chk_00412074)(uVar4,puVar3,uVar5,100);\n  uStack_15 = 0;\n  func_f559e66d2e9a4afb();\n  if (iStack_14 == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400b54. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(puVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar6 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_aa6e6ba21d894287(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412064)(auStack_dc + 2,0x41,99);\n  uStack_71 = 0;\n  func_d1ecb517ba84473a();\n  puVar6 = auStack_70;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_a83ad275e6ae408e();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_cef112b9554e415b(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_f0 [104];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  uint uStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_74 = auStack_f0;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puVar1 = puStack_88;\n  puStack_74[99] = 0;\n  if (**(int **)(puVar1 + -0x7fe0) != 0) {\n    puStack_7c = puStack_74 + -8;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  for (uStack_78 = 0; uStack_78 < 100; uStack_78 = uStack_78 + 1) {\n    auStack_70[uStack_78] = puStack_7c[uStack_78];\n  }\n  auStack_70[99] = 0;\n  func_fb0a10fa491c4318(auStack_70);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_18d52c83e25d4905(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iVar3;\n  char *pcVar4;\n  \n  pcVar2 = (char *)(*(code *)PTR_malloc_00412080)(100);\n  *pcVar2 = '\\0';\n  iVar3 = (*(code *)PTR___fgets_chk_00412064)\n                    (pcVar2,0xffffffff,100,*(undefined4 *)PTR_stdin_0041206c);\n  if (iVar3 == 0) {\n    func_c93d673dd2954ffc(&UNK_00401374);\n    *pcVar2 = '\\0';\n  }\n  else {\n    iVar3 = (*(code *)PTR_strlen_00412070)(pcVar2);\n    if ((iVar3 != 0) && (pcVar2[iVar3 + -1] == '\\n')) {\n      pcVar2[iVar3 + -1] = '\\0';\n    }\n  }\n  iVar3 = func_2c9b440fe3f2472a();\n  if (iVar3 == 0) {\n    iVar3 = (*(code *)PTR_strlen_00412070)(pcVar2);\n    pcVar4 = pcVar2;\n    while (pcVar2 + iVar3 != pcVar4) {\n      cVar1 = *pcVar4;\n      pcVar4 = pcVar4 + 1;\n      if (cVar1 == 'S') {\ncode_r0x00400b70:\n        func_c93d673dd2954ffc(&UNK_00401384);\n                    /* WARNING: Could not recover jumptable at 0x00400b94. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_free_00412094)(pcVar2);\n        return;\n      }\n    }\n  }\n  else {\n    cVar1 = *pcVar2;\n    while (cVar1 != '\\0') {\n      if (cVar1 == 'S') goto code_r0x00400b70;\n      pcVar4 = pcVar2 + 1;\n      pcVar2 = pcVar2 + 1;\n      cVar1 = *pcVar4;\n    }\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400b40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(pcVar2);\n  return;\n}\n\n",
        "\nint func_02220adc0b2042d6(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int iVar4;\n  undefined auStack_48 [52];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  uVar2 = (*(code *)PTR_malloc_00412080)(100);\n  func_02220adc0b2042d6Global = 1;\n  iVar3 = func_82f6744d5f5b4dd8(uVar2);\n  (*(code *)PTR___strcpy_chk_00412064)(auStack_48,iVar3,0x32);\n  iVar4 = iVar3;\n  func_f10065e3777a4687();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    iVar4 = (*(code *)PTR_free_00412094)(iVar3);\n    return iVar4;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (*(int *)PTR_func_02220adc0b2042d6Global_00412048 == 0) {\n    return iVar4;\n  }\n  (*(code *)PTR_memset_0041206c)();\n  *(undefined *)(iVar4 + 99) = 0;\n  return iVar4;\n}\n\n",
        "\nvoid func_e00c694d29764686(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_c8 [104];\n  undefined auStack_60 [56];\n  undefined *puStack_28;\n  code *pcStack_1c;\n  undefined *puStack_18;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_28 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  pcStack_1c = (code *)PTR_CWE126_Buffer_Overread__char_alloca_memmove_65b_badSink_00412040;\n  puStack_18 = auStack_60;\n  puStack_14 = auStack_c8;\n  (*(code *)PTR_memset_0041205c)(puStack_18,0x41,0x31);\n  puVar1 = puStack_28;\n  puStack_18[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc4))(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_18;\n  (*pcStack_1c)(puStack_18);\n  if (iStack_c != **(int **)(puStack_28 + -0x7f9c)) {\n    (**(code **)(puStack_28 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_9ce705ffc7254cc2(void)\n\n{\n  undefined1 *puVar1;\n  \n  puVar1 = (undefined1 *)0x0;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    puVar1 = dataBuffer_0;\n    (*(code *)PTR_memset_00412064)(dataBuffer_0,0x41,99);\n    dataBuffer_0[99] = 0;\n  }\n  func_bc7b5f0dd5ab4bb0();\n                    /* WARNING: Could not recover jumptable at 0x00400a5c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar1);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_a6a14eb0210b473b(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined *puVar6;\n  \n  puVar6 = (undefined *)(*(code *)PTR_malloc_00412070)(100);\n  *puVar6 = 0;\n  uVar5 = _UNK_00401aa8;\n  uVar4 = _UNK_00401aa4;\n  uVar3 = _UNK_00401aa0;\n  uVar2 = (uint)puVar6 & 3;\n  *(uint *)(puVar6 + -uVar2) =\n       *(uint *)(puVar6 + -uVar2) & -1 << (4 - uVar2) * 8 | _UNK_00401aa0 >> uVar2 * 8;\n  puVar1 = puVar6 + 3;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar3 << (3 - uVar2) * 8;\n  puVar1 = puVar6 + 4;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | uVar4 >> uVar2 * 8;\n  puVar1 = puVar6 + 7;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar4 << (3 - uVar2) * 8;\n  puVar1 = puVar6 + 8;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & -1 << (4 - uVar2) * 8 | uVar5 >> uVar2 * 8;\n  puVar1 = puVar6 + 0xb;\n  uVar2 = (uint)puVar1 & 3;\n  *(uint *)(puVar1 + -uVar2) =\n       *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 | uVar5 << (3 - uVar2) * 8;\n  puVar6[0xc] = UNK_00401aac;\n  func_a6a14eb0210b473bGlobal = 1;\n  func_9e71d62698104b44(puVar6);\n  return;\n}\n\n",
        "\nvoid func_e93a758c65614cbf(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  uint uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  uStack_18 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR___isoc99_fscanf_00412090)\n            (*(undefined4 *)PTR_stdin_00412064,&UNK_004012b4,&uStack_18);\n  if (uStack_18 < 6) {\n    puVar3 = (undefined4 *)&UNK_004012b8;\n    func_245e8d70f91e4030();\n    if (iStack_14 == *(int *)puVar1) {\n      return;\n    }\n  }\n  else {\n    puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412074)();\n    *puVar2 = 0x68656c6c;\n    *(undefined2 *)(puVar2 + 1) = 0x6f00;\n    puVar3 = puVar2;\n    func_245e8d70f91e4030();\n    if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412088)(puVar2);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar3 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_0c8b4a82dc5f441b(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)func_eeff5b5d5472481e(0);\n  puVar1[1] = 5;\n  *puVar1 = 0;\n  func_70f286743abd44fc(*puVar1,puVar1[1]);\n  (*(code *)PTR_free_00412084)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_7a3669b31c374ce6(void)\n\n{\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  if (staticTrue != 0) {\n    auStack_c0[0] = 0;\n    puStack_7c = puStack_78;\n  }\n  (*(code *)PTR_memset_00412068)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fb0))(puStack_7c,auStack_70);\n  func_60a735adb1c54c44(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_546e5400e4294f21(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412080)(0x32);\n  (*(code *)PTR_memset_00412068)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  func_a0a61582608f4c4a(iVar1);\n  return;\n}\n\n",
        "\nvoid func_aa74c7619f2746ba(void)\n\n{\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  func_74ff6141e8b74950(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nint func_6c36b3230847454d(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  \n  iVar1 = (*(code *)PTR_wcslen_0041206c)();\n  if (1 < 0xfaU - iVar1) {\n    iVar2 = (*(code *)PTR_fopen_00412098)(&UNK_00401458,&UNK_00401454);\n    if (iVar2 != 0) {\n      puVar3 = (undefined4 *)(param_1 + iVar1 * 4);\n      iVar1 = (*(code *)PTR___fgetws_chk_0041209c)(puVar3,0x3fffffff,0xfaU - iVar1,iVar2);\n      if (iVar1 == 0) {\n        func_c8ff59de2fe44014(&UNK_00401468);\n        *puVar3 = 0;\n      }\n      (*(code *)PTR_fclose_0041205c)(iVar2);\n      return param_1;\n    }\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_77875d3e97314294(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401be0);\n    uStack_2a = (*(code *)PTR_htons_00412090)(0x6987);\n    iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_00412058)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      iStack_38 = (*(code *)PTR_atoi_0041206c)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412054)(iVar1);\n  }\n  if (iStack_38 < 6) {\n    (*(code *)PTR___assert_fail_00412050)(&UNK_00401cd0,&UNK_00401bec,0x76,__PRETTY_FUNCTION___0);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ed87abe85a724ab8(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412068)(0x18);\n  *(undefined **)(iVar1 + 0x10) = &UNK_00401990;\n  func_7cc74ea3b3994745(*(undefined4 *)(iVar1 + 0x10));\n  (*(code *)PTR_memcpy_00412080)(iVar1,&UNK_00401990,0x18);\n  *(undefined *)(iVar1 + 0xf) = 0;\n  func_7cc74ea3b3994745(iVar1);\n  func_7cc74ea3b3994745(*(undefined4 *)(iVar1 + 0x10));\n  (*(code *)PTR_free_00412084)(iVar1);\n  return;\n}\n\n",
        "\nvoid func_4453283da8bc42fb(int param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_0041206c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strncpy_00412068)(param_1,auStack_70,99);\n  *(undefined *)(param_1 + 99) = 0;\n  func_cfd960fd8e1e4ff9(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid func_e1865dd217a2440e(void)\n\n{\n  undefined *puStack_28;\n  undefined4 uStack_20;\n  undefined4 *puStack_1c;\n  undefined4 *puStack_18;\n  undefined4 uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_28 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_1c = &uStack_20;\n  puStack_18 = &uStack_20;\n  uStack_20 = 0;\n  uStack_14 = 0;\n  uStack_14 = (*(code *)PTR_calloc_00412050)(1,4);\n  *puStack_1c = uStack_14;\n  puStack_10 = (undefined4 *)*puStack_18;\n  *puStack_10 = 5;\n  func_e782618c16e44944(*puStack_10);\n  (**(code **)(puStack_28 + -0x7f9c))(puStack_10);\n  if (iStack_c != **(int **)(puStack_28 + -0x7fa0)) {\n    (**(code **)(puStack_28 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_fa07220f41e248f4(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  iVar2 = func_c20c94a9d03d433a();\n  puVar1 = puStack_88;\n  if (iVar2 != 0) {\n    puStack_7c = puStack_78;\n    *puStack_78 = 0;\n  }\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fb0))(puStack_7c,auStack_70);\n  func_508fe973ccb647fe(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_fa59ee474c98479a(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_e4 [8];\n  undefined auStack_dc [99];\n  undefined uStack_79;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puVar3 = auStack_e4;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412060)(auStack_dc,0x41,99);\n  uStack_79 = 0;\n  func_fa59ee474c98479aData = puVar3;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_strcpy_00412078)(puVar3,uVar2);\n  func_2c847e22e5a84771();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nundefined4 func_f5587828b8eb434a(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 uVar4;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412098;\n  if (*(int *)PTR_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_22_badGlobal_0041204c !=\n      0) {\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_1c = 0;\n    uStack_18 = 0;\n    iVar2 = (*(code *)PTR_fgets_00412094)(&uStack_24,0xe,*(undefined4 *)PTR_stdin_00412078);\n    if (iVar2 == 0) {\n      func_e19c7533b46549bc(&UNK_00401414);\n    }\n    else {\n      param_1 = (*(code *)PTR_strtol_00412060)(&uStack_24,0,10);\n    }\n  }\n  if (iStack_14 == *(int *)puVar1) {\n    return param_1;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_22_badGlobal = 1;\n  iVar2 = func_f5587828b8eb434a(0xffffffff);\n  puVar3 = (undefined4 *)(*(code *)PTR_calloc_00412058)(iVar2 << 2,1);\n  func_609c0972a75c43ba(*puVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar4 = (*(code *)PTR_free_0041209c)(puVar3);\n  return uVar4;\n}\n\n",
        "\nvoid func_1ffb2749cf694ece(void)\n\n{\n  undefined auStack_84 [8];\n  undefined *puStack_7c;\n  undefined auStack_78 [8];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x41,99);\n  uStack_d = 0;\n  puStack_7c = auStack_78;\n  func_eb12ae4570f24bf1(auStack_84);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_992792684fd84af4(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 *puVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar2 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(0x32);\n  *(undefined *)((int)puVar3 + 0x31) = 0;\n  puVar1 = PTR_memset_00412060;\n  *puVar3 = 0x41414141;\n  puVar3[1] = 0x41414141;\n  puVar3[2] = 0x41414141;\n  puVar3[3] = 0x41414141;\n  puVar3[4] = 0x41414141;\n  puVar3[5] = 0x41414141;\n  puVar3[6] = 0x41414141;\n  puVar3[7] = 0x41414141;\n  puVar3[8] = 0x41414141;\n  puVar3[9] = 0x41414141;\n  puVar3[10] = 0x41414141;\n  puVar3[0xb] = 0x41414141;\n  *(undefined *)(puVar3 + 0xc) = 0x41;\n  uVar4 = (*(code *)puVar1)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar5 = (*(code *)PTR_strlen_00412068)(uVar4);\n  iVar6 = (*(code *)PTR___memcpy_chk_00412074)(uVar4,puVar3,uVar5,100);\n  uStack_15 = 0;\n  func_e96ff5be05cb455f();\n  if (iStack_14 == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400b54. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(puVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar6 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_792843cb9fab4fa8(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  Elf32_Ehdr *pEVar6;\n  Elf32_Ehdr *pEVar7;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041209c;\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 == -1) goto code_r0x00400b14;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_3c = 0x26987;\n  iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_3c,0x10);\n  if (iVar3 == -1) {\ncode_r0x00400b98:\n    (*(code *)PTR_close_00412050)(iVar2);\ncode_r0x00400b14:\n    pEVar7 = &__DT_MIPS_BASE_ADDRESS;\n    if (iStack_1c == *(int *)puVar1) {\n      pEVar7 = (Elf32_Ehdr *)&UNK_004014d4;\n      goto code_r0x00400cf0;\n    }\n  }\n  else {\n    iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar3 = (*(code *)PTR_accept_00412090)(iVar2,0,0);\n    if (iVar3 == -1) goto code_r0x00400b98;\n    iVar4 = (*(code *)PTR_recv_00412054)(iVar3,auStack_2c,0xd,0);\n    if (iVar4 + 1U < 2) {\n      (*(code *)PTR_close_00412050)(iVar2);\n      (*(code *)PTR_close_00412050)(iVar3);\n      goto code_r0x00400b14;\n    }\n    auStack_2c[iVar4] = 0;\n    uVar5 = (*(code *)PTR_strtoul_00412078)(auStack_2c,0,0);\n    (*(code *)PTR_close_00412050)(iVar2);\n    (*(code *)PTR_close_00412050)(iVar3);\n    if (uVar5 < 6) goto code_r0x00400b14;\n    pEVar6 = (Elf32_Ehdr *)(*(code *)PTR_malloc_00412088)(uVar5);\n    pEVar6->e_ident_magic_num = 0x68;\n    pEVar6->e_ident_magic_str[0] = 'e';\n    pEVar6->e_ident_magic_str[1] = 'l';\n    pEVar6->e_ident_magic_str[2] = 'l';\n    pEVar6->e_ident_class = 0x6f;\n    pEVar6->e_ident_data = 0;\n    pEVar7 = pEVar6;\n    func_a4f48b80185f41d3();\n    if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a0)(pEVar6);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412094)();\ncode_r0x00400cf0:\n  if (pEVar7 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2a86bba2dd6341cf(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  code *pcVar4;\n  undefined auStack_128 [104];\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 uStack_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined uStack_90;\n  undefined uStack_8f;\n  undefined *puStack_88;\n  undefined4 uStack_7c;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_88 = &_gp;\n  uStack_c0 = 0x41414141;\n  uStack_bc = 0x41414141;\n  uStack_b8 = 0x41414141;\n  uStack_b4 = 0x41414141;\n  uStack_b0 = 0x41414141;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_8f = 0;\n  uStack_90 = 0x41;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_128,0x41,99);\n  pcVar4 = *(code **)(puStack_88 + -0x7fc0);\n  *(undefined *)(iVar2 + 99) = 0;\n  uStack_7c = (*pcVar4)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (**(code **)(puStack_88 + -0x7fb8))(uStack_7c);\n  iVar2 = (**(code **)(puStack_88 + -0x7fac))(uStack_7c,&uStack_c0,uVar3,100);\n  uStack_15 = 0;\n  func_3b9ed8b69f7b460c();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_88 + -0x7fa0))();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b860b2a441a340bb\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412050)(100,8,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_cd1ff570f23c47a3(puVar1);\n  return;\n}\n\n",
        "\nvoid func_02aec352a08249d0(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  if (**(int **)(puVar1 + -0x7fe0) == 5) {\n    puStack_78 = puStack_74 + -8;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7f9c))(auStack_70,puStack_78,100);\n  uStack_d = 0;\n  func_764f552602db4c92(auStack_70);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa0)) {\n    (**(code **)(puStack_80 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_178ec6895ea04d70(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  uint uStack_40;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_40 = 0xffffffff;\n  iVar1 = func_857c74cbde86484f();\n  if (iVar1 != 0) {\n    iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401cd0);\n      uStack_2a = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_2c,0x10);\n      if (((iVar2 != -1) &&\n          (iVar2 = (*(code *)PTR_recv_00412058)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) &&\n         (iVar2 != 0)) {\n        auStack_1c[iVar2] = 0;\n        uStack_40 = (*(code *)PTR_atoi_0041206c)(auStack_1c);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412054)(iVar1);\n    }\n  }\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_00412088)(uStack_40 << 2);\n  for (uStack_3c = 0; uStack_3c < uStack_40; uStack_3c = uStack_3c + 1) {\n    puVar3[uStack_3c] = 0;\n  }\n  func_3b0fe6db18284957(*puVar3);\n  (*(code *)PTR_free_004120a4)(puVar3);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fe2bc2a0f8404921(undefined4 *param_1)\n\n{\n  (*(code *)PTR_putenv_0041205c)(*param_1);\n  return;\n}\n\n",
        "\nvoid func_645b102036fc4974(void)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  \n  piVar1 = (int *)(*(code *)PTR_malloc_0041206c)(4);\n  puVar2 = (undefined4 *)*piVar1;\n  (*(code *)PTR_free_00412084)(piVar1);\n  func_da5d15a2e3884184(*puVar2);\n  func_da5d15a2e3884184(puVar2[1]);\n  return;\n}\n\n",
        "\nvoid func_f281f9eae5c14d6b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 ***pppuStack_3c;\n  undefined4 ***pppuStack_38;\n  undefined4 ***pppuStack_34;\n  undefined4 ***pppuStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  pppuStack_3c = &pppuStack_34;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412094;\n  pppuStack_38 = pppuStack_3c;\n  pppuStack_34 = &pppuStack_3c;\n  pppuStack_30 = &pppuStack_3c;\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_2c,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n      if (iVar3 != -1) {\n        iVar3 = (*(code *)PTR_accept_00412088)(iVar2,0,0);\n        if (iVar3 != -1) {\n          (*(code *)PTR_recv_00412054)(iVar3,&pppuStack_3c,8,0);\n          (*(code *)PTR_close_00412050)(iVar2);\n          (*(code *)PTR_close_00412050)(iVar3);\n          goto code_r0x00400ad0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\ncode_r0x00400ad0:\n  iVar2 = iStack_1c;\n  iVar3 = *(int *)puVar1;\n  *pppuStack_38 = pppuStack_3c;\n  pppuStack_3c[1] = pppuStack_38;\n  if (iVar2 == iVar3) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_f0f0318f168749f6(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  char cStack_79;\n  undefined4 auStack_78 [4];\n  undefined auStack_68 [84];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412098;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412098;\n  auStack_78[0] = _UNK_00401470;\n  auStack_78[1] = _UNK_00401474;\n  auStack_78[2] = _UNK_00401478;\n  auStack_78[3] = _UNK_0040147c;\n  (*(code *)PTR_memset_00412070)(auStack_68,0,0x54);\n  iVar2 = func_3691aaf3ac2c4c0f();\n  if (iVar2 == 0) {\n    (*(code *)PTR__MIPS_STUBS__004120a8)(auStack_78,&UNK_00401444,100);\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_0041207c)(auStack_78);\n    if (100 - iVar2 != 1) {\n      puVar4 = (undefined *)((int)auStack_78 + iVar2);\n      iVar2 = (*(code *)PTR___fgets_chk_0041206c)\n                        (puVar4,0xffffffff,100 - iVar2,*(undefined4 *)PTR_stdin_00412078);\n      if (iVar2 == 0) {\n        func_1e7d30f513884092(&UNK_00401434);\n        *puVar4 = 0;\n      }\n      else {\n        iVar2 = (*(code *)PTR_strlen_0041207c)(auStack_78);\n        if ((iVar2 != 0) && (pcVar3 = (char *)((int)auStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n          *pcVar3 = '\\0';\n        }\n      }\n    }\n  }\n  iVar2 = (*(code *)PTR_popen_00412060)(auStack_78,&UNK_00401448);\n  if (iVar2 != 0) {\n    (*(code *)PTR_pclose_00412050)();\n  }\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412090)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c86e480cb0a24816(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  if (**(int **)(puVar1 + -0x7fe0) == 5) {\n    puStack_78 = puStack_74 + -8;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7fac))(puStack_78,auStack_70);\n  func_e9b0059d76f146c2(puStack_78);\n  if (iStack_c != **(int **)(puStack_80 + -0x7f9c)) {\n    (**(code **)(puStack_80 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_c658726be52d4b7f(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  (*(code *)PTR_memset_00412074)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401444);\n    uStack_88 = func_351a05fea96f4c25(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_88,0x10);\n    if (iVar3 == -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    else {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,&uStack_78,99,0);\n      if (1 < iVar3 + 1U) {\n        auStack_74[iVar3 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n  }\n  puVar4 = &UNK_00401458;\n  (*(code *)PTR_execlp_00412090)\n            (&UNK_00401458,&UNK_00401458,&UNK_00401454,&UNK_00401450,&uStack_78,0);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n    if (puVar4 == (undefined *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_16f429ad9686405d(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined4 *puStack_1a8;\n  undefined4 auStack_1a4 [100];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  puVar4 = auStack_1a4 + 1;\n  auStack_1a4[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412094;\n  (*(code *)PTR_memset_00412070)(puVar4,0,0x18c);\n  iVar2 = func_bd75cdd983d54a12();\n  if (iVar2 != 0) {\n    iVar2 = (*(code *)PTR_wcslen_0041206c)(auStack_1a4);\n    puVar4 = (undefined4 *)&UNK_00401364;\n    iVar3 = (*(code *)PTR_getenv_00412084)();\n    if (iVar3 != 0) {\n      puVar4 = auStack_1a4 + iVar2;\n      (*(code *)PTR_wcsncat_00412058)(puVar4,iVar3,99 - iVar2);\n      iVar2 = func_bd75cdd983d54a12();\n      goto joined_r0x00400b74;\n    }\n  }\n  iVar2 = func_bd75cdd983d54a12();\njoined_r0x00400b74:\n  if (iVar2 != 0) {\n    puVar4 = auStack_1a4;\n    iVar2 = (*(code *)PTR___isoc99_swscanf_00412088)(puVar4,&UNK_00401374,&puStack_1a8);\n    if (iVar2 == 1) {\n      puVar4 = puStack_1a8;\n      if ((int)puStack_1a8 < 1) {\n        puVar4 = (undefined4 *)0x0;\n      }\n      func_0cfaeef19ab0450f();\n    }\n  }\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n    if (puVar4 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400be0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nundefined4 func_9f66d417f2f84173(undefined4 param_1)\n\n{\n  if (*(int *)PTR_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_22_badGlobal_0041204c ==\n      0) {\n    return param_1;\n  }\n  return 0x40000001;\n}\n\n",
        "\nvoid func_05cdf45233134f8e\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_fopen_00412094)(&UNK_00401308,&UNK_00401304,param_3,param_4,&_gp);\n                    /* WARNING: Could not recover jumptable at 0x00400b3c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_fclose_00412064)(uVar1);\n  return;\n}\n\n",
        "\nvoid func_923e8ced34204246(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120b0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_0041207c)(auStack_6c,0,0x60);\n  if (staticTrue != 0) {\n    iVar1 = (*(code *)PTR_strlen_00412084)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00412074)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_0041207c)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = (*(code *)PTR_inet_addr_0041206c)(&UNK_00401cc0);\n      uStack_7e = (*(code *)PTR_htons_004120a0)(0x6987);\n      iVar3 = (*(code *)PTR_connect_00412068)(iVar2,&uStack_80,0x10);\n      if (((iVar3 != -1) &&\n          (iVar3 = (*(code *)PTR_recv_00412064)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n          iVar3 != -1)) && (iVar3 != 0)) {\n        *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412060)(iVar2);\n    }\n  }\n  (*(code *)PTR_execlp_004120a4)\n            (&UNK_00401cd4,&UNK_00401cd4,&UNK_00401cd0,&UNK_00401ccc,&uStack_70,0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120b0) {\n    (*(code *)PTR___stack_chk_fail_004120a8)();\n  }\n  return;\n}\n\n",
        "\nvoid func_73affbf8a97e4973(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined auStack_58 [56];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_20 = &_gp;\n  puVar2 = auStack_58;\n  auStack_58[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  func_a89ca3b6773f499c();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7fa0))();\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_eba97d1518274ed5(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  iVar1 = (*(code *)PTR_malloc_00412070)(0x32);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar2 = (*(code *)PTR_strlen_00412060)(auStack_70);\n  (*(code *)PTR_memcpy_00412088)(auStack_70,iVar1,uVar2);\n  uStack_d = 0;\n  func_36ea4a213ac74ff6(auStack_70);\n  (*(code *)PTR_free_0041208c)(iVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_0f31a4c94d1043fe(void)\n\n{\n  int iVar1;\n  int iStack_1bc;\n  int iStack_1b8;\n  int iStack_1b4;\n  int iStack_1b0;\n  int iStack_1ac;\n  undefined4 *puStack_1a8;\n  int iStack_1a4;\n  int iStack_1a0;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412064)(auStack_198,0,0x18c);\n  puStack_1a8 = &uStack_19c;\n  for (iStack_1b8 = 0; iStack_1b8 < 1; iStack_1b8 = iStack_1b8 + 1) {\n    iStack_1a4 = (*(code *)PTR_wcslen_00412060)(puStack_1a8);\n    iStack_1a0 = (*(code *)PTR_getenv_00412078)(&UNK_00401ad0);\n    if (iStack_1a0 != 0) {\n      (*(code *)PTR_wcsncat_00412054)(puStack_1a8 + iStack_1a4,iStack_1a0,99 - iStack_1a4);\n    }\n  }\n  for (iStack_1b4 = 0; iStack_1b4 < 1; iStack_1b4 = iStack_1b4 + 1) {\n    iVar1 = (*(code *)PTR___isoc99_swscanf_0041207c)(puStack_1a8,&UNK_00401ae0,&iStack_1bc);\n    if (iVar1 == 1) {\n      iStack_1ac = 0;\n      for (iStack_1b0 = 0; iStack_1b0 < iStack_1bc; iStack_1b0 = iStack_1b0 + 1) {\n        iStack_1ac = iStack_1ac + 1;\n      }\n      func_89b6adfa83cc456f(iStack_1ac);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e57dd60bdea84813(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(8);\n    uVar3 = *puVar1;\n    uVar2 = puVar1[1];\n    (*(code *)PTR_free_00412088)(puVar1);\n    func_34106e9341264caf(uVar3);\n    func_34106e9341264caf(uVar2);\n  }\n  return;\n}\n\n",
        "\nvoid func_62dd325bd6a64812(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412078)(400);\n  (*(code *)PTR___wcscpy_chk_00412068)(iVar1,&UNK_004011f4,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_00412058)(1,&UNK_0040123c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_2f86c2c8ddb645b8(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 ***pppuStack_3c;\n  undefined4 ***pppuStack_38;\n  undefined4 ***pppuStack_34;\n  undefined4 ***pppuStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  pppuStack_3c = &pppuStack_34;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412094;\n  pppuStack_38 = pppuStack_3c;\n  pppuStack_34 = &pppuStack_3c;\n  pppuStack_30 = &pppuStack_3c;\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_2c,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_listen_00412064)(iVar2,5);\n      if (iVar3 != -1) {\n        iVar3 = (*(code *)PTR_accept_00412088)(iVar2,0,0);\n        if (iVar3 != -1) {\n          (*(code *)PTR_recv_00412054)(iVar3,&pppuStack_3c,8,0);\n          (*(code *)PTR_close_00412050)(iVar2);\n          (*(code *)PTR_close_00412050)(iVar3);\n          goto code_r0x00400ad0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\ncode_r0x00400ad0:\n  iVar2 = iStack_1c;\n  iVar3 = *(int *)puVar1;\n  *pppuStack_38 = pppuStack_3c;\n  pppuStack_3c[1] = pppuStack_38;\n  if (iVar2 == iVar3) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041208c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_9b4765e7fd1d4a05(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  uVar9 = (*(code *)PTR_malloc_00412068)(0x18);\n  *(undefined **)(uVar9 + 0x10) = &UNK_00401960;\n  func_ea55c8d262ff45ed(*(undefined4 *)(uVar9 + 0x10));\n  uVar8 = _UNK_00401974;\n  uVar7 = _UNK_00401970;\n  uVar6 = _UNK_0040196c;\n  uVar5 = _UNK_00401968;\n  uVar4 = _UNK_00401964;\n  uVar3 = _UNK_00401960;\n  uVar1 = uVar9 & 3;\n  *(uint *)(uVar9 - uVar1) =\n       *(uint *)(uVar9 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401960 >> uVar1 * 8;\n  uVar1 = uVar9 + 3 & 3;\n  puVar2 = (uint *)((uVar9 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 4 & 3;\n  puVar2 = (uint *)((uVar9 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n  uVar1 = uVar9 + 7 & 3;\n  puVar2 = (uint *)((uVar9 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 8 & 3;\n  puVar2 = (uint *)((uVar9 + 8) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar5 >> uVar1 * 8;\n  uVar1 = uVar9 + 0xb & 3;\n  puVar2 = (uint *)((uVar9 + 0xb) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar5 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0xc & 3;\n  puVar2 = (uint *)((uVar9 + 0xc) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar6 >> uVar1 * 8;\n  uVar1 = uVar9 + 0xf & 3;\n  puVar2 = (uint *)((uVar9 + 0xf) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar6 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0x10 & 3;\n  puVar2 = (uint *)((uVar9 + 0x10) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar7 >> uVar1 * 8;\n  uVar1 = uVar9 + 0x13 & 3;\n  puVar2 = (uint *)((uVar9 + 0x13) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar7 << (3 - uVar1) * 8;\n  uVar1 = uVar9 + 0x14 & 3;\n  puVar2 = (uint *)((uVar9 + 0x14) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar8 >> uVar1 * 8;\n  uVar1 = uVar9 + 0x17 & 3;\n  puVar2 = (uint *)((uVar9 + 0x17) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar8 << (3 - uVar1) * 8;\n  *(undefined *)(uVar9 + 0xf) = 0;\n  func_ea55c8d262ff45ed(uVar9);\n  func_ea55c8d262ff45ed(*(undefined4 *)(uVar9 + 0x10));\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_cc05c6cbbf29429c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  char cStack_71;\n  undefined4 auStack_70 [4];\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  auStack_70[0] = _UNK_00401b34;\n  auStack_70[1] = _UNK_00401b38;\n  auStack_70[2] = _UNK_00401b3c;\n  auStack_70[3] = _UNK_00401b40;\n  (*(code *)PTR_memset_00412060)(auStack_60,0,0x54);\n  iVar1 = (*(code *)PTR_strlen_0041206c)(auStack_70);\n  if (1 < 100U - iVar1) {\n    iVar2 = (*(code *)PTR_fgets_0041208c)\n                      ((int)auStack_70 + iVar1,100 - iVar1,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar2 == 0) {\n      func_98be9a45cf904e41(&UNK_00401b20);\n      *(undefined *)((int)auStack_70 + iVar1) = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_strlen_0041206c)(auStack_70);\n      if ((iVar1 != 0) && (*(char *)((int)auStack_70 + iVar1 + -1) == '\\n')) {\n        *(undefined *)((int)auStack_70 + iVar1 + -1) = 0;\n      }\n    }\n  }\n  iVar1 = (*(code *)PTR_popen_00412058)(auStack_70,&UNK_00401b30);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_0041204c)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a7993c880b4f4b33(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined *apuStack_140 [2];\n  undefined auStack_138 [99];\n  undefined uStack_d5;\n  undefined auStack_d4 [199];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  apuStack_140[0] = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412064)(auStack_138,0x41,99);\n  uStack_d5 = 0;\n  uVar2 = (**(code **)(apuStack_140[0] + -0x7fbc))(auStack_d4,0x43,199);\n  uStack_d = 0;\n  iVar3 = (**(code **)(apuStack_140[0] + -0x7fc4))(uVar2,apuStack_140,200);\n  func_915bb9768ee148b8();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(apuStack_140[0] + -0x7fa4))();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nint func_f38641293cd046ec(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar1 = (*(code *)PTR_wcslen_00412074)(param_1);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401de0);\n    uStack_1a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_1c,0x10);\n    if (((iVar3 != -1) &&\n        (uVar4 = (*(code *)PTR_recv_00412058)(iVar2,param_1 + iVar1 * 4,(99 - iVar1) * 4,0),\n        uVar4 != 0xffffffff)) && (uVar4 != 0)) {\n      *(undefined4 *)(param_1 + ((uVar4 >> 2) + iVar1) * 4) = 0;\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(param_1,0xd);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(param_1,10);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412054)(iVar2);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_d694370fe32a4785(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_10 = auStack_88;\n  (*(code *)PTR_memset_0041205c)(puStack_10,0x41,99);\n  puStack_10[99] = 0;\n  puStack_14 = puStack_10 + -8;\n  func_fa5be8ddf8624b55(&puStack_14);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_3bcd0d9b9d944500(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  undefined4 *puVar7;\n  undefined4 *puStack_1c0;\n  undefined4 uStack_1bc;\n  undefined4 uStack_1b8;\n  undefined4 uStack_1b4;\n  undefined4 uStack_1b0;\n  undefined4 uStack_1ac;\n  undefined auStack_1a8 [396];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  puVar7 = &uStack_1ac;\n  uStack_1ac = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_00412080)(auStack_1a8,0,0x18c);\n  iVar2 = (*(code *)PTR_wcslen_0041207c)(puVar7);\n  iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_1b8 = 0;\n    uStack_1b4 = 0;\n    uStack_1b0 = 0;\n    uStack_1bc._2_2_ = 0;\n    uStack_1bc._0_2_ = 2;\n    uStack_1b8 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401494);\n    uStack_1bc = func_388de5d7a9514d4d(uStack_1bc._0_2_,0x6987);\n    iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_1bc,0x10);\n    if (iVar4 != -1) {\n      uVar5 = (*(code *)PTR_recv_00412058)(iVar3,puVar7 + iVar2,(99 - iVar2) * 4,0);\n      if (1 < uVar5 + 1) {\n        *(undefined4 *)(auStack_1a8 + ((uVar5 >> 2) + iVar2) * 4 + -4) = 0;\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,0xd);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n        puVar6 = (undefined4 *)(*(code *)PTR_wcschr_00412070)(puVar7,10);\n        if (puVar6 != (undefined4 *)0x0) {\n          *puVar6 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  iVar2 = (*(code *)PTR___isoc99_swscanf_00412094)(puVar7,&UNK_004014c4,&puStack_1c0);\n  if (iVar2 == 1) {\n    puVar7 = puStack_1c0;\n    if ((int)puStack_1c0 < 1) {\n      puVar7 = (undefined4 *)0x0;\n    }\n    func_ef8816a8f99d4e97();\n  }\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  if (puVar7 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_74eb4a8fe2d34ef6(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_108 = _UNK_00401a48;\n  uStack_104 = _UNK_00401a4c;\n  (*(code *)PTR_memset_00412060)(auStack_102,0,0xf4);\n  iVar1 = (*(code *)PTR_strlen_00412068)(&uStack_108);\n  iVar2 = (*(code *)PTR_getenv_00412078)(&UNK_00401a44);\n  if (iVar2 != 0) {\n    (*(code *)PTR_strncat_0041204c)((int)&uStack_108 + iVar1,iVar2,0xf9 - iVar1);\n  }\n  (*(code *)PTR_putenv_00412058)(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_1cb6683c26a84bbe(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412070)(0,4);\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    *puVar1 = 5;\n    func_1598c252cbaa44fc(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_452d4716649044ca(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uStack_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar2 = (*(code *)PTR_malloc_00412078)(100);\n  (*(code *)PTR_memset_00412064)(iVar2,0x41,99);\n  *(undefined *)(iVar2 + 99) = 0;\n  uStack_48 = 0;\n  uStack_44 = 0;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  (*(code *)PTR___strcpy_chk_0041205c)(&uStack_48,iVar2,0x32);\n  iVar3 = iVar2;\n  func_1ba7026fe36e4251();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b08. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_0041208c)(iVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b7b6a710b3764353(void)\n\n{\n  undefined auStack_a4 [52];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  auStack_a4[0] = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412070)(auStack_a4,auStack_70);\n  func_73948c164ec44580(auStack_a4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_7b32feae215f4515(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined4 uStack_110;\n  undefined2 uStack_10c;\n  undefined auStack_10a [246];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_110 = _UNK_00401370;\n  uStack_10c = _UNK_00401374;\n  (*(code *)PTR_memset_0041206c)(auStack_10a,0,0xf4);\n  iVar2 = (*(code *)PTR_fopen_00412094)(&UNK_00401328,&UNK_00401324);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR___fgets_chk_00412068)((int)&uStack_10c + 1,0xffffffff,0xf5,iVar2);\n    if (iVar3 == 0) {\n      func_d6e5d7fd5bf04291(&UNK_00401338);\n      uStack_10c = uStack_10c & 0xff00;\n    }\n    (*(code *)PTR_fclose_00412058)(iVar2);\n  }\n  puVar4 = &uStack_110;\n  (*(code *)PTR_putenv_0041205c)();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (puVar4 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_ffe3ab51da08436b(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  int iVar3;\n  undefined auStack_70 [4];\n  undefined uStack_6c;\n  undefined uStack_6b;\n  undefined uStack_6a;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  auStack_70 = (undefined  [4])0x0;\n  (*(code *)PTR_memset_00412060)(&uStack_6c,0,0x60);\n  iVar3 = func_1f78ae7075cd446d();\n  if (iVar3 != 0) {\n    puVar1 = auStack_70 + 3;\n    uVar2 = (uint)puVar1 & 3;\n    *(uint *)(puVar1 + -uVar2) =\n         *(uint *)(puVar1 + -uVar2) & 0xffffffffU >> (uVar2 + 1) * 8 |\n         _UNK_00401a00 << (3 - uVar2) * 8;\n    uStack_6c = UNK_00401a04;\n    uStack_6b = UNK_00401a05;\n    uStack_6a = UNK_00401a06;\n  }\n  iVar3 = (*(code *)PTR_popen_00412058)(auStack_70,&UNK_00401a08);\n  if (iVar3 != 0) {\n    (*(code *)PTR_pclose_0041204c)(iVar3);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_45a3eb546894442a(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined auStack_70 [96];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  uStack_71 = 0;\n  puVar2 = (undefined4 *)(*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  puVar6 = auStack_dc;\n  uStack_10._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_10);\n  *puVar5 = *puVar3;\n  func_3f0a2e0e09784b2a();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b01563fa2cd046ba(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  int iVar4;\n  int unaff_s0;\n  int iVar5;\n  code *pcVar6;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  undefined auStack_58 [16];\n  undefined *puStack_48;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120ac;\n  iVar4 = 2;\n  puStack_48 = &_gp;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120ac;\n  iVar2 = (*(code *)PTR_socket_00412074)(2,2,6);\n  iVar5 = iVar2;\n  if (iVar2 != -1) {\n    uStack_38 = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_3c = 0x26987;\n    iVar4 = (**(code **)(puStack_48 + -0x7f94))(iVar2,&uStack_3c,0x10);\n    if (((iVar4 == -1) || (iVar4 = (**(code **)(puStack_48 + -0x7fa4))(iVar2,5), iVar4 == -1)) ||\n       (iVar4 = (**(code **)(puStack_48 + -0x7f80))(iVar2,0,0), iVar4 == -1)) {\n      iVar5 = -1;\n      (**(code **)(puStack_48 + -0x7fbc))(iVar2);\n      iVar4 = iVar2;\n    }\n    else {\n      iVar5 = (**(code **)(puStack_48 + -0x7fb8))(iVar4,auStack_2c,0xd,0);\n      if (iVar5 + 1U < 2) {\n        iVar5 = -1;\n      }\n      else {\n        pcVar6 = *(code **)(puStack_48 + -0x7fb4);\n        auStack_2c[iVar5] = 0;\n        iVar5 = (*pcVar6)(auStack_2c,0,10);\n      }\n      (**(code **)(puStack_48 + -0x7fbc))(iVar2);\n      (**(code **)(puStack_48 + -0x7fbc))(iVar4);\n    }\n  }\n  iVar2 = iVar5;\n  if (iStack_1c != *(int *)puVar1) {\n    unaff_retaddr = &UNK_00400d9c;\n    (**(code **)(puStack_48 + -0x7f7c))();\n    iVar2 = iVar4;\n    unaff_s0 = iVar5;\n    register0x00000074 = (BADSPACEBASE *)auStack_58;\n  }\n  *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n  *(int *)((int)register0x00000074 + -8) = unaff_s0;\n  *(undefined **)((int)register0x00000074 + -0x10) = &_gp;\n  puVar3 = (undefined4 *)(*(code *)PTR_calloc_0041205c)(iVar2 << 2,1);\n  func_b7b6af3b39cf4216(*puVar3);\n                    /* WARNING: Could not recover jumptable at 0x00401400. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(*(int *)((int)register0x00000074 + -0x10) + -0x7f70))(puVar3);\n  return;\n}\n\n",
        "\nvoid func_d3d84f00c86c4a7d(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_f0 [24];\n  undefined uStack_8d;\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_f0 + 2,0x41,99);\n  uStack_85 = 0;\n  puVar2 = (undefined4 *)(**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  puVar6 = auStack_f0;\n  uStack_18._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_18);\n  *puVar5 = *puVar3;\n  uStack_8d = 0;\n  func_14d3f6fd8ad44c4a();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_26082e73a0194be7(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  if (*(int *)PTR_globalFive_00412040 != 5) {\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(8);\n  uVar3 = *puVar1;\n  uVar2 = puVar1[1];\n  (*(code *)PTR_free_0041208c)(puVar1);\n  func_d066d4fab5dd4c88(uVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400ba4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_00401300,uVar2);\n  return;\n}\n\n",
        "\nvoid func_10a53305b39642cd(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412070)(auStack_6c,0,0x60);\n  iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_70);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_80,0,0x10);\n    uStack_80 = 2;\n    uStack_7c = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401cb0);\n    uStack_7e = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_80,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00412054)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n        iVar3 != -1)) && (iVar3 != 0)) {\n      *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_70,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  (*(code *)PTR_execl_0041206c)\n            (&UNK_00401cc4,&UNK_00401cc4,&UNK_00401cc0,&UNK_00401cbc,&uStack_70,0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_86a004c50d6a4922(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined auStack_f0 [8];\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  puVar4 = auStack_f0;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_e8,0x41,99);\n  *(undefined *)(iVar2 + 99) = 0;\n  uVar3 = (**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa8))(puVar4,uVar3);\n  func_6c82e62c65fb442d();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa4))();\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f9ea3f465269493b(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412094;\n  uStack_10 = 0xffffffff;\n  (*(code *)PTR___isoc99_fscanf_004120a0)\n            (*(undefined4 *)PTR_stdin_00412070,&UNK_00401cf0,&uStack_10);\n  func_08f25e474ea943cd(uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412094) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_07d618e1c5f54cd6(void)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  char *pcVar3;\n  \n  puVar2 = (undefined *)(*(code *)PTR_malloc_00412080)(100);\n  *puVar2 = 0;\n  pcVar3 = (char *)func_d5c25ea391d142ed(puVar2);\n  cVar1 = *pcVar3;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b54:\n                    /* WARNING: Could not recover jumptable at 0x00400b64. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412094)(pcVar3);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_256b40c3364749c3(&UNK_00401424);\n      goto code_r0x00400b54;\n    }\n    cVar1 = pcVar3[1];\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_8a769110f1794e9e(void)\n\n{\n  undefined auStack_20 [8];\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_18 = (*(code *)PTR_malloc_00412070)(8);\n  func_e0e811d943ce49cb(auStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b9c43fcefc974c93(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  uint uStack_44;\n  int iStack_40;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  uStack_44 = 0xffffffff;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iStack_40 = -1;\n    iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = 0;\n      uStack_2a = (*(code *)PTR_htons_0041209c)(0x6987);\n      iVar2 = (*(code *)PTR_bind_0041207c)(iVar1,&uStack_2c,0x10);\n      if ((((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_0041206c)(iVar1,5), iVar2 != -1)) &&\n          (iStack_40 = (*(code *)PTR_accept_00412094)(iVar1,0,0), iStack_40 != -1)) &&\n         ((iVar2 = (*(code *)PTR_recv_0041205c)(iStack_40,auStack_1c,0xd,0), iVar2 != -1 &&\n          (iVar2 != 0)))) {\n        auStack_1c[iVar2] = 0;\n        uStack_44 = (*(code *)PTR_atoi_00412068)(auStack_1c);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n    if (iStack_40 != -1) {\n      (*(code *)PTR_close_00412058)(iStack_40);\n    }\n  }\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_0041208c)(uStack_44 << 2);\n  for (uStack_3c = 0; uStack_3c < uStack_44; uStack_3c = uStack_3c + 1) {\n    puVar3[uStack_3c] = 0;\n  }\n  func_78367a9480184f27(*puVar3);\n  (*(code *)PTR_free_004120ac)(puVar3);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_6d97fe43e0d34dc2(void)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int *piVar3;\n  int aiStack_1a4 [100];\n  int aiStack_14 [2];\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  piVar3 = aiStack_1a4;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412080;\n  piVar2 = piVar3;\n  do {\n    *piVar2 = 5;\n    piVar2 = piVar2 + 1;\n  } while (piVar2 != aiStack_14);\n  func_d1454e1a798b4e62(aiStack_1a4[0]);\n  (*(code *)PTR_free_00412084)();\n  if (aiStack_14[0] == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (piVar3 != (int *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_1ea73f25d91f456e(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  \n  pcVar2 = (char *)(*(code *)PTR_malloc_0041207c)(100);\n  *pcVar2 = '\\0';\n  iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_00401358,&UNK_00401354);\n  if (iVar3 != 0) {\n    iVar4 = (*(code *)PTR___fgets_chk_00412068)(pcVar2,0xffffffff,100,iVar3);\n    if (iVar4 == 0) {\n      func_0cf35cc7abce40fb(&UNK_00401368);\n      *pcVar2 = '\\0';\n    }\n    (*(code *)PTR_fclose_0041205c)(iVar3);\n  }\n  iVar3 = func_fd9fe51fcc8343dd();\n  if (iVar3 == 0) {\n    return;\n  }\n  cVar1 = *pcVar2;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b64:\n                    /* WARNING: Could not recover jumptable at 0x00400b78. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412090)(pcVar2);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_0cf35cc7abce40fb(&UNK_00401378);\n      goto code_r0x00400b64;\n    }\n    cVar1 = pcVar2[1];\n    pcVar2 = pcVar2 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_55291328b5a24033(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  code *pcVar4;\n  undefined auStack_90 [104];\n  undefined *puStack_28;\n  int iStack_1c;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_28 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  iVar2 = func_b4f6b1c10d344907();\n  if (iVar2 == 0) {\n    puVar3 = (undefined *)(**(code **)(puStack_28 + -0x7fa4))(100);\n    if (puVar3 == (undefined *)0x0) {\n      func_735a88c66a304bfb(&UNK_004012f4);\n      puVar3 = puStack_28;\n      iVar2 = 1;\n      (**(code **)(puStack_28 + -0x7fb0))();\n      goto code_r0x00400b4c;\n    }\n    pcVar4 = *(code **)(puStack_28 + -0x7fbc);\n  }\n  else {\n    pcVar4 = *(code **)(puStack_28 + -0x7fbc);\n    puVar3 = auStack_90;\n  }\n  iStack_1c = (*pcVar4)(puVar3,0x41,99);\n  *(undefined *)(iStack_1c + 99) = 0;\n  func_735a88c66a304bfb(iStack_1c);\n  iVar2 = iStack_1c;\n  (**(code **)(puStack_28 + -0x7f90))();\n  puVar3 = puStack_28;\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\ncode_r0x00400b4c:\n  (**(code **)(puVar3 + -0x7f9c))();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_6f60aff6a25b4058(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412070)(0,4);\n  iVar2 = func_7cf1788d4d314de3();\n  if (iVar2 == 0) {\n    if (puVar1 != (undefined4 *)0x0) {\n      *puVar1 = 5;\n      func_d690f9a3d4a4401d(*puVar1);\n      (*(code *)PTR_free_00412088)(puVar1);\n    }\n  }\n  else {\n    *puVar1 = 5;\n    func_d690f9a3d4a4401d(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_0cba96faf3744256(void)\n\n{\n  func_16f25eab21ba4167(0x40000001);\n  return;\n}\n\n",
        "\nvoid func_3fb52a9d349a4fdb(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_70 = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_0041206c)(auStack_6c,0,0x60);\n  iVar2 = (*(code *)PTR_getenv_00412080)(&UNK_00401364);\n  if (iVar2 == 0) {\n    puVar3 = &uStack_70;\n  }\n  else {\n    puVar3 = (undefined4 *)(*(code *)PTR_strncat_00412054)(&uStack_70,iVar2,99);\n  }\n  func_1d9368b8a5374695();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (puVar3 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c27c5d9ffcb54f4e(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_f0 [24];\n  undefined uStack_8d;\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_f0 + 2,0x41,99);\n  uStack_85 = 0;\n  puVar2 = (undefined4 *)(**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  puVar6 = auStack_f0;\n  uStack_18._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_18);\n  *puVar5 = *puVar3;\n  uStack_8d = 0;\n  func_fb9c35c59f7449ad();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_4cf90434187c450c(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  uint uStack_28;\n  uint uStack_24;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_28 = 0xffffffff;\n  iVar1 = func_fe2042aee90e460c();\n  if (iVar1 == 0) {\n    uStack_28 = 0x14;\n  }\n  else {\n    uStack_1c = 0;\n    uStack_18 = 0;\n    uStack_14 = 0;\n    uStack_10 = 0;\n    iVar1 = (*(code *)PTR_fgets_0041208c)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar1 == 0) {\n      func_371b42227baa462e(&UNK_00401ae0);\n    }\n    else {\n      uStack_28 = (*(code *)PTR_atoi_0041205c)(&uStack_1c);\n    }\n  }\n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412078)(uStack_28 << 2);\n  for (uStack_24 = 0; uStack_24 < uStack_28; uStack_24 = uStack_24 + 1) {\n    puVar2[uStack_24] = 0;\n  }\n  func_46d1f86ed8c04838(*puVar2);\n  (*(code *)PTR_free_00412094)(puVar2);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_cddb6d422ab54436(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_118;\n  undefined2 uStack_116;\n  undefined4 uStack_114;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130b0;\n  uStack_108 = _UNK_00401f9c;\n  uStack_104 = _UNK_00401fa0;\n  (*(code *)PTR_memset_00413080)(auStack_102,0,0xf4);\n  iVar1 = (*(code *)PTR_strlen_00413088)(&uStack_108);\n  iVar2 = (*(code *)PTR_socket_00413074)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00413080)(&uStack_118,0,0x10);\n    uStack_118 = 2;\n    uStack_114 = (*(code *)PTR_inet_addr_0041306c)(&UNK_00401f90);\n    uStack_116 = (*(code *)PTR_htons_004130a4)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00413068)(iVar2,&uStack_118,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00413064)(iVar2,(int)&uStack_108 + iVar1,0xf9 - iVar1,0),\n        iVar3 != -1)) && (iVar3 != 0)) {\n      *(undefined *)((int)&uStack_108 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041308c)(&uStack_108,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041308c)(&uStack_108,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413060)(iVar2);\n  }\n  func_7a93ab31cd264910(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130b0) {\n    (*(code *)PTR___stack_chk_fail_004130a8)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f558fc8ab6f94e9a(void)\n\n{\n  int iVar1;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uStack_20 = 0xffffffff;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  iVar1 = (*(code *)PTR_fgets_0041208c)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00412068);\n  if (iVar1 == 0) {\n    func_f6dcf692da934547(&UNK_00401b40);\n  }\n  else {\n    uStack_20 = (*(code *)PTR_atoi_0041205c)(&uStack_1c);\n  }\n  func_d14d5a56ad5a4530(uStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_2529b24599c9470f(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 uStack_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 uStack_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined uStack_e0;\n  undefined uStack_df;\n  undefined auStack_dc [99];\n  undefined uStack_79;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  uStack_110 = 0x41414141;\n  uStack_10c = 0x41414141;\n  uStack_108 = 0x41414141;\n  uStack_104 = 0x41414141;\n  uStack_100 = 0x41414141;\n  uStack_fc = 0x41414141;\n  uStack_f8 = 0x41414141;\n  uStack_f4 = 0x41414141;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41;\n  uStack_df = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412060)(auStack_dc,0x41,99);\n  uStack_79 = 0;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_00412068)(uVar2);\n  iVar4 = (*(code *)PTR___memmove_chk_00412074)(uVar2,&uStack_110,uVar3,100);\n  uStack_15 = 0;\n  func_69637c8614c04bb2();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nundefined4\nfunc_f39b5db7ced9407d(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStackX_0;\n  int iStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  uStackX_0 = param_1;\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar2 = (*(code *)PTR_bind_0041207c)(iVar1,&uStack_2c,0x10);\n    if ((((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_0041206c)(iVar1,5), iVar2 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412094)(iVar1,0,0), iStack_38 != -1)) &&\n       ((iVar2 = (*(code *)PTR_recv_0041205c)(iStack_38,auStack_1c,0xd,0), iVar2 != -1 &&\n        (iVar2 != 0)))) {\n      auStack_1c[iVar2] = 0;\n      uStackX_0 = (*(code *)PTR_atoi_00412068)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return uStackX_0;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_5a771a15192a456d(uint *param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar4 = _UNK_00401a14;\n  uVar3 = _UNK_00401a10;\n  uVar5 = *param_1;\n  uVar1 = uVar5 & 3;\n  *(uint *)(uVar5 - uVar1) =\n       *(uint *)(uVar5 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401a10 >> uVar1 * 8;\n  uVar1 = uVar5 + 3 & 3;\n  puVar2 = (uint *)((uVar5 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar1 = uVar5 + 4 & 3;\n  puVar2 = (uint *)((uVar5 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n  uVar1 = uVar5 + 7 & 3;\n  puVar2 = (uint *)((uVar5 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n  *(undefined *)(uVar5 + 8) = UNK_00401a18;\n  *(undefined *)(uVar5 + 9) = UNK_00401a19;\n  *(undefined *)(uVar5 + 10) = UNK_00401a1a;\n  func_9351de71c47d4651(uVar5);\n  (*(code *)PTR_free_00412084)(uVar5);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4d4b039c84c54862(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_3c = 0;\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    iVar4 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar4 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401cb0);\n      uStack_2a = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar5 = (*(code *)PTR_connect_0041205c)(iVar4,&uStack_2c,0x10);\n      if (((iVar5 != -1) &&\n          (iVar5 = (*(code *)PTR_recv_00412058)(iVar4,auStack_1c,0xd,0), iVar5 != -1)) &&\n         (iVar5 != 0)) {\n        auStack_1c[iVar5] = 0;\n        uStack_3c = (*(code *)PTR_strtoul_00412078)(auStack_1c,0,0);\n      }\n    }\n    if (iVar4 != -1) {\n      (*(code *)PTR_close_00412054)(iVar4);\n    }\n  }\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    if (uStack_3c < 6) {\n      func_171cf1541614495b(&UNK_00401cc4);\n    }\n    else {\n      uVar6 = (*(code *)PTR_malloc_00412088)(uStack_3c);\n      uVar3 = _UNK_00401cbc;\n      uVar1 = uVar6 & 3;\n      *(uint *)(uVar6 - uVar1) =\n           *(uint *)(uVar6 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401cbc >> uVar1 * 8;\n      uVar1 = uVar6 + 3 & 3;\n      puVar2 = (uint *)((uVar6 + 3) - uVar1);\n      *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n      *(undefined *)(uVar6 + 4) = UNK_00401cc0;\n      *(undefined *)(uVar6 + 5) = UNK_00401cc1;\n      func_171cf1541614495b(uVar6);\n      (*(code *)PTR_free_004120a4)(uVar6);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a406e36748c74795(void)\n\n{\n  int iVar1;\n  int iStack_88;\n  int iStack_84;\n  int iStack_80;\n  undefined4 *puStack_7c;\n  int iStack_78;\n  int iStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412060)(auStack_6c,0,0x60);\n  puStack_7c = &uStack_70;\n  iVar1 = func_2650cefaa81241e0();\n  if (iVar1 != 0) {\n    iStack_78 = (*(code *)PTR_strlen_00412068)(puStack_7c);\n    iStack_74 = (*(code *)PTR_getenv_00412078)(&UNK_00401af0);\n    if (iStack_74 != 0) {\n      (*(code *)PTR_strncat_00412050)((int)puStack_7c + iStack_78,iStack_74,99 - iStack_78);\n    }\n  }\n  iVar1 = func_2650cefaa81241e0();\n  if (iVar1 != 0) {\n    iVar1 = (*(code *)PTR___isoc99_sscanf_00412064)(puStack_7c,&UNK_00401af4,&iStack_88);\n    if (iVar1 == 1) {\n      iStack_80 = 0;\n      for (iStack_84 = 0; iStack_84 < iStack_88; iStack_84 = iStack_84 + 1) {\n        iStack_80 = iStack_80 + 1;\n      }\n      func_68725feb6eef47e3(iStack_80);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_02033c90fa7c47be(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  uint uStack_40;\n  uint uStack_3c;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_40 = 0xffffffff;\n  iVar1 = func_bdc1c57530c246e9();\n  if (iVar1 == 0) {\n    uStack_40 = 0x14;\n  }\n  else {\n    iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401cd0);\n      uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n      iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n      if (((iVar2 != -1) &&\n          (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) &&\n         (iVar2 != 0)) {\n        auStack_1c[iVar2] = 0;\n        uStack_40 = (*(code *)PTR_atoi_00412070)(auStack_1c);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n  }\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_0041208c)(uStack_40 << 2);\n  for (uStack_3c = 0; uStack_3c < uStack_40; uStack_3c = uStack_3c + 1) {\n    puVar3[uStack_3c] = 0;\n  }\n  func_22a9efd578b04fbb(*puVar3);\n  (*(code *)PTR_free_004120a8)(puVar3);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ff273dccdd1e43f1(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  iStack_38 = -1;\n  iVar1 = func_ec6e12fd4ea2446a();\n  if (iVar1 == 0) {\n    iStack_38 = 6;\n  }\n  else {\n    iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n      uStack_2c = 2;\n      uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401c30);\n      uStack_2a = (*(code *)PTR_htons_00412094)(0x6987);\n      iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n      if (((iVar2 != -1) &&\n          (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) &&\n         (iVar2 != 0)) {\n        auStack_1c[iVar2] = 0;\n        iStack_38 = (*(code *)PTR_atoi_00412070)(auStack_1c);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n  }\n  if (iStack_38 < 6) {\n    (*(code *)PTR___assert_fail_00412054)(&UNK_00401d20,&UNK_00401c3c,0x75,__PRETTY_FUNCTION___0);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9bf0c6d6bb2c4c2e(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined2 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412094;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412094;\n  iVar2 = (*(code *)PTR_fgets_00412090)(&uStack_2c,0xe,*(undefined4 *)PTR_stdin_00412070);\n  if (iVar2 == 0) {\n    iVar2 = -1;\n    iVar5 = -4;\n    func_2cca675548ea47eb(&UNK_00401374);\n    piVar3 = (int *)(*(code *)PTR_malloc_00412080)(0xfffffffc);\n  }\n  else {\n    iVar2 = (*(code *)PTR_strtol_00412054)(&uStack_2c,0,10);\n    iVar5 = iVar2 << 2;\n    piVar3 = (int *)(*(code *)PTR_malloc_00412080)(iVar5);\n    if (iVar2 == 0) goto code_r0x00400b4c;\n  }\n  iVar4 = 4;\n  if (iVar2 != 0) {\n    iVar4 = iVar5;\n  }\n  (*(code *)PTR_memset_00412068)(piVar3,0,iVar4);\ncode_r0x00400b4c:\n  iVar2 = *piVar3;\n  func_f05451be575d4005();\n  if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412098)(piVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400be0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_5b09343c02c44e0e(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_130;\n  undefined2 uStack_118;\n  undefined2 uStack_116;\n  undefined4 uStack_114;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_108 = _UNK_00401da0;\n  uStack_104 = _UNK_00401da4;\n  (*(code *)PTR_memset_0041206c)(auStack_102,0,0xf4);\n  iStack_130 = -1;\n  iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_108);\n  iVar2 = (*(code *)PTR_socket_0041205c)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_118,0,0x10);\n    uStack_118 = 2;\n    uStack_114 = 0;\n    uStack_116 = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar3 = (*(code *)PTR_bind_00412074)(iVar2,&uStack_118,0x10);\n    if ((((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00412060)(iVar2,5), iVar3 != -1)) &&\n        (iStack_130 = (*(code *)PTR_accept_00412090)(iVar2,0,0), iStack_130 != -1)) &&\n       ((iVar3 = (*(code *)PTR_recv_00412054)(iStack_130,(int)&uStack_108 + iVar1,0xf9 - iVar1,0),\n        iVar3 != -1 && (iVar3 != 0)))) {\n      *(undefined *)((int)&uStack_108 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_108,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(&uStack_108,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  if (iStack_130 != -1) {\n    (*(code *)PTR_close_00412050)(iStack_130);\n  }\n  func_3988ca34832f48fd(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_2ea2962a494d451b(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iStack_a8;\n  int iStack_a4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130a4;\n  iVar1 = func_0bf1446607134932();\n  if (iVar1 == 0) {\n    uStack_70 = 0;\n    (*(code *)PTR_memset_0041306c)(auStack_6c,0,0x60);\n    iStack_a4 = -1;\n    iVar1 = (*(code *)PTR_strlen_00413078)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00413060)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_0041306c)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = 0;\n      uStack_7e = (*(code *)PTR_htons_00413098)(0x6987);\n      iVar3 = (*(code *)PTR_bind_00413074)(iVar2,&uStack_80,0x10);\n      if ((((iVar3 != -1) && (iVar3 = (*(code *)PTR_listen_00413064)(iVar2,5), iVar3 != -1)) &&\n          (iStack_a4 = (*(code *)PTR_accept_00413090)(iVar2,0,0), iStack_a4 != -1)) &&\n         ((iVar1 = (*(code *)PTR_recv_00413058)(iStack_a4,auStack_6c + iVar1 + -4,99 - iVar1,0),\n          iVar1 != -1 && (iVar1 != 0)))) {\n        auStack_6c[iVar1 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041307c)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041307c)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00413054)(iVar2);\n    }\n    if (iStack_a4 != -1) {\n      (*(code *)PTR_close_00413054)(iStack_a4);\n    }\n    func_b35a1896d3194f8c(&uStack_70);\n  }\n  else {\n    uStack_70 = 0;\n    (*(code *)PTR_memset_0041306c)(auStack_6c,0,0x60);\n    iStack_a8 = -1;\n    iVar1 = (*(code *)PTR_strlen_00413078)(&uStack_70);\n    iVar2 = (*(code *)PTR_socket_00413060)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_0041306c)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = 0;\n      uStack_7e = (*(code *)PTR_htons_00413098)(0x6987);\n      iVar3 = (*(code *)PTR_listen_00413064)(iVar2,5);\n      if (((iVar3 != -1) && (iStack_a8 = (*(code *)PTR_accept_00413090)(iVar2,0,0), iStack_a8 != -1)\n          ) && ((iVar3 = (*(code *)PTR_bind_00413074)(iVar2,&uStack_80,0x10), iVar3 != -1 &&\n                ((iVar1 = (*(code *)PTR_recv_00413058)\n                                    (iStack_a8,auStack_6c + iVar1 + -4,99 - iVar1,0), iVar1 != -1 &&\n                 (iVar1 != 0)))))) {\n        auStack_6c[iVar1 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041307c)(&uStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041307c)(&uStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00413054)(iVar2);\n    }\n    if (iStack_a8 != -1) {\n      (*(code *)PTR_close_00413054)(iStack_a8);\n    }\n    func_b35a1896d3194f8c(&uStack_70);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130a4) {\n    (*(code *)PTR___stack_chk_fail_0041309c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400c18) */\n\nvoid func_fae5aedfacfd416c(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(uint *)PTR_CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_68_badData_00412048 < 6\n     ) {\n                    /* WARNING: Could not recover jumptable at 0x00400c10. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041208c)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412090)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_898f5ddf53754136(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400bd4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_004120a4)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_4ddf1cfc48624093(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint *puStack_a0;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412070)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_fopen_00412098)(&UNK_004013f8,&UNK_004013f4);\n  if (iVar2 != 0) {\n    iVar3 = (*(code *)PTR___fgets_chk_0041206c)(&uStack_78,0xffffffff,100,iVar2);\n    if (iVar3 == 0) {\n      func_8f8a0082bf2346e0(&UNK_00401408);\n      uStack_78 = uStack_78 & 0xffffff;\n    }\n    (*(code *)PTR_fclose_00412060)(iVar2);\n  }\n  puVar4 = &uStack_78;\n  func_ca83cde51cd94fd3();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  puVar1 = PTR___stack_chk_guard_00412090;\n  iVar2 = *(int *)PTR___stack_chk_guard_00412090;\n  iVar3 = (*(code *)PTR___isoc99_sscanf_00412074)();\n  if (iVar3 == 1) {\n    puVar4 = puStack_a0;\n    if ((int)puStack_a0 < 1) {\n      puVar4 = (uint *)0x0;\n    }\n    func_f8754a8287e24bb8();\n  }\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (puVar4 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_4bb32ad5cef9457a(void)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  undefined *puVar6;\n  char **ppcVar7;\n  char *pcVar8;\n  char *pcStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar2 = PTR___stack_chk_guard_004120a0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  pcStack_30 = (char *)(*(code *)PTR_malloc_0041208c)(100);\n  puVar6 = PTR_socket_00412060;\n  *pcStack_30 = '\\0';\n  iVar3 = (*(code *)puVar6)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar4 = (*(code *)PTR_bind_00412078)(iVar3,&uStack_2c,0x10);\n    if (((iVar4 == -1) || (iVar4 = (*(code *)PTR_listen_00412068)(iVar3,5), iVar4 == -1)) ||\n       (iVar4 = (*(code *)PTR_accept_00412094)(iVar3,0,0), iVar4 == -1)) {\n      (*(code *)PTR_close_00412054)(iVar3);\n    }\n    else {\n      iVar5 = (*(code *)PTR_recv_00412058)(iVar4,pcStack_30,99,0);\n      pcVar8 = pcStack_30;\n      puVar6 = PTR_strchr_0041207c;\n      if (1 < iVar5 + 1U) {\n        pcStack_30[iVar5] = '\\0';\n        puVar6 = (undefined *)(*(code *)puVar6)(pcStack_30,0xd);\n        if (puVar6 != (undefined *)0x0) {\n          *puVar6 = 0;\n          pcVar8 = pcStack_30;\n        }\n        puVar6 = (undefined *)(*(code *)PTR_strchr_0041207c)(pcVar8,10);\n        if (puVar6 != (undefined *)0x0) {\n          *puVar6 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar3);\n      (*(code *)PTR_close_00412054)(iVar4);\n    }\n  }\n  ppcVar7 = &pcStack_30;\n  func_f0a55edd65bb4c41();\n  if (iStack_1c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  pcVar8 = *ppcVar7;\n  cVar1 = *pcVar8;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400d44:\n                    /* WARNING: Could not recover jumptable at 0x00400d54. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a4)(pcVar8);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_239761f69e7d47de(&UNK_00401568);\n      goto code_r0x00400d44;\n    }\n    cVar1 = pcVar8[1];\n    pcVar8 = pcVar8 + 1;\n  } while( true );\n}\n\n",
        "\nvoid func_fbc4fd47b468422c(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_00412060)\n                    (*(undefined4 *)\n                      PTR_CWE78_OS_Command_Injection__char_console_popen_68_badData_00412040,\n                     &UNK_00401c20);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_00412054)(iVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_9105c6456b02480e(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined4 *puVar4;\n  undefined4 auStack_128 [24];\n  undefined uStack_c5;\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 uStack_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined uStack_90;\n  undefined uStack_8f;\n  undefined *puStack_88;\n  undefined auStack_80 [99];\n  undefined uStack_1d;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puVar3 = auStack_80;\n  puStack_88 = &_gp;\n  uStack_c0 = 0x41414141;\n  uStack_bc = 0x41414141;\n  uStack_b8 = 0x41414141;\n  uStack_b4 = 0x41414141;\n  uStack_b0 = 0x41414141;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_8f = 0;\n  uStack_90 = 0x41;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_128,0x41,99);\n  uStack_c5 = 0;\n  iVar2 = func_54d6295f3fcb4b7a();\n  puVar4 = &uStack_c0;\n  if (iVar2 == 0) {\n    puVar4 = auStack_128;\n  }\n  (**(code **)(puStack_88 + -0x7fbc))(puVar3,0x43,99);\n  uStack_1d = 0;\n  iVar2 = (**(code **)(puStack_88 + -0x7fb4))(puVar3);\n  if (iVar2 != 0) {\n    (**(code **)(puStack_88 + -0x7f94))(puVar3,puVar4,iVar2);\n  }\n  uStack_1d = 0;\n  func_ec5fc9187aa142c0();\n  if (iStack_1c == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_88 + -0x7fa0))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_9a72c486ee014ed0(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piStack_28;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iVar2 = *(int *)PTR___stack_chk_guard_00412084;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    param_1 = *piStack_28;\n    func_793b97c6cb4a48ec();\n  }\n  if (iVar2 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (param_1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_6d0e8f940f13496d(void)\n\n{\n  int iVar1;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0x10) = &_gp;\n    iVar1 = (*(code *)PTR_system_0041209c)();\n    if (0 < iVar1) break;\n    func_d8d2ca076570469b(&UNK_00401694);\n    unaff_retaddr = &UNK_00400c74;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x10) + -0x7f8c))(1);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x20);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_c1bd1ee582244a89(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  undefined2 uStack_404;\n  undefined2 uStack_402;\n  undefined4 uStack_400;\n  undefined4 auStack_3f4 [4];\n  undefined4 uStack_3e4;\n  undefined4 uStack_3e0;\n  undefined auStack_3dc [976];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130a0;\n  auStack_3f4[0] = _UNK_00401d4c;\n  auStack_3f4[1] = _UNK_00401d50;\n  auStack_3f4[2] = _UNK_00401d54;\n  auStack_3f4[3] = _UNK_00401d58;\n  uStack_3e4 = _UNK_00401d5c;\n  uStack_3e0 = _UNK_00401d60;\n  (*(code *)PTR_memset_00413078)(auStack_3dc,0,0x3d0);\n  iVar1 = (*(code *)PTR_wcslen_00413074)(auStack_3f4);\n  iVar2 = (*(code *)PTR_socket_00413064)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_00413078)(&uStack_404,0,0x10);\n    uStack_404 = 2;\n    uStack_400 = (*(code *)PTR_inet_addr_0041305c)(&UNK_00401d40);\n    uStack_402 = (*(code *)PTR_htons_00413094)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00413058)(iVar2,&uStack_404,0x10);\n    if (((iVar3 != -1) &&\n        (uVar4 = (*(code *)PTR_recv_00413054)(iVar2,auStack_3f4 + iVar1,(0xf9 - iVar1) * 4,0),\n        uVar4 != 0xffffffff)) && (uVar4 != 0)) {\n      auStack_3f4[(uVar4 >> 2) + iVar1] = 0;\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_0041306c)(auStack_3f4,0xd);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined4 *)(*(code *)PTR_wcschr_0041306c)(auStack_3f4,10);\n      if (puVar5 != (undefined4 *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413050)(iVar2);\n  }\n  func_1789e7becc6e4997(auStack_3f4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130a0) {\n    (*(code *)PTR___stack_chk_fail_00413098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9aa5ff27691d4ce1(void)\n\n{\n  undefined auStack_20 [8];\n  undefined4 *puStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_18 = (undefined4 *)(*(code *)PTR_malloc_00412074)(200);\n  *puStack_18 = 0;\n  func_550b7cce1fe94c77(auStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a7434c096b554d46(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_c0 [104];\n  undefined auStack_58 [56];\n  undefined *puStack_20;\n  undefined *puStack_18;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_18 = auStack_58;\n  puStack_14 = auStack_c0;\n  (*(code *)PTR_memset_0041205c)(puStack_18,0x41,0x31);\n  puVar1 = puStack_20;\n  puStack_18[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc4))(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_18;\n  func_4611d050881a48d2(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7f9c)) {\n    (**(code **)(puStack_20 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_6970d088e0674efe(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(4);\n  *puVar1 = 5;\n  func_c86c16de245a4c16(5);\n                    /* WARNING: Could not recover jumptable at 0x004010d4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_7b85940747524179(void)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iStack_10;\n  \n  for (iStack_10 = 0; iStack_10 < 1; iStack_10 = iStack_10 + 1) {\n    pcVar2 = (char *)(*(code *)PTR_malloc_0041206c)(1);\n    cVar1 = *pcVar2;\n    (*(code *)PTR_free_00412084)(pcVar2);\n    func_9d4af3a7d340460a((int)cVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_29b0f448e8a44415(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_00412060)(*param_1,&UNK_004012e4);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aac. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_pclose_00412050)(iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_de17ac47a8bb42d3(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  undefined4 **ppuVar9;\n  undefined4 *puStack_418;\n  undefined4 uStack_414;\n  undefined4 uStack_410;\n  undefined4 uStack_40c;\n  undefined4 uStack_408;\n  undefined4 uStack_404;\n  undefined4 uStack_400;\n  undefined4 uStack_3fc;\n  undefined4 uStack_3f8;\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar2 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_404 = _UNK_00401560;\n  uStack_400 = _UNK_00401564;\n  uStack_3fc = _UNK_00401568;\n  uStack_3f8 = _UNK_0040156c;\n  uStack_3f4 = _UNK_00401570;\n  uStack_3f0 = _UNK_00401574;\n  (*(code *)PTR_memset_00412084)(auStack_3ec,0,0x3d0);\n  puStack_418 = &uStack_404;\n  iVar3 = (*(code *)PTR_wcslen_00412080)();\n  iVar4 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar4 != -1) {\n    uStack_410 = 0;\n    uStack_40c = 0;\n    uStack_408 = 0;\n    uStack_414._2_2_ = 0;\n    uStack_414._0_2_ = 2;\n    uStack_410 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401524);\n    uStack_414 = func_2b60e899331141d4(uStack_414._0_2_,0x6987);\n    iVar5 = (*(code *)PTR_connect_0041205c)(iVar4,&uStack_414,0x10);\n    if (iVar5 != -1) {\n      uVar6 = (*(code *)PTR_recv_00412058)(iVar4,puStack_418 + iVar3,(0xf9 - iVar3) * 4,0);\n      puVar8 = puStack_418;\n      puVar1 = PTR_wcschr_00412074;\n      if (1 < uVar6 + 1) {\n        puStack_418[(uVar6 >> 2) + iVar3] = 0;\n        puVar7 = (undefined4 *)(*(code *)puVar1)(puStack_418,0xd);\n        if (puVar7 != (undefined4 *)0x0) {\n          *puVar7 = 0;\n        }\n        puVar8 = (undefined4 *)(*(code *)PTR_wcschr_00412074)(puVar8,10);\n        if (puVar8 != (undefined4 *)0x0) {\n          *puVar8 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412054)(iVar4);\n  }\n  ppuVar9 = &puStack_418;\n  func_be9de1ab10624af4();\n  if (iStack_1c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (ppuVar9 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_8656ea4a5f0f4603(uint param_1)\n\n{\n  undefined *puVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  puVar2 = (uint *)(*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_18._3_1_ = 0;\n  uVar4 = param_1;\n  do {\n    uVar3 = uVar4;\n    uVar9 = *puVar2;\n    puVar5 = puVar2 + 4;\n    uVar8 = puVar2[1];\n    uVar7 = puVar2[2];\n    uVar6 = puVar2[3];\n    uVar4 = uVar3 & 3;\n    *(uint *)(uVar3 - uVar4) = *(uint *)(uVar3 - uVar4) & -1 << (4 - uVar4) * 8 | uVar9 >> uVar4 * 8\n    ;\n    uVar4 = uVar3 + 3 & 3;\n    puVar2 = (uint *)((uVar3 + 3) - uVar4);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar4 + 1) * 8 | uVar9 << (3 - uVar4) * 8;\n    uVar4 = uVar3 + 4 & 3;\n    puVar2 = (uint *)((uVar3 + 4) - uVar4);\n    *puVar2 = *puVar2 & -1 << (4 - uVar4) * 8 | uVar8 >> uVar4 * 8;\n    uVar4 = uVar3 + 7 & 3;\n    puVar2 = (uint *)((uVar3 + 7) - uVar4);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar4 + 1) * 8 | uVar8 << (3 - uVar4) * 8;\n    uVar4 = uVar3 + 8 & 3;\n    puVar2 = (uint *)((uVar3 + 8) - uVar4);\n    *puVar2 = *puVar2 & -1 << (4 - uVar4) * 8 | uVar7 >> uVar4 * 8;\n    uVar4 = uVar3 + 0xb & 3;\n    puVar2 = (uint *)((uVar3 + 0xb) - uVar4);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar4 + 1) * 8 | uVar7 << (3 - uVar4) * 8;\n    uVar4 = uVar3 + 0xc & 3;\n    puVar2 = (uint *)((uVar3 + 0xc) - uVar4);\n    *puVar2 = *puVar2 & -1 << (4 - uVar4) * 8 | uVar6 >> uVar4 * 8;\n    uVar4 = uVar3 + 0xf & 3;\n    puVar2 = (uint *)((uVar3 + 0xf) - uVar4);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar4 + 1) * 8 | uVar6 << (3 - uVar4) * 8;\n    uVar4 = uVar3 + 0x10;\n    puVar2 = puVar5;\n  } while (puVar5 != &uStack_18);\n  uVar7 = *puVar5;\n  uVar6 = uVar4 & 3;\n  *(uint *)(uVar4 - uVar6) = *(uint *)(uVar4 - uVar6) & -1 << (4 - uVar6) * 8 | uVar7 >> uVar6 * 8;\n  uVar4 = uVar3 + 0x13 & 3;\n  puVar2 = (uint *)((uVar3 + 0x13) - uVar4);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar4 + 1) * 8 | uVar7 << (3 - uVar4) * 8;\n  *(undefined *)(param_1 + 99) = 0;\n  func_8a8c854c53824895();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (param_1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_56d8932ceb134e96(int param_1)\n\n{\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_memcpy_00412088)(param_1,auStack_70,100);\n  *(undefined *)(param_1 + 99) = 0;\n  func_8b5a0af408644500(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ab7284e7058748c1(void)\n\n{\n  undefined8 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined8 **ppuStack_14;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    ppuStack_14 = apuStack_28;\n    func_30f939dd3de44e1c(*apuStack_28[0]);\n  }\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n"
    ],
    "pred": [
        "CWE-401",
        "CWE-690",
        "CWE-426",
        "CWE-665",
        "CWE-789",
        "CWE-121",
        "CWE-690",
        "CWE-124",
        "CWE-590",
        "CWE-590",
        "CWE-761",
        "CWE-758",
        "CWE-121",
        "CWE-617",
        "CWE-690",
        "CWE-123",
        "CWE-126",
        "CWE-122",
        "CWE-789",
        "CWE-123",
        "CWE-401",
        "CWE-427",
        "CWE-401",
        "CWE-127",
        "CWE-617",
        "CWE-122",
        "CWE-126",
        "CWE-690",
        "CWE-590",
        "CWE-416",
        "CWE-126",
        "CWE-78",
        "CWE-457",
        "CWE-126",
        "CWE-761",
        "CWE-126",
        "CWE-126",
        "CWE-680",
        "CWE-124",
        "CWE-773",
        "CWE-127",
        "CWE-758",
        "CWE-457",
        "CWE-124",
        "CWE-475",
        "CWE-789",
        "CWE-126",
        "CWE-401",
        "CWE-467",
        "CWE-510",
        "CWE-426",
        "CWE-606",
        "CWE-758",
        "CWE-78",
        "CWE-126",
        "CWE-590",
        "CWE-606",
        "CWE-427",
        "CWE-401",
        "CWE-401",
        "CWE-126",
        "CWE-680",
        "CWE-122",
        "CWE-690",
        "CWE-122",
        "CWE-590",
        "CWE-121",
        "CWE-789",
        "CWE-126",
        "CWE-426",
        "CWE-78",
        "CWE-123",
        "CWE-789",
        "CWE-457",
        "CWE-789",
        "CWE-665",
        "CWE-401",
        "CWE-690",
        "CWE-427",
        "CWE-475",
        "CWE-122",
        "CWE-690",
        "CWE-124",
        "CWE-427",
        "CWE-690",
        "CWE-427",
        "CWE-665",
        "CWE-121",
        "CWE-121",
        "CWE-127",
        "CWE-426",
        "CWE-665",
        "CWE-122",
        "CWE-761",
        "CWE-690",
        "CWE-758",
        "CWE-590",
        "CWE-761",
        "CWE-127",
        "CWE-401",
        "CWE-758",
        "CWE-606",
        "CWE-690",
        "CWE-123",
        "CWE-680",
        "CWE-122",
        "CWE-127",
        "CWE-761",
        "CWE-690",
        "CWE-401",
        "CWE-665",
        "CWE-121",
        "CWE-665",
        "CWE-121",
        "CWE-122",
        "CWE-121",
        "CWE-758",
        "CWE-680",
        "CWE-124",
        "CWE-121",
        "CWE-401",
        "CWE-606",
        "CWE-789",
        "CWE-617",
        "CWE-401",
        "CWE-401",
        "CWE-121",
        "CWE-401",
        "CWE-126",
        "CWE-126",
        "CWE-123",
        "CWE-690",
        "CWE-121",
        "CWE-758",
        "CWE-127",
        "CWE-126",
        "CWE-617",
        "CWE-127",
        "CWE-127",
        "CWE-126",
        "CWE-680",
        "CWE-758",
        "CWE-121",
        "CWE-126",
        "CWE-121",
        "CWE-606",
        "CWE-617",
        "CWE-122",
        "CWE-126",
        "CWE-427",
        "CWE-122",
        "CWE-617",
        "CWE-665",
        "CWE-426",
        "CWE-126",
        "CWE-401",
        "CWE-427",
        "CWE-127",
        "CWE-401",
        "CWE-617",
        "CWE-690",
        "CWE-121",
        "CWE-416",
        "CWE-427",
        "CWE-457",
        "CWE-124",
        "CWE-680",
        "CWE-124",
        "CWE-613",
        "CWE-680",
        "CWE-606",
        "CWE-401",
        "CWE-789",
        "CWE-123",
        "CWE-124",
        "CWE-665",
        "CWE-121",
        "CWE-590",
        "CWE-690",
        "CWE-680",
        "CWE-590",
        "CWE-401",
        "CWE-606",
        "CWE-122",
        "CWE-427",
        "CWE-590",
        "CWE-758",
        "CWE-78",
        "CWE-789",
        "CWE-457",
        "CWE-426",
        "CWE-123",
        "CWE-427",
        "CWE-123",
        "CWE-606",
        "CWE-761",
        "CWE-789",
        "CWE-475",
        "CWE-121",
        "CWE-758",
        "CWE-121",
        "CWE-127",
        "CWE-761",
        "CWE-127",
        "CWE-789",
        "CWE-121",
        "CWE-590",
        "CWE-426",
        "CWE-416",
        "CWE-121",
        "CWE-126",
        "CWE-416",
        "CWE-690",
        "CWE-427",
        "CWE-761",
        "CWE-680",
        "CWE-78",
        "CWE-401",
        "CWE-606",
        "CWE-590",
        "CWE-78",
        "CWE-665",
        "CWE-427",
        "CWE-680",
        "CWE-690",
        "CWE-761",
        "CWE-401",
        "CWE-606",
        "CWE-126",
        "CWE-789",
        "CWE-761",
        "CWE-467",
        "CWE-789",
        "CWE-789",
        "CWE-789",
        "CWE-427",
        "CWE-690",
        "CWE-761",
        "CWE-123",
        "CWE-665",
        "CWE-617",
        "CWE-124",
        "CWE-758",
        "CWE-427",
        "CWE-127",
        "CWE-122",
        "CWE-122",
        "CWE-606",
        "CWE-122",
        "CWE-123",
        "CWE-122",
        "CWE-457",
        "CWE-426",
        "CWE-124",
        "CWE-758",
        "CWE-789",
        "CWE-126",
        "CWE-617",
        "CWE-680",
        "CWE-126",
        "CWE-121",
        "CWE-122",
        "CWE-789",
        "CWE-761",
        "CWE-124",
        "CWE-124",
        "CWE-121",
        "CWE-121",
        "CWE-426",
        "CWE-121",
        "CWE-122",
        "CWE-617",
        "CWE-126",
        "CWE-606",
        "CWE-617",
        "CWE-123",
        "CWE-123",
        "CWE-401",
        "CWE-121",
        "CWE-126",
        "CWE-457",
        "CWE-590",
        "CWE-401",
        "CWE-121",
        "CWE-122",
        "CWE-78",
        "CWE-690",
        "CWE-78",
        "CWE-606",
        "CWE-427",
        "CWE-126",
        "CWE-127",
        "CWE-416",
        "CWE-665",
        "CWE-126",
        "CWE-122",
        "CWE-121",
        "CWE-690",
        "CWE-121",
        "CWE-665",
        "CWE-789",
        "CWE-78",
        "CWE-122",
        "CWE-606",
        "CWE-690",
        "CWE-78",
        "CWE-121",
        "CWE-122",
        "CWE-78",
        "CWE-78",
        "CWE-680",
        "CWE-606",
        "CWE-606",
        "CWE-467",
        "CWE-758",
        "CWE-78",
        "CWE-613",
        "CWE-475",
        "CWE-121",
        "CWE-789",
        "CWE-427",
        "CWE-680",
        "CWE-122",
        "CWE-127",
        "CWE-126",
        "CWE-122",
        "CWE-78",
        "CWE-78",
        "CWE-427",
        "CWE-401",
        "CWE-121",
        "CWE-126",
        "CWE-124",
        "CWE-426",
        "CWE-789",
        "CWE-122",
        "CWE-590",
        "CWE-590",
        "CWE-606",
        "CWE-617",
        "CWE-127",
        "CWE-126",
        "CWE-665",
        "CWE-606",
        "CWE-606",
        "CWE-127",
        "CWE-401",
        "CWE-123",
        "CWE-457",
        "CWE-789",
        "CWE-126",
        "CWE-690",
        "CWE-690",
        "CWE-510",
        "CWE-758",
        "CWE-617",
        "CWE-78",
        "CWE-427",
        "CWE-401",
        "CWE-121",
        "CWE-606",
        "CWE-127",
        "CWE-124",
        "CWE-690",
        "CWE-127",
        "CWE-123",
        "CWE-127",
        "CWE-789",
        "CWE-427",
        "CWE-427",
        "CWE-690",
        "CWE-127",
        "CWE-761",
        "CWE-758",
        "CWE-467",
        "CWE-590",
        "CWE-758",
        "CWE-122",
        "CWE-690",
        "CWE-401",
        "CWE-665",
        "CWE-78",
        "CWE-127",
        "CWE-690",
        "CWE-789",
        "CWE-606",
        "CWE-122",
        "CWE-124",
        "CWE-127",
        "CWE-467",
        "CWE-123",
        "CWE-126",
        "CWE-122",
        "CWE-427",
        "CWE-761",
        "CWE-789",
        "CWE-401",
        "CWE-126",
        "CWE-126",
        "CWE-127",
        "CWE-761",
        "CWE-122",
        "CWE-126",
        "CWE-590",
        "CWE-475",
        "CWE-789",
        "CWE-690",
        "CWE-121",
        "CWE-126",
        "CWE-665",
        "CWE-427",
        "CWE-617",
        "CWE-122",
        "CWE-124",
        "CWE-690",
        "CWE-121",
        "CWE-124",
        "CWE-680",
        "CWE-127",
        "CWE-126",
        "CWE-789",
        "CWE-126",
        "CWE-401",
        "CWE-127",
        "CWE-680",
        "CWE-427",
        "CWE-758",
        "CWE-123",
        "CWE-426",
        "CWE-124",
        "CWE-78",
        "CWE-606",
        "CWE-680",
        "CWE-690",
        "CWE-78",
        "CWE-121",
        "CWE-126",
        "CWE-606",
        "CWE-758",
        "CWE-401",
        "CWE-123",
        "CWE-122",
        "CWE-78",
        "CWE-127",
        "CWE-606",
        "CWE-127",
        "CWE-606",
        "CWE-427",
        "CWE-690",
        "CWE-122",
        "CWE-121",
        "CWE-427",
        "CWE-426",
        "CWE-126",
        "CWE-680",
        "CWE-126",
        "CWE-758",
        "CWE-78",
        "CWE-124",
        "CWE-680",
        "CWE-761",
        "CWE-690",
        "CWE-680",
        "CWE-590",
        "CWE-761",
        "CWE-590",
        "CWE-690",
        "CWE-680",
        "CWE-606",
        "CWE-126",
        "CWE-680",
        "CWE-426",
        "CWE-617",
        "CWE-126",
        "CWE-617",
        "CWE-122",
        "CWE-789",
        "CWE-606",
        "CWE-680",
        "CWE-617",
        "CWE-680",
        "CWE-606",
        "CWE-78",
        "CWE-789",
        "CWE-680",
        "CWE-761",
        "CWE-78",
        "CWE-126",
        "CWE-758",
        "CWE-78",
        "CWE-427",
        "CWE-122",
        "CWE-126",
        "CWE-690",
        "CWE-758",
        "CWE-426",
        "CWE-427",
        "CWE-124",
        "CWE-124",
        "CWE-758"
    ],
    "gt": [
        "CWE-401",
        "CWE-690",
        "CWE-78",
        "CWE-665",
        "CWE-789",
        "CWE-121",
        "CWE-690",
        "CWE-124",
        "CWE-590",
        "CWE-590",
        "CWE-761",
        "CWE-758",
        "CWE-121",
        "CWE-617",
        "CWE-690",
        "CWE-123",
        "CWE-127",
        "CWE-122",
        "CWE-789",
        "CWE-123",
        "CWE-401",
        "CWE-427",
        "CWE-401",
        "CWE-127",
        "CWE-680",
        "CWE-122",
        "CWE-126",
        "CWE-690",
        "CWE-590",
        "CWE-416",
        "CWE-126",
        "CWE-78",
        "CWE-457",
        "CWE-126",
        "CWE-761",
        "CWE-126",
        "CWE-126",
        "CWE-680",
        "CWE-124",
        "CWE-773",
        "CWE-127",
        "CWE-758",
        "CWE-457",
        "CWE-121",
        "CWE-475",
        "CWE-789",
        "CWE-126",
        "CWE-401",
        "CWE-467",
        "CWE-510",
        "CWE-506",
        "CWE-606",
        "CWE-758",
        "CWE-134",
        "CWE-126",
        "CWE-590",
        "CWE-606",
        "CWE-427",
        "CWE-401",
        "CWE-401",
        "CWE-126",
        "CWE-680",
        "CWE-122",
        "CWE-690",
        "CWE-122",
        "CWE-590",
        "CWE-121",
        "CWE-789",
        "CWE-124",
        "CWE-78",
        "CWE-78",
        "CWE-123",
        "CWE-789",
        "CWE-457",
        "CWE-789",
        "CWE-665",
        "CWE-401",
        "CWE-690",
        "CWE-427",
        "CWE-475",
        "CWE-122",
        "CWE-690",
        "CWE-127",
        "CWE-427",
        "CWE-690",
        "CWE-427",
        "CWE-665",
        "CWE-121",
        "CWE-121",
        "CWE-127",
        "CWE-426",
        "CWE-665",
        "CWE-122",
        "CWE-761",
        "CWE-690",
        "CWE-758",
        "CWE-590",
        "CWE-761",
        "CWE-127",
        "CWE-401",
        "CWE-758",
        "CWE-134",
        "CWE-690",
        "CWE-123",
        "CWE-680",
        "CWE-122",
        "CWE-124",
        "CWE-761",
        "CWE-690",
        "CWE-401",
        "CWE-665",
        "CWE-121",
        "CWE-665",
        "CWE-121",
        "CWE-122",
        "CWE-127",
        "CWE-758",
        "CWE-789",
        "CWE-124",
        "CWE-665",
        "CWE-401",
        "CWE-606",
        "CWE-789",
        "CWE-510",
        "CWE-401",
        "CWE-401",
        "CWE-121",
        "CWE-401",
        "CWE-126",
        "CWE-126",
        "CWE-123",
        "CWE-690",
        "CWE-121",
        "CWE-758",
        "CWE-127",
        "CWE-126",
        "CWE-617",
        "CWE-126",
        "CWE-127",
        "CWE-124",
        "CWE-680",
        "CWE-758",
        "CWE-121",
        "CWE-126",
        "CWE-121",
        "CWE-606",
        "CWE-617",
        "CWE-122",
        "CWE-126",
        "CWE-427",
        "CWE-122",
        "CWE-617",
        "CWE-665",
        "CWE-78",
        "CWE-127",
        "CWE-401",
        "CWE-427",
        "CWE-127",
        "CWE-401",
        "CWE-617",
        "CWE-690",
        "CWE-121",
        "CWE-416",
        "CWE-427",
        "CWE-457",
        "CWE-124",
        "CWE-680",
        "CWE-127",
        "CWE-506",
        "CWE-680",
        "CWE-606",
        "CWE-401",
        "CWE-789",
        "CWE-123",
        "CWE-124",
        "CWE-665",
        "CWE-121",
        "CWE-590",
        "CWE-690",
        "CWE-680",
        "CWE-590",
        "CWE-401",
        "CWE-606",
        "CWE-122",
        "CWE-427",
        "CWE-590",
        "CWE-758",
        "CWE-78",
        "CWE-789",
        "CWE-457",
        "CWE-426",
        "CWE-123",
        "CWE-427",
        "CWE-123",
        "CWE-606",
        "CWE-761",
        "CWE-789",
        "CWE-475",
        "CWE-121",
        "CWE-758",
        "CWE-121",
        "CWE-124",
        "CWE-761",
        "CWE-127",
        "CWE-789",
        "CWE-121",
        "CWE-590",
        "CWE-666",
        "CWE-457",
        "CWE-121",
        "CWE-126",
        "CWE-416",
        "CWE-690",
        "CWE-78",
        "CWE-761",
        "CWE-680",
        "CWE-606",
        "CWE-415",
        "CWE-606",
        "CWE-590",
        "CWE-78",
        "CWE-665",
        "CWE-427",
        "CWE-606",
        "CWE-690",
        "CWE-761",
        "CWE-401",
        "CWE-606",
        "CWE-126",
        "CWE-789",
        "CWE-761",
        "CWE-690",
        "CWE-789",
        "CWE-789",
        "CWE-789",
        "CWE-427",
        "CWE-690",
        "CWE-761",
        "CWE-123",
        "CWE-665",
        "CWE-789",
        "CWE-127",
        "CWE-758",
        "CWE-427",
        "CWE-124",
        "CWE-122",
        "CWE-122",
        "CWE-606",
        "CWE-122",
        "CWE-123",
        "CWE-122",
        "CWE-457",
        "CWE-78",
        "CWE-124",
        "CWE-758",
        "CWE-789",
        "CWE-127",
        "CWE-617",
        "CWE-680",
        "CWE-475",
        "CWE-127",
        "CWE-122",
        "CWE-789",
        "CWE-761",
        "CWE-124",
        "CWE-124",
        "CWE-121",
        "CWE-121",
        "CWE-506",
        "CWE-121",
        "CWE-122",
        "CWE-680",
        "CWE-124",
        "CWE-606",
        "CWE-617",
        "CWE-123",
        "CWE-123",
        "CWE-690",
        "CWE-121",
        "CWE-126",
        "CWE-457",
        "CWE-590",
        "CWE-401",
        "CWE-121",
        "CWE-122",
        "CWE-78",
        "CWE-690",
        "CWE-666",
        "CWE-606",
        "CWE-427",
        "CWE-126",
        "CWE-127",
        "CWE-416",
        "CWE-665",
        "CWE-126",
        "CWE-122",
        "CWE-121",
        "CWE-690",
        "CWE-121",
        "CWE-665",
        "CWE-789",
        "CWE-78",
        "CWE-122",
        "CWE-134",
        "CWE-690",
        "CWE-78",
        "CWE-124",
        "CWE-122",
        "CWE-78",
        "CWE-78",
        "CWE-680",
        "CWE-761",
        "CWE-510",
        "CWE-467",
        "CWE-758",
        "CWE-78",
        "CWE-506",
        "CWE-475",
        "CWE-121",
        "CWE-789",
        "CWE-427",
        "CWE-680",
        "CWE-122",
        "CWE-124",
        "CWE-127",
        "CWE-122",
        "CWE-78",
        "CWE-78",
        "CWE-427",
        "CWE-401",
        "CWE-121",
        "CWE-124",
        "CWE-121",
        "CWE-761",
        "CWE-789",
        "CWE-122",
        "CWE-590",
        "CWE-590",
        "CWE-606",
        "CWE-510",
        "CWE-127",
        "CWE-127",
        "CWE-665",
        "CWE-606",
        "CWE-606",
        "CWE-127",
        "CWE-401",
        "CWE-123",
        "CWE-457",
        "CWE-789",
        "CWE-126",
        "CWE-690",
        "CWE-690",
        "CWE-510",
        "CWE-758",
        "CWE-617",
        "CWE-78",
        "CWE-427",
        "CWE-401",
        "CWE-121",
        "CWE-78",
        "CWE-127",
        "CWE-124",
        "CWE-690",
        "CWE-127",
        "CWE-123",
        "CWE-127",
        "CWE-789",
        "CWE-427",
        "CWE-427",
        "CWE-690",
        "CWE-127",
        "CWE-761",
        "CWE-758",
        "CWE-467",
        "CWE-590",
        "CWE-758",
        "CWE-122",
        "CWE-690",
        "CWE-401",
        "CWE-665",
        "CWE-134",
        "CWE-127",
        "CWE-690",
        "CWE-789",
        "CWE-606",
        "CWE-122",
        "CWE-124",
        "CWE-126",
        "CWE-467",
        "CWE-123",
        "CWE-126",
        "CWE-122",
        "CWE-427",
        "CWE-761",
        "CWE-789",
        "CWE-401",
        "CWE-126",
        "CWE-127",
        "CWE-127",
        "CWE-761",
        "CWE-122",
        "CWE-126",
        "CWE-590",
        "CWE-761",
        "CWE-789",
        "CWE-690",
        "CWE-121",
        "CWE-126",
        "CWE-665",
        "CWE-427",
        "CWE-617",
        "CWE-122",
        "CWE-124",
        "CWE-690",
        "CWE-121",
        "CWE-124",
        "CWE-680",
        "CWE-127",
        "CWE-126",
        "CWE-789",
        "CWE-126",
        "CWE-401",
        "CWE-127",
        "CWE-680",
        "CWE-427",
        "CWE-758",
        "CWE-123",
        "CWE-78",
        "CWE-124",
        "CWE-78",
        "CWE-606",
        "CWE-680",
        "CWE-690",
        "CWE-78",
        "CWE-121",
        "CWE-126",
        "CWE-606",
        "CWE-758",
        "CWE-401",
        "CWE-123",
        "CWE-122",
        "CWE-78",
        "CWE-127",
        "CWE-761",
        "CWE-124",
        "CWE-606",
        "CWE-427",
        "CWE-690",
        "CWE-122",
        "CWE-121",
        "CWE-427",
        "CWE-426",
        "CWE-124",
        "CWE-680",
        "CWE-124",
        "CWE-758",
        "CWE-78",
        "CWE-124",
        "CWE-680",
        "CWE-761",
        "CWE-690",
        "CWE-680",
        "CWE-590",
        "CWE-761",
        "CWE-590",
        "CWE-690",
        "CWE-680",
        "CWE-606",
        "CWE-124",
        "CWE-680",
        "CWE-427",
        "CWE-680",
        "CWE-126",
        "CWE-680",
        "CWE-690",
        "CWE-789",
        "CWE-606",
        "CWE-680",
        "CWE-617",
        "CWE-680",
        "CWE-427",
        "CWE-666",
        "CWE-789",
        "CWE-606",
        "CWE-761",
        "CWE-78",
        "CWE-126",
        "CWE-758",
        "CWE-78",
        "CWE-427",
        "CWE-122",
        "CWE-126",
        "CWE-690",
        "CWE-758",
        "CWE-426",
        "CWE-427",
        "CWE-124",
        "CWE-124",
        "CWE-758"
    ]
}