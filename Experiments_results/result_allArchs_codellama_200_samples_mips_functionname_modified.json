{
    "decompcode": [
        "\nvoid func_801fd07ae3ee4d9c(void)\n\n{\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined2 uStack_74;\n  undefined auStack_70 [49];\n  undefined uStack_3f;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x41,0x31);\n  uStack_3f = 0;\n  uStack_a4 = 0;\n  uStack_a0 = 0;\n  uStack_9c = 0;\n  uStack_98 = 0;\n  uStack_94 = 0;\n  uStack_90 = 0;\n  uStack_8c = 0;\n  uStack_88 = 0;\n  uStack_84 = 0;\n  uStack_80 = 0;\n  uStack_7c = 0;\n  uStack_78 = 0;\n  uStack_74 = 0;\n  (*(code *)PTR_strcpy_00412070)(&uStack_a4,auStack_70);\n  func_5dd5e452221f4f54(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3b6eb7c0b5a84066(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  iVar1 = (*(code *)PTR_rand_00412060)();\n  iVar2 = (*(code *)PTR_rand_00412060)();\n  uVar3 = (*(code *)PTR_rand_00412060)();\n  func_074967ef81b7470e\n            (iVar1 << 0x1e ^ iVar2 << 0xf ^ uVar3);\n  return;\n}\n\n",
        "\nvoid func_6166e2bda57049ca\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412074)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_82573a79895e4dbe(puVar1);\n  func_037d89ab26d74032(puVar1);\n  return;\n}\n\n",
        "\nvoid func_e2770a56ccab46f2(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400a74. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011b0,5);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_018181c008a9409b(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined auStack_68 [84];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_70 = _UNK_00401508;\n  uStack_78 = _UNK_00401500;\n  uStack_74 = _UNK_00401504;\n  uStack_6c = _UNK_0040150c;\n  (*(code *)PTR_memset_00412080)(auStack_68,0,0x54);\n  if ((*(int *)PTR_globalFive_00412040 == 5) &&\n     (iVar2 = (*(code *)PTR_socket_0041206c)(2,2,6), iVar2 != -1)) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_00412064)(&UNK_004014c4);\n    uStack_88 = func_e6450fbe27f24795(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412060)(iVar2,&uStack_88,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_recv_0041205c)(iVar2,(int)&uStack_6c + 3,0x54,0);\n      if (1 < iVar3 + 1U) {\n        auStack_68[iVar3 + -1] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412058)(iVar2);\n  }\n  iVar2 = (*(code *)PTR_popen_00412074)(&uStack_78,&UNK_004014d0);\n  if (iVar2 != 0) {\n    (*(code *)PTR_pclose_00412050)();\n  }\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n    if (iVar2 == 0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400cf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412094)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_3cc1ad3bcdcc4e0e(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x1a0) =\n         (undefined *)((int)register0x00000074 + -0x19c);\n    *(undefined **)((int)register0x00000074 + -0x1a8) = &_gp;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0x19c) = 0;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = *(undefined4 *)PTR___stack_chk_guard_0041208c;\n    func_057e5e0253ee4fc3\n              ((undefined *)((int)register0x00000074 + -0x1a0));\n    if (*(int *)((int)register0x00000074 + -0xc) == *(int *)puVar1) break;\n    unaff_retaddr = CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_ncpy_63_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1a8) + -0x7f9c))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1b8);\n  }\n  return;\n}\n\n",
        "\nvoid func_a5faa34a77224098(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_dc [100];\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar2 = (*(code *)PTR_strlen_0041206c)(auStack_78);\n  iVar3 = (*(code *)PTR___strncat_chk_00412054)(auStack_dc,auStack_78,uVar2,100);\n  func_e9f90283086f4337();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_a2c26d620e4b477b(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  uint uStack_18;\n  uint uStack_14;\n  uint uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_18 = 0;\n  iVar4 = func_7ea16e31f82249c2();\n  if (iVar4 == 0) {\n    uStack_18 = 0x14;\n  }\n  else {\n    (*(code *)PTR___isoc99_fscanf_00412090)\n              (*(undefined4 *)PTR_stdin_00412060,&UNK_00401b30,&uStack_18);\n  }\n  iVar4 = func_7ea16e31f82249c2();\n  if (iVar4 == 0) {\n    if ((uStack_18 < 6) || (99 < uStack_18)) {\n      func_232874dd6d014ed2(&UNK_00401b70);\n    }\n    else {\n      uStack_14 = (*(code *)PTR_malloc_00412070)(uStack_18);\n      uVar3 = _UNK_00401b34;\n      uVar1 = uStack_14 & 3;\n      *(uint *)(uStack_14 - uVar1) =\n           *(uint *)(uStack_14 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401b34 >> uVar1 * 8;\n      uVar1 = uStack_14 + 3 & 3;\n      puVar2 = (uint *)((uStack_14 + 3) - uVar1);\n      *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n      *(undefined *)(uStack_14 + 4) = UNK_00401b38;\n      *(undefined *)(uStack_14 + 5) = UNK_00401b39;\n      func_232874dd6d014ed2(uStack_14);\n      (*(code *)PTR_free_00412088)(uStack_14);\n    }\n  }\n  else if (uStack_18 < 6) {\n    func_232874dd6d014ed2(&UNK_00401b3c);\n  }\n  else {\n    uStack_10 = (*(code *)PTR_malloc_00412070)(uStack_18);\n    uVar3 = _UNK_00401b34;\n    uVar1 = uStack_10 & 3;\n    *(uint *)(uStack_10 - uVar1) =\n         *(uint *)(uStack_10 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401b34 >> uVar1 * 8;\n    uVar1 = uStack_10 + 3 & 3;\n    puVar2 = (uint *)((uStack_10 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    *(undefined *)(uStack_10 + 4) = UNK_00401b38;\n    *(undefined *)(uStack_10 + 5) = UNK_00401b39;\n    func_232874dd6d014ed2(uStack_10);\n    (*(code *)PTR_free_00412088)(uStack_10);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_b050f6002f424715(void)\n\n{\n  undefined4 uStack_338;\n  undefined4 uStack_334;\n  undefined *puStack_18;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_18 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_10 = &uStack_338;\n  uStack_338 = 0;\n  uStack_334 = 0;\n  func_dea9c91b56224b64(puStack_10);\n  if (iStack_c != **(int **)(puStack_18 + -0x7fa0)) {\n    (**(code **)(puStack_18 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nundefined4\nfunc_3f29ee871b9e4abf\n          (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (*(int *)\n       PTR_CWE78_OS_Command_Injection__wchar_t_connect_socket_popen_22_goodG2B1Global_00413040 == 0)\n  {\n    (*(code *)PTR_wcscat_00413068)(param_1,&UNK_00401e28,param_3,param_4,&_gp);\n  }\n  else {\n    func_0dafff89330a4260(&UNK_00401e10);\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_fa3cf19cad3f4fa4(void)\n\n{\n  int iVar1;\n  undefined auStack_19c [64];\n  undefined auStack_15c [336];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memcpy_00412094)(auStack_19c,&UNK_00401c34,0x40);\n  (*(code *)PTR_memset_0041206c)(auStack_15c,0,0x150);\n  if (*(int *)PTR_globalTrue_00412048 != 0) {\n    (*(code *)PTR_wcscat_00412060)(auStack_19c,&UNK_00401c18);\n  }\n  iVar1 = (*(code *)PTR_popen_00412064)(auStack_19c,&UNK_00401c28);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_00412054)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_d7d26bc622804abe(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *unaff_s1;\n  undefined auStack_b8 [56];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    unaff_s1 = auStack_b8;\n    auStack_b8[0] = 0;\n  }\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fa4))(unaff_s1,uVar2);\n  func_0bf53f92caa349f7();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa0))();\n  if (unaff_s1 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ee126839142d46bc(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_malloc_00412070)(4);\n  func_de48a6b6313a424f(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_51bbf994520c4e71(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_0041205c)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  if (**(int **)(puVar1 + -0x7fe0) == 5) {\n    puStack_78 = puStack_74 + -8;\n  }\n  (**(code **)(puVar1 + -0x7fc4))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7f9c))(puStack_78,auStack_70,100);\n  puStack_78[99] = 0;\n  func_2b88b6f521074ff1(puStack_78);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa0)) {\n    (**(code **)(puStack_80 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf1d1c3f39064f57(void)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int *piVar3;\n  int aiStack_1a4 [100];\n  int aiStack_14 [2];\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  piVar3 = aiStack_1a4;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412080;\n  piVar2 = piVar3;\n  do {\n    *piVar2 = 5;\n    piVar2 = piVar2 + 1;\n  } while (piVar2 != aiStack_14);\n  func_3f3338e4b7dc4867(aiStack_1a4[0]);\n  (*(code *)PTR_free_00412084)();\n  if (aiStack_14[0] == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (piVar3 != (int *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d1c40671ba5948d3(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  ushort uStack_74;\n  undefined auStack_70 [49];\n  undefined uStack_3f;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    (*(code *)PTR_memset_00412060)(auStack_70,0x41,0x31);\n    uStack_3f = 0;\n  }\n  else {\n    func_3cfa131de4344f97(&UNK_00401b80);\n  }\n  uStack_a4 = 0;\n  uStack_a0 = 0;\n  uStack_9c = 0;\n  uStack_98 = 0;\n  uStack_94 = 0;\n  uStack_90 = 0;\n  uStack_8c = 0;\n  uStack_88 = 0;\n  uStack_84 = 0;\n  uStack_80 = 0;\n  uStack_7c = 0;\n  uStack_78 = 0;\n  uStack_74 = 0;\n  uVar1 = (*(code *)PTR_strlen_00412068)(auStack_70);\n  (*(code *)PTR_strncat_00412050)(&uStack_a4,auStack_70,uVar1);\n  uStack_74 = uStack_74 & 0xff00;\n  func_3cfa131de4344f97(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c37be67ed7ac4324(void)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  int iVar1;\n  undefined1 *puVar2;\n  \n  iVar1 = func_369851928ab44af4();\n  if (iVar1 != 0) {\n    puVar2 = dataBuffer_0;\n    do {\n      *(undefined4 *)puVar2 = 5;\n      puVar2 = (undefined1 *)((int)puVar2 + 4);\n    } while ((undefined4 *)puVar2 != &globalArgv);\n    func_45665622b1a94d96(dataBuffer_0._0_4_);\n                    /* WARNING: Could not recover jumptable at 0x00400a84. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412088)(dataBuffer_0);\n    return;\n  }\n                    /* WARNING: Treating indirect jump as call */\n  UNRECOVERED_JUMPTABLE = (code *)func_8b46ab14c5e04b8c(0);\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
        "\nvoid func_a0d1819cf271451a(void)\n\n{\n  char *pcVar1;\n  char cVar2;\n  undefined *puVar3;\n  char *pcVar4;\n  undefined *puVar5;\n  int iVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar3 = PTR___stack_chk_guard_004120a0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  pcVar4 = (char *)(*(code *)PTR_malloc_0041208c)(100);\n  puVar8 = (undefined *)0x2;\n  *pcVar4 = '\\0';\n  puVar5 = (undefined *)(*(code *)PTR_socket_00412060)(2,2,6);\n  if (puVar5 != (undefined *)0xffffffff) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c = 0x26987;\n    iVar6 = (*(code *)PTR_bind_00412078)(puVar5,&uStack_2c,0x10);\n    if (((iVar6 == -1) || (iVar6 = (*(code *)PTR_listen_00412068)(puVar5,5), iVar6 == -1)) ||\n       (puVar8 = (undefined *)(*(code *)PTR_accept_00412094)(puVar5,0,0),\n       puVar8 == (undefined *)0xffffffff)) {\n      (*(code *)PTR_close_00412054)();\n      puVar8 = puVar5;\n    }\n    else {\n      iVar6 = (*(code *)PTR_recv_00412058)(puVar8,pcVar4,99,0);\n      puVar7 = PTR_strchr_0041207c;\n      if (1 < iVar6 + 1U) {\n        pcVar4[iVar6] = '\\0';\n        puVar7 = (undefined *)(*(code *)puVar7)(pcVar4,0xd);\n        if (puVar7 != (undefined *)0x0) {\n          *puVar7 = 0;\n        }\n        puVar7 = (undefined *)(*(code *)PTR_strchr_0041207c)(pcVar4,10);\n        if (puVar7 != (undefined *)0x0) {\n          *puVar7 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(puVar5);\n      (*(code *)PTR_close_00412054)();\n    }\n  }\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    if (iStack_1c == *(int *)puVar3) {\n      return;\n    }\n  }\n  else {\n    cVar2 = *pcVar4;\n    while (cVar2 != '\\0') {\n      puVar8 = (undefined *)0x400000;\n      if (cVar2 == 'S') {\n        puVar8 = &UNK_00401504;\n        func_712b85f6c03e4534();\n        break;\n      }\n      pcVar1 = pcVar4 + 1;\n      pcVar4 = pcVar4 + 1;\n      cVar2 = *pcVar1;\n    }\n    if (iStack_1c == *(int *)puVar3) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_004120a4)(pcVar4);\n      return;\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412098)();\n  if (puVar8 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_0445cc9cad044dd6(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_0041206c)(4);\n  uVar2 = *puVar1;\n  (*(code *)PTR_free_00412084)(puVar1);\n  func_7c80212dd7cf409a(uVar2);\n  return;\n}\n\n",
        "\nvoid func_09261645340d403e(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_b8 [56];\n  undefined *puStack_80;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_80 = &_gp;\n  puVar3 = auStack_b8;\n  auStack_b8[0] = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (**(code **)(puStack_80 + -0x7fc4))(puVar3,uVar2,0x32);\n  func_5a487ea418174265();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa0))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_733478d1a9aa406a(void)\n\n{\n  int iVar1;\n  undefined4 uStack_3c;\n  int iStack_38;\n  int iStack_34;\n  int iStack_30;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_3c = 0xffffffff;\n  iStack_34 = 0xffffffff;\n  iStack_38 = -1;\n  iStack_34 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iStack_34 != -1) {\n    (*(code *)PTR_memset_00412074)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = 0;\n    uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar1 = (*(code *)PTR_bind_0041207c)(iStack_34,&uStack_2c,0x10);\n    if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_0041206c)(iStack_34,5), iVar1 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412090)(iStack_34,0,0), iStack_38 != -1)) &&\n       ((iStack_30 = (*(code *)PTR_recv_0041205c)(iStack_38,auStack_1c,0xd,0), iStack_30 != -1 &&\n        (iStack_30 != 0)))) {\n      auStack_1c[iStack_30] = 0;\n      uStack_3c = (*(code *)PTR_atoi_00412068)(auStack_1c);\n    }\n  }\n  if (iStack_34 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_34);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_2f302ece29894839(&uStack_3c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ec47b9acf15845d6(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  undefined *puVar6;\n  undefined *unaff_s1;\n  undefined4 unaff_s2;\n  undefined *unaff_s3;\n  int unaff_s4;\n  int unaff_s5;\n  int iVar7;\n  undefined *puVar8;\n  code *pcVar9;\n  undefined auStack_1c0 [16];\n  undefined *puStack_1b0;\n  undefined4 *puStack_1a4;\n  int iStack_1a0;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  puVar6 = PTR___stack_chk_guard_004120a8;\n  puVar8 = auStack_1c0;\n  puStack_1b0 = &_gp;\n  uStack_19c = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  (*(code *)PTR_memset_0041207c)(auStack_198,0,0x18c);\n  puStack_1a4 = &uStack_19c;\n  (**(code **)(puStack_1b0 + -0x7f98))(puStack_1a4,&UNK_00401644,100);\n  CWE606_Unchecked_Loop_Condition__wchar_t_listen_socket_45_func_ec47b9acf15845d6Data = puStack_1a4;\n  iVar2 = (**(code **)(puStack_1b0 + -0x7f88))(puStack_1a4,&UNK_00401650,&iStack_1a0);\n  if (iVar2 == 1) {\n    if (iStack_1a0 < 1) {\n      iStack_1a0 = 0;\n    }\n    func_36a89f4fd7ac4d82(iStack_1a0);\n  }\n  if (iStack_c == *(int *)puVar6) {\n    return;\n  }\n  pcVar9 = goodB2G;\n  (**(code **)(puStack_1b0 + -0x7f80))();\n  do {\n    puVar1 = PTR___stack_chk_guard_004120a8;\n    *(undefined **)(puVar8 + -0x18) = unaff_s1;\n    *(code **)(puVar8 + -4) = pcVar9;\n    *(int *)(puVar8 + -0xc) = unaff_s4;\n    *(undefined **)(puVar8 + -0x10) = unaff_s3;\n    unaff_s3 = puVar8 + -0x1b4;\n    *(undefined4 *)(puVar8 + -0x14) = unaff_s2;\n    unaff_s2 = 0xffffffff;\n    *(undefined **)(puVar8 + -0x1d0) = &_gp;\n    *(int *)(puVar8 + -8) = unaff_s5;\n    *(undefined **)(puVar8 + -0x1c) = puVar6;\n    *(undefined4 *)(puVar8 + -0x1b4) = 0;\n    *(undefined4 *)(puVar8 + -0x24) = *(undefined4 *)PTR___stack_chk_guard_004120a8;\n    (*(code *)PTR_memset_0041207c)(puVar8 + -0x1b0,0,0x18c);\n    unaff_s4 = (**(code **)(*(int *)(puVar8 + -0x1d0) + -0x7fa8))(unaff_s3);\n    puVar3 = (undefined *)(**(code **)(*(int *)(puVar8 + -0x1d0) + -0x7fc0))(2,2,6);\n    iVar2 = *(int *)(puVar8 + -0x1d0);\n    if (puVar3 != (undefined *)0xffffffff) {\n      pcVar9 = *(code **)(iVar2 + -0x7f9c);\n      *(undefined4 *)(puVar8 + -0x1c0) = 0;\n      *(undefined4 *)(puVar8 + -0x1bc) = 0;\n      *(undefined4 *)(puVar8 + -0x1b8) = 0;\n      *(undefined4 *)(puVar8 + -0x1c4) = 0x26987;\n      iVar2 = (*pcVar9)(puVar3,puVar8 + -0x1c4,0x10);\n      iVar7 = *(int *)(puVar8 + -0x1d0);\n      puVar6 = puVar3;\n      if (iVar2 != -1) {\n        iVar2 = (**(code **)(iVar7 + -0x7fb8))(puVar3,5);\n        iVar7 = *(int *)(puVar8 + -0x1d0);\n        if (iVar2 != -1) {\n          unaff_s5 = (**(code **)(iVar7 + -0x7f84))(puVar3,0,0);\n          iVar7 = *(int *)(puVar8 + -0x1d0);\n          if (unaff_s5 != -1) {\n            uVar4 = (**(code **)(iVar7 + -0x7fc8))\n                              (unaff_s5,unaff_s3 + unaff_s4 * 4,(99 - unaff_s4) * 4,0);\n            iVar2 = *(int *)(puVar8 + -0x1d0);\n            if (1 < uVar4 + 1) {\n              pcVar9 = *(code **)(iVar2 + -0x7fb4);\n              *(undefined4 *)(puVar8 + ((uVar4 >> 2) + unaff_s4) * 4 + -0x1b4) = 0;\n              puVar5 = (undefined4 *)(*pcVar9)(unaff_s3,0xd);\n              iVar2 = *(int *)(puVar8 + -0x1d0);\n              if (puVar5 != (undefined4 *)0x0) {\n                *puVar5 = 0;\n              }\n              puVar5 = (undefined4 *)(**(code **)(iVar2 + -0x7fb4))(unaff_s3,10);\n              iVar2 = *(int *)(puVar8 + -0x1d0);\n              if (puVar5 != (undefined4 *)0x0) {\n                *puVar5 = 0;\n              }\n            }\n            (**(code **)(iVar2 + -0x7fcc))(puVar3);\n            (**(code **)(*(int *)(puVar8 + -0x1d0) + -0x7fcc))(unaff_s5);\n            iVar2 = *(int *)(puVar8 + -0x1d0);\n            goto code_r0x00400c70;\n          }\n        }\n      }\n      (**(code **)(iVar7 + -0x7fcc))(puVar3);\n      iVar2 = *(int *)(puVar8 + -0x1d0);\n    }\ncode_r0x00400c70:\n    CWE606_Unchecked_Loop_Condition__wchar_t_listen_socket_45_goodB2GData = unaff_s3;\n    iVar2 = (**(code **)(iVar2 + -0x7f88))(unaff_s3,&UNK_00401650,puVar8 + -0x1c8);\n    iVar7 = *(int *)(puVar8 + -0x1d0);\n    if (iVar2 == 1) {\n      iVar2 = *(int *)(puVar8 + -0x1c8);\n      if (iVar2 < 10000) {\n        if (iVar2 < 1) {\n          iVar2 = 0;\n        }\n        func_36a89f4fd7ac4d82(iVar2);\n        iVar7 = *(int *)(puVar8 + -0x1d0);\n      }\n    }\n    if (*(int *)(puVar8 + -0x24) == *(int *)puVar1) {\n      return;\n    }\n    pcVar9 = CWE606_Unchecked_Loop_Condition__wchar_t_listen_socket_45_good;\n    (**(code **)(iVar7 + -0x7f80))();\n    *(code **)(puVar8 + -0x1e4) = pcVar9;\n    func_ec47b9acf15845d6();\n    pcVar9 = *(code **)(puVar8 + -0x1e4);\n    puVar8 = puVar8 + -0x1e0;\n    unaff_s1 = puVar1;\n  } while( true );\n}\n\n",
        "\nvoid func_0b84be91b97e4ca6\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_realloc_00412070)(0,4,param_3,param_4,&_gp);\n  func_812f86d264214422(uVar1);\n  return;\n}\n\n",
        "\nvoid func_89bd8bda350b4160(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412094;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401bb0);\n    uStack_1a = (*(code *)PTR_htons_00412088)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412058)(iVar1,&uStack_1c,0x10);\n    if (iVar2 != -1) {\n      (*(code *)PTR_recv_00412054)(iVar1,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412050)(iVar1);\n  }\n  func_380855cd7ceb42f5(ppppuStack_2c,ppppuStack_28);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412094) {\n    (*(code *)PTR___stack_chk_fail_0041208c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_6b1d14f33e7a47c9(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_dc [26];\n  undefined uStack_71;\n  undefined4 auStack_70 [4];\n  undefined2 uStack_60;\n  undefined auStack_5e [81];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_dc + 2,0x41,99);\n  puVar6 = auStack_70;\n  uStack_71 = 0;\n  puVar4 = auStack_dc;\n  puVar2 = puVar6;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_dc + 0x18);\n  *(undefined2 *)(puVar5 + 4) = *(undefined2 *)puVar4;\n  *(undefined *)((int)puVar5 + 0x12) = *(undefined *)((int)puVar3 + 0x12);\n  uStack_d = 0;\n  func_8fb83bf8f6f74c30();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412078)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_ca9dcaa010e94cfe(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined auStack_48 [52];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iVar3 = *(int *)(param_1 + 8);\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR___strcpy_chk_00412060)(auStack_48,iVar3,0x32);\n  iVar2 = iVar3;\n  func_1bc4dec965ba48c0();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400af8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412090)(iVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b958b7702cd046c1(void)\n\n{\n  CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_68_func_b958b7702cd046c1Data =\n       (undefined *)(*(code *)PTR_malloc_00412074)(100);\n  *CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_68_func_b958b7702cd046c1Data = 0;\n  func_b20252ae248a4db2();\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400d78) */\n\nvoid func_8e633a86c5864b82(void)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  \n  func_40231d93a8a44147();\n  func_40231d93a8a44147();\n  uVar1 = (*(code *)PTR_wcslen_00412068)(&UNK_004015cc);\n  if (0x13 < uVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400d70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412084)();\n    return;\n  }\n  uVar2 = (*(code *)PTR_malloc_00412088)(0x50);\n  (*(code *)PTR___wcscpy_chk_00412074)(uVar2,&UNK_004015cc,0x14);\n  func_7a2be71602db4bf6(uVar2);\n                    /* WARNING: Could not recover jumptable at 0x00400d30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_004120a4)(uVar2);\n  return;\n}\n\n",
        "\nvoid func_c8008973eba8486f(void)\n\n{\n  undefined *puVar1;\n  uint uStack_74;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puVar1 = (undefined *)(*(code *)PTR_malloc_0041206c)(100);\n  *puVar1 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  auStack_70[99] = 0;\n  for (uStack_74 = 0; uStack_74 < 100; uStack_74 = uStack_74 + 1) {\n    puVar1[uStack_74] = auStack_70[uStack_74];\n  }\n  puVar1[99] = 0;\n  func_1d2d211406394bd1(puVar1);\n  (*(code *)PTR_free_00412084)(puVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_febef66aea124577(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  code *pcVar2;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412088;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    unaff_s0 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0x348) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x334) = 0;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412088\n    ;\n    (*(code *)PTR_wmemset_0041205c)(unaff_s0,0x43,99);\n    *(undefined **)((int)register0x00000074 + -0x33c) =\n         (undefined *)((int)register0x00000074 + -0x334);\n    pcVar2 = *(code **)(*(int *)((int)register0x00000074 + -0x348) + -0x7fb4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    (*pcVar2)((undefined *)((int)register0x00000074 + -0x334),unaff_s0,100);\n    func_ccbb9956f0d64aa5(*(undefined4 *)((int)register0x00000074 + -0x33c));\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_01_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x348) + -0x7fa0))();\n    unaff_s1 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x358);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400bc8) */\n\nvoid func_51993036a4494a14(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_e48bcd1527b14aae(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400af8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_31f296ad144b4daf(int param_1,int *param_2)\n\n{\n  linkedListPrev = param_2;\n  linkedListNext = param_1;\n  *param_2 = param_1;\n  *(int **)(linkedListNext + 4) = linkedListPrev;\n  return;\n}\n\n",
        "\nvoid func_34bf594b9b9446ca(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_30 [36];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_memcpy_00412090)(auStack_30,&UNK_00401b20,0x24);\n  uVar1 = (*(code *)PTR_wcsdup_00412060)(auStack_30);\n  func_23af0024b0f64ead(uVar1);\n  func_45d170885e2040f2(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_dd5ac1ff01d64395(void)\n\n{\n  return;\n}\n\n",
        "\nint func_288120e969d649c7(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = (*(code *)PTR_wcslen_00413060)(param_1);\n  if (1 < 0xfaU - iVar1) {\n    iVar2 = (*(code *)PTR_fgetws_00413084)\n                      (param_1 + iVar1 * 4,0xfa - iVar1,*(undefined4 *)PTR_stdin_0041306c);\n    if (iVar2 == 0) {\n      func_3f5912d33cd44a16(&UNK_00401bb0);\n      *(undefined4 *)(param_1 + iVar1 * 4) = 0;\n    }\n    else {\n      iVar1 = (*(code *)PTR_wcslen_00413060)(param_1);\n      if ((iVar1 != 0) && (*(int *)(param_1 + (iVar1 + 0x3fffffff) * 4) == 10)) {\n        *(undefined4 *)(param_1 + (iVar1 + 0x3fffffff) * 4) = 0;\n      }\n    }\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_e20081e1e8a04186\n               (undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uStack_d4;\n  undefined auStack_d0 [192];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uVar1 = *param_1;\n  uStack_d4 = 0;\n  (*(code *)PTR_memset_0041206c)(auStack_d0,0,0xc4);\n  uVar2 = (*(code *)PTR_wcslen_00412068)(uVar1);\n  (*(code *)PTR_wcsncat_00412058)(&uStack_d4,uVar1,uVar2);\n  uStack_10 = 0;\n  func_cbd17ea4a66f4689(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fa8c0651d7d04bd8\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = (*(code *)PTR_calloc_00412054)(100,8,param_3,param_4,&_gp);\n  func_eb361fac51e14ace(uVar1);\n  return;\n}\n\n",
        "\nvoid func_f397a550bea448fe(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_d4 [199];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = *(undefined4 *)PTR_CWE127_Buffer_Underread__char_alloca_cpy_68_badData_00412040;\n  (*(code *)PTR_memset_00412060)(auStack_d4,0x43,199);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412078)(auStack_d4,uVar1);\n  func_4106c15c638545fa(auStack_d4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_acbc35fc9e4f4862(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_38;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  uStack_38 = 0xffffffff;\n  iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401d50);\n    uStack_2a = (*(code *)PTR_htons_00412098)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStack_38 = (*(code *)PTR_atoi_00412070)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  func_751705ca52174711(uStack_38);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_e38ac5bddb834d13(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  if (staticTrue != 0) {\n    uVar9 = (*(code *)PTR_malloc_00412078)(0x18);\n    *(undefined **)(uVar9 + 0x10) = &UNK_00401960;\n    func_ed954556a0bb438c(*(undefined4 *)(uVar9 + 0x10));\n    uVar8 = _UNK_00401974;\n    uVar7 = _UNK_00401970;\n    uVar6 = _UNK_0040196c;\n    uVar5 = _UNK_00401968;\n    uVar4 = _UNK_00401964;\n    uVar3 = _UNK_00401960;\n    uVar1 = uVar9 & 3;\n    *(uint *)(uVar9 - uVar1) =\n         *(uint *)(uVar9 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401960 >> uVar1 * 8;\n    uVar1 = uVar9 + 3 & 3;\n    puVar2 = (uint *)((uVar9 + 3) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 4 & 3;\n    puVar2 = (uint *)((uVar9 + 4) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n    uVar1 = uVar9 + 7 & 3;\n    puVar2 = (uint *)((uVar9 + 7) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 8 & 3;\n    puVar2 = (uint *)((uVar9 + 8) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar5 >> uVar1 * 8;\n    uVar1 = uVar9 + 0xb & 3;\n    puVar2 = (uint *)((uVar9 + 0xb) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar5 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0xc & 3;\n    puVar2 = (uint *)((uVar9 + 0xc) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar6 >> uVar1 * 8;\n    uVar1 = uVar9 + 0xf & 3;\n    puVar2 = (uint *)((uVar9 + 0xf) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar6 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0x10 & 3;\n    puVar2 = (uint *)((uVar9 + 0x10) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar7 >> uVar1 * 8;\n    uVar1 = uVar9 + 0x13 & 3;\n    puVar2 = (uint *)((uVar9 + 0x13) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar7 << (3 - uVar1) * 8;\n    uVar1 = uVar9 + 0x14 & 3;\n    puVar2 = (uint *)((uVar9 + 0x14) - uVar1);\n    *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar8 >> uVar1 * 8;\n    uVar1 = uVar9 + 0x17 & 3;\n    puVar2 = (uint *)((uVar9 + 0x17) - uVar1);\n    *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar8 << (3 - uVar1) * 8;\n    *(undefined *)(uVar9 + 0xf) = 0;\n    func_ed954556a0bb438c(uVar9);\n    func_ed954556a0bb438c(*(undefined4 *)(uVar9 + 0x10));\n  }\n  return;\n}\n\n",
        "\nvoid func_ebcd1cb696744c27(undefined4 param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_popen_0041205c)(param_1,&UNK_00401ae0);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_00412050)(iVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_1c784fb8b72f4578(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 *puVar5;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    puVar5 = (undefined4 *)0x0;\n  }\n  else {\n    puVar5 = (undefined4 *)(*(code *)PTR_malloc_00412080)(0x32);\n    *(undefined *)((int)puVar5 + 0x31) = 0;\n    *puVar5 = 0x41414141;\n    puVar5[1] = 0x41414141;\n    puVar5[2] = 0x41414141;\n    puVar5[3] = 0x41414141;\n    puVar5[4] = 0x41414141;\n    puVar5[5] = 0x41414141;\n    puVar5[6] = 0x41414141;\n    puVar5[7] = 0x41414141;\n    puVar5[8] = 0x41414141;\n    puVar5[9] = 0x41414141;\n    puVar5[10] = 0x41414141;\n    puVar5[0xb] = 0x41414141;\n    *(undefined *)(puVar5 + 0xc) = 0x41;\n  }\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_0041206c)(uVar2);\n  iVar4 = (*(code *)PTR___memcpy_chk_00412078)(uVar2,puVar5,uVar3,100);\n  uStack_15 = 0;\n  func_16454a7e313146c5();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b3c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(puVar5);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412088)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_def4479e87e342fd(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412080)(8);\n  puVar1[1] = 5;\n  *puVar1 = 0;\n  func_3cac851a1eb240ac(0,5);\n                    /* WARNING: Could not recover jumptable at 0x00400be0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412094)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_5d1a73ca79604b55(void)\n\n{\n  undefined4 auStack_340 [200];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  uint uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_18 = auStack_340;\n  for (uStack_14 = 0; uStack_14 < 100; uStack_14 = uStack_14 + 1) {\n    auStack_340[uStack_14 * 2 + 1] = 5;\n    puStack_18[uStack_14 * 2] = 0;\n  }\n  puStack_10 = puStack_18;\n  func_81c6c81224b142e4(auStack_340[0],auStack_340[1]);\n  (**(code **)(puStack_20 + -0x7fa0))(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_9cea6d8308874a65(void)\n\n{\n  undefined4 uVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    uVar1 = func_d68ad9404644434c(&UNK_00401b40);\n    func_b00bc1cf214142fd(uVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_486e5d2c1fe94db7(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_0041207c)(0x32);\n  (*(code *)PTR_memset_00412064)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  func_9715c3c906f44778(iVar1);\n  return;\n}\n\n",
        "\nvoid func_2b4ea29273604401(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130b0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_0041307c)(auStack_6c,0,0x60);\n  iVar1 = (*(code *)PTR_strlen_00413084)(&uStack_70);\n  iVar2 = (*(code *)PTR_socket_00413074)(2,2,6);\n  if (iVar2 != -1) {\n    (*(code *)PTR_memset_0041307c)(&uStack_80,0,0x10);\n    uStack_80 = 2;\n    uStack_7c = (*(code *)PTR_inet_addr_0041306c)(&UNK_00401f90);\n    uStack_7e = (*(code *)PTR_htons_004130a0)(0x6987);\n    iVar3 = (*(code *)PTR_connect_00413068)(iVar2,&uStack_80,0x10);\n    if (((iVar3 != -1) &&\n        (iVar3 = (*(code *)PTR_recv_00413064)(iVar2,(int)&uStack_70 + iVar1,99 - iVar1,0),\n        iVar3 != -1)) && (iVar3 != 0)) {\n      *(undefined *)((int)&uStack_70 + iVar3 + iVar1) = 0;\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00413088)(&uStack_70,0xd);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n      puVar4 = (undefined *)(*(code *)PTR_strchr_00413088)(&uStack_70,10);\n      if (puVar4 != (undefined *)0x0) {\n        *puVar4 = 0;\n      }\n    }\n  }\n  if (iVar2 != -1) {\n    (*(code *)PTR_close_00413060)(iVar2);\n  }\n  func_bfb624322c624a15(&uStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130b0) {\n    (*(code *)PTR___stack_chk_fail_004130a8)();\n  }\n  return;\n}\n\n",
        "\nvoid func_bd8256a5b8364733(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(0x28);\n  if (*(int *)PTR_globalFive_00412040 != 5) {\n    return;\n  }\n  *puVar1 = 0;\n  puVar1[1] = 1;\n  puVar1[2] = 2;\n  puVar1[3] = 3;\n  puVar1[4] = 4;\n  puVar2 = puVar1;\n  do {\n    puVar3 = puVar2 + 1;\n    func_9d582ad356ca4092(*puVar2);\n    puVar2 = puVar3;\n  } while (puVar1 + 10 != puVar3);\n  return;\n}\n\n",
        "\nvoid func_d48bb6ad5c5f4de2(void)\n\n{\n  undefined *puStack_330;\n  undefined auStack_32c [396];\n  undefined4 uStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_wmemset_0041205c)(auStack_32c,0x41,99);\n  uStack_1a0 = 0;\n  func_0297f973d9614deb();\n  puStack_330 = auStack_32c;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_memmove_00412088)(auStack_19c,puStack_330,400);\n  uStack_10 = 0;\n  func_7338a72f6f4341d1(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ddd474d9a0b245f0(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(0x32);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,0x31);\n  *(undefined *)(iVar1 + 0x31) = 0;\n  func_3a9b3b5d8f4a434a(iVar1);\n  return;\n}\n\n",
        "\nvoid func_6cc3b5341c2c4c45(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined *puVar5;\n  int iStack_38;\n  undefined2 uStack_20;\n  undefined2 uStack_1e;\n  undefined4 uStack_1c;\n  undefined *puStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  puVar1 = (undefined *)(*(code *)PTR_malloc_0041208c)(100);\n  *puVar1 = 0;\n  iStack_38 = -1;\n  iVar2 = (*(code *)PTR_strlen_00412078)(puVar1);\n  iVar3 = (*(code *)PTR_socket_00412060)(2,2,6);\n  if (iVar3 != -1) {\n    (*(code *)PTR_memset_0041206c)(&uStack_20,0,0x10);\n    uStack_20 = 2;\n    uStack_1c = 0;\n    uStack_1e = (*(code *)PTR_htons_0041209c)(0x6987);\n    iVar4 = (*(code *)PTR_bind_00412074)(iVar3,&uStack_20,0x10);\n    if ((((iVar4 != -1) && (iVar4 = (*(code *)PTR_listen_00412064)(iVar3,5), iVar4 != -1)) &&\n        (iStack_38 = (*(code *)PTR_accept_00412094)(iVar3,0,0), iStack_38 != -1)) &&\n       ((iVar4 = (*(code *)PTR_recv_00412058)(iStack_38,puVar1 + iVar2,99 - iVar2,0), iVar4 != -1 &&\n        (iVar4 != 0)))) {\n      puVar1[iVar4 + iVar2] = 0;\n      puVar5 = (undefined *)(*(code *)PTR_strchr_0041207c)(puVar1,0xd);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n      puVar5 = (undefined *)(*(code *)PTR_strchr_0041207c)(puVar1,10);\n      if (puVar5 != (undefined *)0x0) {\n        *puVar5 = 0;\n      }\n    }\n  }\n  if (iVar3 != -1) {\n    (*(code *)PTR_close_00412054)(iVar3);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412054)(iStack_38);\n  }\n  puStack_18 = puVar1;\n  func_c0d20b5416214c00(&uStack_20);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_dd2e47bdea944993(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 uStack_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 uStack_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined uStack_e0;\n  undefined uStack_df;\n  undefined auStack_dc [99];\n  undefined uStack_79;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  uStack_110 = 0x41414141;\n  uStack_10c = 0x41414141;\n  uStack_108 = 0x41414141;\n  uStack_104 = 0x41414141;\n  uStack_100 = 0x41414141;\n  uStack_fc = 0x41414141;\n  uStack_f8 = 0x41414141;\n  uStack_f4 = 0x41414141;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41;\n  uStack_df = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412060)(auStack_dc,0x41,99);\n  uStack_79 = 0;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (*(code *)PTR_strlen_00412068)(uVar2);\n  iVar4 = (*(code *)PTR___memmove_chk_00412074)(uVar2,&uStack_110,uVar3,100);\n  uStack_15 = 0;\n  func_0c993fdd87d44364();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar4 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_23e271c427174daa(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  code *pcVar4;\n  undefined auStack_128 [104];\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 uStack_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined uStack_90;\n  undefined uStack_8f;\n  undefined *puStack_88;\n  undefined4 uStack_7c;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_88 = &_gp;\n  uStack_c0 = 0x41414141;\n  uStack_bc = 0x41414141;\n  uStack_b8 = 0x41414141;\n  uStack_b4 = 0x41414141;\n  uStack_b0 = 0x41414141;\n  uStack_ac = 0x41414141;\n  uStack_a8 = 0x41414141;\n  uStack_a4 = 0x41414141;\n  uStack_a0 = 0x41414141;\n  uStack_9c = 0x41414141;\n  uStack_98 = 0x41414141;\n  uStack_94 = 0x41414141;\n  uStack_8f = 0;\n  uStack_90 = 0x41;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar2 = (*(code *)PTR_memset_00412060)(auStack_128,0x41,99);\n  pcVar4 = *(code **)(puStack_88 + -0x7fc0);\n  *(undefined *)(iVar2 + 99) = 0;\n  uStack_7c = (*pcVar4)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar3 = (**(code **)(puStack_88 + -0x7fb8))(uStack_7c);\n  iVar2 = (**(code **)(puStack_88 + -0x7fac))(uStack_7c,&uStack_c0,uVar3,100);\n  uStack_15 = 0;\n  func_00454cf652f243b7();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_88 + -0x7fa0))();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c1aeed3bb6744f7d(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  code *pcVar2;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    unaff_s0 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0x278) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041208c\n    ;\n    (*(code *)PTR_wmemset_0041205c)(unaff_s0,0x41,0x31);\n    *(undefined4 *)((int)register0x00000074 + -0xe0) = 0;\n    pcVar2 = *(code **)(*(int *)((int)register0x00000074 + -0x278) + -0x7fb8);\n    *(undefined4 *)((int)register0x00000074 + -0x26c) = 0;\n    (*pcVar2)((undefined *)((int)register0x00000074 + -0x268),0,0xc4);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x278) + -0x7fb0))\n              ((undefined *)((int)register0x00000074 + -0x26c),unaff_s0,0x32);\n    func_98021bef82614c8c(unaff_s0);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE121_Stack_Based_Buffer_Overflow__src_wchar_t_declare_cpy_17_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x278) + -0x7f9c))();\n    unaff_s1 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x288);\n  }\n  return;\n}\n\n",
        "\nint func_48a11013bf5440f6(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_malloc_00412074)(400);\n  (*(code *)PTR_wmemset_0041205c)(iVar1,0x41,99);\n  *(undefined4 *)(iVar1 + 0x18c) = 0;\n  return iVar1;\n}\n\n",
        "\nvoid func_ce8f8acf4c874bb8(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined auStack_2c [16];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 == -1) {\ncode_r0x00400b60:\n    iVar5 = -1;\n    piVar3 = (int *)(*(code *)PTR_malloc_00412090)(0xfffffffc);\n    iVar6 = -4;\n  }\n  else {\n    uStack_38 = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_3c = 0x26987;\n    iVar4 = (*(code *)PTR_bind_00412080)(iVar2,&uStack_3c,0x10);\n    if (((iVar4 == -1) || (iVar4 = (*(code *)PTR_listen_0041206c)(iVar2,5), iVar4 == -1)) ||\n       (iVar4 = (*(code *)PTR_accept_00412098)(iVar2,0,0), iVar4 == -1)) {\n      (*(code *)PTR_close_00412054)(iVar2);\n      goto code_r0x00400b60;\n    }\n    iVar5 = (*(code *)PTR_recv_00412058)(iVar4,auStack_2c,0xd,0);\n    if (iVar5 + 1U < 2) {\n      (*(code *)PTR_close_00412054)(iVar2);\n      (*(code *)PTR_close_00412054)(iVar4);\n      goto code_r0x00400b60;\n    }\n    auStack_2c[iVar5] = 0;\n    iVar5 = (*(code *)PTR_strtol_0041205c)(auStack_2c,0,10);\n    iVar6 = iVar5 << 2;\n    (*(code *)PTR_close_00412054)(iVar2);\n    (*(code *)PTR_close_00412054)(iVar4);\n    piVar3 = (int *)(*(code *)PTR_malloc_00412090)(iVar6);\n    if (iVar5 == 0) goto code_r0x00400b90;\n  }\n  iVar2 = 4;\n  if (iVar5 != 0) {\n    iVar2 = iVar6;\n  }\n  (*(code *)PTR_memset_00412078)(piVar3,0,iVar2);\ncode_r0x00400b90:\n  iVar2 = *piVar3;\n  func_e740b624b2e441fb();\n  if (iStack_1c == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400bcc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_004120a8)(piVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (iVar2 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400d40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_puts_0041208c)();\n  return;\n}\n\n",
        "\nvoid func_eedf8f01cf4341b3(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined auStack_110 [99];\n  undefined uStack_ad;\n  int iStack_ac;\n  undefined *puStack_a4;\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_20 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  iVar3 = (*(code *)PTR_memset_00412068)(auStack_88,0x41,99);\n  func_eedf8f01cf4341b3Data = iVar3 + -8;\n  *(undefined *)(iVar3 + 99) = 0;\n  func_a9fa565c50c94430();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_20 + -0x7fa0))();\n  puVar2 = PTR___stack_chk_guard_00412088;\n  puStack_a4 = puVar1;\n  iStack_ac = *(int *)PTR___stack_chk_guard_00412088;\n  iVar3 = *(int *)PTR_func_eedf8f01cf4341b3Data_00412048;\n  uVar4 = (*(code *)PTR_memset_00412068)(auStack_110,0x43,99);\n  uStack_ad = 0;\n  (*(code *)PTR_memmove_0041208c)(iVar3,uVar4,100);\n  func_6c17db6d5802462f();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_33c227b95e674edf(void)\n\n{\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  uStack_10 = 0;\n  uStack_10 = (*(code *)PTR_fopen_00412088)(&UNK_00401a14,&UNK_00401a10);\n  func_f1fc5dbcadec41d3(&uStack_10);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_31ce3dc98f064e9e(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_78 = auStack_e8;\n  (*(code *)PTR_memset_00412058)(puStack_78,0x41,99);\n  puVar1 = puStack_80;\n  puStack_78[99] = 0;\n  puStack_74 = puStack_78 + -8;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7fa0))(auStack_70,puStack_74,100);\n  uStack_d = 0;\n  func_77c74c9065a8472d(auStack_70);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa4)) {\n    (**(code **)(puStack_80 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf4813c9e2954660(void)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 != 5) {\n    return;\n  }\n  piVar1 = (int *)(*(code *)PTR_malloc_00412078)(4);\n  iVar2 = *piVar1;\n  (*(code *)PTR_free_0041208c)(piVar1);\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b4c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_0041205c)(1,&UNK_004012a8,iVar2);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7f976515f28e4677(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_0041206c)(0x28);\n  for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n    *(int *)(iVar1 + iStack_14 * 4) = iStack_14;\n  }\n  for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n    func_588c9b14200c4419(*(undefined4 *)(iVar1 + iStack_10 * 4));\n  }\n  return;\n}\n\n",
        "\nvoid func_664905a8c2ba4b9c(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar1 = *param_1;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412074)(uVar1,auStack_70);\n  func_79c4033ead604a14(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_73109c9ec8b04afe(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uStack_1a4;\n  undefined auStack_1a0 [12];\n  undefined4 auStack_194 [2];\n  undefined4 auStack_18c [94];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  puVar6 = &uStack_1a4;\n  uStack_1a4 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR_memset_00412064)(auStack_1a0,0,0x18c);\n  (*(code *)PTR___wcscpy_chk_0041206c)(puVar6,&UNK_00401284,100);\n  puVar4 = auStack_194;\n  puVar2 = auStack_18c;\n  do {\n    puVar5 = puVar2;\n    puVar3 = puVar4;\n    puVar4 = puVar3 + 4;\n    uVar9 = puVar3[1];\n    uVar8 = puVar3[2];\n    uVar7 = puVar3[3];\n    *puVar5 = *puVar3;\n    puVar5[1] = uVar9;\n    puVar5[2] = uVar8;\n    puVar5[3] = uVar7;\n    puVar2 = puVar5 + 4;\n  } while (puVar4 != auStack_18c + 6);\n  uVar7 = puVar3[5];\n  puVar5[4] = *puVar4;\n  puVar5[5] = uVar7;\n  func_2035df75e48542af();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400e58) */\n\nvoid func_062feb171adc48fe(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400e50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412094)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_c31b9f59f2b8435a(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400c38. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_004120ac)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_2c61095b2df846bf(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  (*(code *)PTR_memset_00412058)(puStack_78,0x41,0x31);\n  puVar1 = puStack_88;\n  puStack_78[0x31] = 0;\n  (**(code **)(puVar1 + -0x7fc8))(puStack_74,0x41,99);\n  puStack_74[99] = 0;\n  iVar2 = func_81ba63da55eb4771();\n  if (iVar2 != 0) {\n    puStack_7c = puStack_78;\n  }\n  (**(code **)(puStack_88 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar3 = (**(code **)(puStack_88 + -0x7fc0))(auStack_70);\n  (**(code **)(puStack_88 + -0x7f9c))(auStack_70,puStack_7c,uVar3);\n  uStack_d = 0;\n  func_05be0824f2fd4461(auStack_70);\n  if (iStack_c != **(int **)(puStack_88 + -0x7fa0)) {\n    (**(code **)(puStack_88 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nundefined4 *\nCWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource\n          (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412054)(100,8,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_09b11bcd01dc4dc4(puVar1);\n  return puVar1;\n}\n\n",
        "\nvoid func_9bcc469b85664737(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(4);\n    *puVar1 = 5;\n    func_2bc502b813764a47(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_bbd95fee5742420d(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_24;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    iStack_24 = -1;\n    iVar1 = (*(code *)PTR_socket_0041205c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412068)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = 0;\n      uStack_1a = (*(code *)PTR_htons_0041208c)(30000);\n      iVar2 = (*(code *)PTR_bind_00412070)(iVar1,&uStack_1c,0x10);\n      if ((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412060)(iVar1,5), iVar2 != -1)) {\n        iStack_24 = (*(code *)PTR_accept_00412084)(iVar1,0,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412054)(iVar1);\n    }\n    if (iStack_24 != -1) {\n      (*(code *)PTR_close_00412054)(iStack_24);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3ec25a3e61044020(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined2 uStack_10024;\n  undefined2 uStack_10022;\n  undefined4 uStack_10020;\n  undefined auStack_10014 [65540];\n  \n  iVar1 = *(int *)PTR___stack_chk_guard_004120a0;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar2 = (*(code *)PTR_fopen_004120a8)(&UNK_00401de4,&UNK_00401de0);\n    if (iVar2 != 0) {\n      iVar3 = (*(code *)PTR_fgets_0041209c)(auStack_10014,0xffff,iVar2);\n      if (iVar3 == 0) {\n        func_2ce6cf34573b4732(&UNK_00401df0);\n      }\n      (*(code *)PTR_fclose_00412068)(iVar2);\n    }\n    iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_10024,0,0x10);\n      uStack_10024 = 2;\n      uStack_10020 = 0;\n      uStack_10022 = (*(code *)PTR_htons_00412090)(0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_10024,0x10);\n      if (iVar3 != -1) {\n        uVar4 = (*(code *)PTR_strlen_00412078)(auStack_10014);\n        (*(code *)PTR_send_00412050)(iVar2,auStack_10014,uVar4,0);\n        (*(code *)PTR_strlen_00412078)(auStack_10014);\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412058)(iVar2);\n    }\n  }\n  if (iVar1 != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_963bfe77f1a44334(void)\n\n{\n  int iVar1;\n  int iStack_80;\n  int iStack_7c;\n  int iStack_78;\n  undefined4 *puStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00412070)(auStack_6c,0,0x60);\n  puStack_74 = &uStack_70;\n  puStack_74 = (undefined4 *)func_793f098d5f0e4d50(puStack_74);\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00412074)(puStack_74,&UNK_00401d8c,&iStack_80);\n  if (iVar1 == 1) {\n    iStack_78 = 0;\n    for (iStack_7c = 0; iStack_7c < iStack_80; iStack_7c = iStack_7c + 1) {\n      iStack_78 = iStack_78 + 1;\n    }\n    func_427b05b9f0e340cb(iStack_78);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_230f36d1e7df41c2(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(8);\n  uVar3 = *puVar1;\n  uVar2 = puVar1[1];\n  (*(code *)PTR_free_00412088)(puVar1);\n  func_f33933867cfa40fd(uVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400ae4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401240,uVar2);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_adf818b592d34efd(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined4 *puVar6;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 auStack_80 [25];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  auStack_80[0] = 0;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_00412078)(auStack_80 + 1,0,0x60);\n  iVar2 = func_3e9cecdfa6724163();\n  if (iVar2 == 0) {\n    auStack_80[0] = _UNK_004014f0;\n    auStack_80[1] = _UNK_004014f4;\n    auStack_80[2] = _UNK_004014f8;\n    auStack_80[3] = _UNK_004014fc;\n    iVar2 = func_3e9cecdfa6724163();\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412080)(auStack_80);\n    iVar3 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar3 != -1) {\n      uStack_8c = 0;\n      uStack_88 = 0;\n      uStack_84 = 0;\n      uStack_90._2_2_ = 0;\n      uStack_90._0_2_ = 2;\n      uStack_8c = (*(code *)PTR_inet_addr_00412060)(&UNK_004014e4);\n      uStack_90 = func_2039e9d1b51f49ca(uStack_90._0_2_,0x6987);\n      iVar4 = (*(code *)PTR_connect_0041205c)(iVar3,&uStack_90,0x10);\n      if ((iVar4 != -1) &&\n         (iVar4 = (*(code *)PTR_recv_00412058)(iVar3,(int)auStack_80 + iVar2,99 - iVar2,0),\n         1 < iVar4 + 1U)) {\n        *(undefined *)((int)auStack_80 + iVar2 + iVar4) = 0;\n        puVar5 = (undefined *)(*(code *)PTR_strchr_00412084)(auStack_80,0xd);\n        if (puVar5 != (undefined *)0x0) {\n          *puVar5 = 0;\n        }\n        puVar5 = (undefined *)(*(code *)PTR_strchr_00412084)(auStack_80,10);\n        if (puVar5 != (undefined *)0x0) {\n          *puVar5 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar3);\n    }\n    iVar2 = func_3e9cecdfa6724163();\n  }\n  if (iVar2 == 0) {\n    puVar6 = auStack_80;\n    (*(code *)PTR_puts_00412090)();\n  }\n  else {\n    puVar6 = (undefined4 *)0x1;\n    (*(code *)PTR___printf_chk_00412070)(1,auStack_80);\n  }\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (puVar6 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400d20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\nint func_5a658f2ea1f8459d(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (badStatic != 0) {\n    (*(code *)PTR_memset_00412058)(param_1,0x41,99,param_4,&_gp);\n    *(undefined *)(param_1 + 99) = 0;\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_b41e7a4002ca4a90(void)\n\n{\n  undefined auStack_a4 [49];\n  undefined uStack_73;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memset_0041205c)(auStack_a4,0x41,0x31);\n  uStack_73 = 0;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x41,99);\n  uStack_d = 0;\n  func_5bd277b0299045c8(auStack_a4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid func_a8136a50a7a342e4(void)\n\n{\n  undefined auStack_98 [104];\n  undefined *puStack_30;\n  undefined4 uStack_24;\n  undefined4 *puStack_20;\n  undefined4 *puStack_1c;\n  undefined *puStack_18;\n  undefined *puStack_14;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_30 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_20 = &uStack_24;\n  puStack_1c = &uStack_24;\n  uStack_24 = 0;\n  puStack_18 = (undefined *)0x0;\n  puStack_14 = auStack_98;\n  (*(code *)PTR_memset_00412058)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_18 = puStack_14;\n  *puStack_20 = puStack_14;\n  uStack_10 = *puStack_1c;\n  func_24412d49a7624949(uStack_10);\n  (**(code **)(puStack_30 + -0x7fa0))(uStack_10);\n  if (iStack_c != **(int **)(puStack_30 + -0x7fa4)) {\n    (**(code **)(puStack_30 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nint func_5c5198a617b342b8(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  int iVar5;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_004120a4;\n  iStack_1c = *(int *)PTR___stack_chk_guard_004120a4;\n  iVar2 = (*(code *)PTR_strlen_00412084)();\n  iVar5 = 2;\n  iVar3 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  if (iVar3 != -1) {\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_2c._2_2_ = 0;\n    uStack_2c._0_2_ = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401544);\n    uStack_2c = func_1776bafed287489d(uStack_2c._0_2_,0x6987);\n    iVar5 = (*(code *)PTR_connect_00412060)(iVar3,&uStack_2c,0x10);\n    if (iVar5 != -1) {\n      iVar5 = (*(code *)PTR_recv_0041205c)(iVar3,param_1 + iVar2,99 - iVar2,0);\n      puVar4 = PTR_strchr_00412088;\n      if (1 < iVar5 + 1U) {\n        *(undefined *)(param_1 + iVar5 + iVar2) = 0;\n        puVar4 = (undefined *)(*(code *)puVar4)(param_1,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412088)(param_1,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412058)();\n    iVar5 = iVar3;\n  }\n  if (iStack_1c == *(int *)puVar1) {\n    return param_1;\n  }\n  iVar2 = (*(code *)PTR___stack_chk_fail_0041209c)();\n  if (iVar5 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400cc0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    iVar5 = (*(code *)PTR_puts_00412094)();\n    return iVar5;\n  }\n  return iVar2;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4270a67465334821(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStack_108;\n  undefined2 uStack_104;\n  undefined auStack_102 [246];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  uStack_108 = _UNK_00401d24;\n  uStack_104 = _UNK_00401d28;\n  (*(code *)PTR_memset_00412070)(auStack_102,0,0xf4);\n  iVar1 = (*(code *)PTR_strlen_00412078)(&uStack_108);\n  iVar2 = (*(code *)PTR_getenv_00412088)(&UNK_00401d20);\n  if (iVar2 != 0) {\n    (*(code *)PTR_strncat_0041205c)((int)&uStack_108 + iVar1,iVar2,0xf9 - iVar1);\n  }\n  func_c449ee9f05bb402e(&uStack_108);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return;\n}\n\n",
        "\nvoid func_71bc0fb2cc7b4557(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined auStack_b8 [104];\n  undefined *puStack_50;\n  undefined *puStack_48;\n  undefined *puStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  ushort uStack_10;\n  int iStack_c;\n  \n  puStack_50 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_48 = auStack_b8;\n  puStack_44 = puStack_48;\n  (*(code *)PTR_memset_00412058)(puStack_48,0x41,0x31);\n  puVar1 = puStack_50;\n  puStack_44[0x31] = 0;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  uVar2 = (**(code **)(puVar1 + -0x7fc0))(puStack_44);\n  (**(code **)(puStack_50 + -0x7f9c))(&uStack_40,puStack_44,uVar2);\n  uStack_10 = uStack_10 & 0xff00;\n  func_f2d3ef64ecd04434(puStack_44);\n  if (iStack_c != **(int **)(puStack_50 + -0x7fa0)) {\n    (**(code **)(puStack_50 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_3d53d55833ec46e0\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_00412078)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_d217db3d50624fdd(puVar1);\n  func_b15432faf3d34f14(puVar1);\n  return;\n}\n\n",
        "\nvoid func_b2d0d1119c5f4020(void)\n\n{\n  undefined4 auStack_32c [99];\n  undefined4 uStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  auStack_32c[0] = 0;\n  (*(code *)PTR_wmemset_00412058)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_memcpy_00412084)(auStack_32c,auStack_19c,400);\n  uStack_1a0 = 0;\n  func_759153630a7645bf(auStack_32c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e6b6e72ca40b458b(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401230,*puVar1,puVar1[1]);\n  return;\n}\n\n",
        "\nvoid func_8e7aff5bac2540cf(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_system_00412074)(*param_1);\n  if (iVar1 < 1) {\n    func_64cbd0710bfb4b47(&UNK_00401b00);\n    (*(code *)PTR_exit_0041206c)(1);\n  }\n  return;\n}\n\n",
        "\nvoid func_618a6c0514804ba3(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined4 **ppuVar6;\n  undefined4 uVar7;\n  undefined auStack_158 [104];\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 uStack_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 uStack_c8;\n  undefined4 uStack_c4;\n  undefined uStack_c0;\n  undefined uStack_bf;\n  undefined *puStack_b8;\n  undefined4 *puStack_b0;\n  int iStack_ac;\n  undefined *puStack_a8;\n  undefined4 uStack_a4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar7 = *param_1;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  uVar4 = (*(code *)PTR_strlen_0041206c)(uVar3);\n  uVar3 = (*(code *)PTR___memmove_chk_00412078)(uVar3,uVar7,uVar4,100);\n  uStack_15 = 0;\n  func_1b984533e2c64f18(uVar3);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_a8 = puVar1;\n  puStack_b8 = &_gp;\n  uStack_f0 = 0x41414141;\n  uStack_ec = 0x41414141;\n  uStack_e8 = 0x41414141;\n  uStack_e4 = 0x41414141;\n  uStack_e0 = 0x41414141;\n  uStack_dc = 0x41414141;\n  uStack_d8 = 0x41414141;\n  uStack_d4 = 0x41414141;\n  uStack_d0 = 0x41414141;\n  uStack_cc = 0x41414141;\n  uStack_c8 = 0x41414141;\n  uStack_c4 = 0x41414141;\n  uStack_bf = 0;\n  uStack_c0 = 0x41;\n  iStack_ac = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_a4 = uVar7;\n  iVar5 = (*(code *)PTR_memset_00412064)(auStack_158,0x41,99);\n  ppuVar6 = &puStack_b0;\n  *(undefined *)(iVar5 + 99) = 0;\n  puStack_b0 = &uStack_f0;\n  func_618a6c0514804ba3();\n  if (iStack_ac == *(int *)puVar2) {\n    return;\n  }\n  (**(code **)(puStack_b8 + -0x7f9c))();\n  if (ppuVar6 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_70835171913b4fb8(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  \n  (*(code *)PTR_rand_00412064)();\n  iVar1 = (*(code *)PTR_rand_00412064)();\n  uVar2 = (*(code *)PTR_rand_00412064)();\n  puVar3 = (undefined4 *)(*(code *)PTR_calloc_00412050)((iVar1 << 0xf ^ uVar2) << 2,1);\n  func_d66ff76076154f3c(*puVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400af4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar3);\n  return;\n}\n\n",
        "\nvoid func_fc1865d5ebac4f7b(void)\n\n{\n  int iVar1;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  iVar1 = (*(code *)PTR_malloc_0041206c)(100);\n  (*(code *)PTR_memset_00412058)(iVar1,0x41,99);\n  *(undefined *)(iVar1 + 99) = 0;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  (*(code *)PTR_strcpy_00412074)(&uStack_40,iVar1);\n  func_1661b5cd94784446(iVar1);\n  (*(code *)PTR_free_00412088)(iVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_6ec7fc9d591d4ee7(int param_1)\n\n{\n  undefined4 auStack_34 [4];\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130a8;\n  auStack_34[0] = 0;\n  auStack_34[1] = 0;\n  auStack_34[2] = 0;\n  auStack_34[3] = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  if (*(int *)(param_1 + 8) < 10) {\n    func_b4f060a91a384ef0(auStack_34[*(int *)(param_1 + 8)]);\n  }\n  else {\n    func_cd2a3e6b5c7f451f(&UNK_00401ff0);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130a8) {\n    (*(code *)PTR___stack_chk_fail_004130a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f0a16c62591b4e21(int param_1)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = *(undefined4 **)(param_1 + 8);\n  *puVar1 = 5;\n  func_c7e14f9dc51243df(*puVar1);\n  (*(code *)PTR_free_00412088)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_fcac9411ea2f4d6b(void)\n\n{\n  int iStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_74 = (undefined *)0x0;\n  for (iStack_78 = 0; iStack_78 < 1; iStack_78 = iStack_78 + 1) {\n    puStack_74 = (undefined *)(*(code *)PTR_malloc_0041206c)(0x32);\n    *puStack_74 = 0;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412074)(puStack_74,auStack_70);\n  func_98e46cf12bf74a30(puStack_74);\n  (*(code *)PTR_free_00412088)(puStack_74);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e444b5f19dce4f21(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  uVar1 = *(undefined4 *)PTR_CWE127_Buffer_Underread__wchar_t_alloca_ncpy_68_goodG2BData_00412040;\n  (*(code *)PTR_wmemset_00412060)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar2 = (*(code *)PTR_wcslen_00412068)(auStack_19c);\n  (*(code *)PTR_wcsncpy_00412080)(auStack_19c,uVar1,uVar2);\n  uStack_10 = 0;\n  func_51647bc9437a41cc(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_5adab246c3d74e44(void)\n\n{\n  int iVar1;\n  undefined4 auStack_340 [200];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  uint uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_18 = (undefined4 *)0x0;\n  iVar1 = func_68832a61f4d14a63();\n  if (iVar1 != 0) {\n    puStack_18 = auStack_340;\n    for (uStack_14 = 0; puStack_10 = puStack_18, uStack_14 < 100; uStack_14 = uStack_14 + 1) {\n      auStack_340[uStack_14 * 2 + 1] = 5;\n      puStack_18[uStack_14 * 2] = 0;\n    }\n  }\n  func_6fa66c90bfa84556(*puStack_18,puStack_18[1]);\n  (**(code **)(puStack_20 + -0x7f9c))(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bf98d70fd127413e(void)\n\n{\n  int iStack_ac;\n  undefined *puStack_a8;\n  undefined auStack_a4 [52];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  for (iStack_ac = 0; iStack_ac < 1; iStack_ac = iStack_ac + 1) {\n    puStack_a8 = auStack_a4;\n    auStack_a4[0] = 0;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_00412070)(puStack_a8,auStack_70);\n  func_85db3ec94f774467(puStack_a8);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_0dbe93b55978445e(undefined4 *param_1)\n\n{\n  if (param_1 != (undefined4 *)0x0) {\n    *param_1 = 1;\n    param_1[1] = 1;\n    func_99675dfd5f14460d(param_1);\n    (*(code *)PTR_free_00412088)(param_1);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400aa8) */\n\nvoid func_abde8338b3764a37(void)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  \n  uVar1 = (*(code *)PTR_rand_0041205c)();\n  if (uVar1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400aa0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041206c)();\n    return;\n  }\n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412070)(uVar1);\n  *puVar2 = 0x68656c6c;\n  *(undefined2 *)(puVar2 + 1) = 0x6f00;\n  func_5d01cfdcabce4be7(puVar2);\n                    /* WARNING: Could not recover jumptable at 0x00400a68. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412084)(puVar2);\n  return;\n}\n\n",
        "\nvoid func_fb9f6718a5404dd8(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 auStack_f0 [24];\n  undefined uStack_8d;\n  undefined uStack_85;\n  undefined *puStack_80;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_80 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412060)(auStack_f0 + 2,0x41,99);\n  uStack_85 = 0;\n  puVar2 = (undefined4 *)(**(code **)(puStack_80 + -0x7fc0))(auStack_78,0x43,99);\n  puVar6 = auStack_f0;\n  uStack_18._3_1_ = 0;\n  puVar4 = puVar6;\n  do {\n    puVar5 = puVar4 + 4;\n    puVar3 = puVar2 + 4;\n    uVar9 = puVar2[1];\n    uVar8 = puVar2[2];\n    uVar7 = puVar2[3];\n    *puVar4 = *puVar2;\n    puVar4[1] = uVar9;\n    puVar4[2] = uVar8;\n    puVar4[3] = uVar7;\n    puVar2 = puVar3;\n    puVar4 = puVar5;\n  } while (puVar3 != &uStack_18);\n  *puVar5 = *puVar3;\n  uStack_8d = 0;\n  func_d207dbaa7d7f4453();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_80 + -0x7fa8))();\n  if (puVar6 != (undefined4 *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f1e14834670044db(void)\n\n{\n  int iVar1;\n  int iStack_48;\n  undefined4 auStack_44 [4];\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  undefined2 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00413088;\n  iStack_48 = -1;\n  iVar1 = func_7041ec26f9204e50();\n  if (iVar1 != 0) {\n    uStack_1c = 0;\n    uStack_18 = 0;\n    uStack_14 = 0;\n    uStack_10 = 0;\n    iVar1 = (*(code *)PTR_fgets_00413084)(&uStack_1c,0xe,*(undefined4 *)PTR_stdin_00413064);\n    if (iVar1 == 0) {\n      func_deb3b3e0e4ec46c6(&UNK_00401f20);\n    }\n    else {\n      iStack_48 = (*(code *)PTR_atoi_00413058)(&uStack_1c);\n    }\n  }\n  iVar1 = func_7252e5ea830a4cd9();\n  if (iVar1 == 0) {\n    auStack_44[0] = 0;\n    auStack_44[1] = 0;\n    auStack_44[2] = 0;\n    auStack_44[3] = 0;\n    uStack_34 = 0;\n    uStack_30 = 0;\n    uStack_2c = 0;\n    uStack_28 = 0;\n    uStack_24 = 0;\n    uStack_20 = 0;\n    if ((iStack_48 < 0) || (9 < iStack_48)) {\n      func_deb3b3e0e4ec46c6(&UNK_00401f48);\n    }\n    else {\n      func_8976a153c294469c(auStack_44[iStack_48]);\n    }\n  }\n  else {\n    func_deb3b3e0e4ec46c6(&UNK_00401f30);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00413088) {\n    (*(code *)PTR___stack_chk_fail_0041307c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_1264dd700bc24203(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = *param_1;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  iVar2 = (*(code *)PTR_wcslen_00412064)(auStack_19c);\n  (*(code *)PTR_memcpy_0041208c)(auStack_19c,uVar1,iVar2 << 2);\n  uStack_10 = 0;\n  func_3e079fd000c54617(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_89f9dbbaa8bd416a(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined2 uStack_80;\n  undefined2 uStack_7e;\n  undefined4 uStack_7c;\n  undefined4 auStack_70 [4];\n  undefined auStack_60 [84];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a8;\n  auStack_70[0] = _UNK_00401d68;\n  auStack_70[1] = _UNK_00401d6c;\n  auStack_70[2] = _UNK_00401d70;\n  auStack_70[3] = _UNK_00401d74;\n  (*(code *)PTR_memset_00412070)(auStack_60,0,0x54);\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    iVar1 = (*(code *)PTR_strlen_00412078)(auStack_70);\n    iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar2 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_80,0,0x10);\n      uStack_80 = 2;\n      uStack_7c = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d40);\n      uStack_7e = (*(code *)PTR_htons_0041209c)(0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_80,0x10);\n      if (((iVar3 != -1) &&\n          (iVar3 = (*(code *)PTR_recv_00412058)(iVar2,(int)auStack_70 + iVar1,99 - iVar1,0),\n          iVar3 != -1)) && (iVar3 != 0)) {\n        *(undefined *)((int)auStack_70 + iVar3 + iVar1) = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(auStack_70,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_0041207c)(auStack_70,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    if (iVar2 != -1) {\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\n  }\n  iVar1 = (*(code *)PTR_system_0041208c)(auStack_70);\n  if (iVar1 < 1) {\n    func_d85d288de9434e02(&UNK_00401d4c);\n    (*(code *)PTR_exit_00412084)(1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a8) {\n    (*(code *)PTR___stack_chk_fail_004120a0)();\n  }\n  return;\n}\n\n",
        "\nvoid func_8c68aa955805491a(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined *puVar4;\n  char cStack_79;\n  uint uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_memset_00412068)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR___fgets_chk_00412064)\n                    (&uStack_78,0xffffffff,100,*(undefined4 *)PTR_stdin_00412070);\n  if (iVar2 == 0) {\n    func_cf9a4a4cfa5d4294(&UNK_00401304);\n    uStack_78 = uStack_78 & 0xffffff;\n  }\n  else {\n    iVar2 = (*(code *)PTR_strlen_00412074)(&uStack_78);\n    if ((iVar2 != 0) && (pcVar3 = (char *)((int)&uStack_78 + iVar2 + -1), *pcVar3 == '\\n')) {\n      *pcVar3 = '\\0';\n    }\n  }\n  puVar4 = &UNK_0040131c;\n  (*(code *)PTR_execl_00412060)\n            (&UNK_0040131c,&UNK_0040131c,&UNK_00401318,&UNK_00401314,&uStack_78,0);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_a3842370063147c1(void)\n\n{\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcpy_00412070)(auStack_d4,auStack_70);\n  func_73b1e7ec1d15496f(auStack_d4);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nundefined4 *\nCWE123_Write_What_Where_Condition__connect_socket_22_badSource\n          (undefined4 *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStackX_4;\n  undefined4 uStackX_8;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041209c;\n  uStackX_4 = param_2;\n  uStackX_8 = param_3;\n  if (*(int *)PTR_CWE123_Write_What_Where_Condition__connect_socket_22_badGlobal_00412040 != 0) {\n    iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401ce0);\n      uStack_1a = (*(code *)PTR_htons_00412090)(0x6987);\n      iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_1c,0x10);\n      if (iVar2 != -1) {\n        (*(code *)PTR_recv_0041205c)(iVar1,&uStackX_4,8,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412058)(iVar1);\n    }\n  }\n  *param_1 = uStackX_4;\n  param_1[1] = uStackX_8;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041209c) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n  }\n  return param_1;\n}\n\n",
        "\nvoid func_965e5d5543424ba1(Elf32_Ehdr *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  Elf32_Ehdr *pEVar4;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  int iStack_14;\n  \n  puVar2 = PTR___stack_chk_guard_00412090;\n  puVar1 = PTR_globalTrue_00412040;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412090;\n  if (*(int *)PTR_globalTrue_00412040 == 0) {\ncode_r0x00400aa8:\n    if (iStack_14 == *(int *)puVar2) {\n      return;\n    }\n  }\n  else {\n    uStack_24 = 0;\n    uStack_20 = 0;\n    uStack_1c = 0;\n    uStack_18 = 0;\n    iVar3 = (*(code *)PTR_fgets_0041208c)(&uStack_24,0xe,*(undefined4 *)PTR_stdin_00412068);\n    if (iVar3 == 0) {\n      param_1 = (Elf32_Ehdr *)&UNK_00401374;\n      func_ba460cd9e35542cb();\n      if (*(int *)puVar1 == 0) goto code_r0x00400aa8;\ncode_r0x00400ba0:\n      param_1 = &__DT_MIPS_BASE_ADDRESS;\n      if (iStack_14 == *(int *)puVar2) {\n        param_1 = (Elf32_Ehdr *)&UNK_00401384;\n        goto code_r0x00400be0;\n      }\n    }\n    else {\n      param_1 = (Elf32_Ehdr *)(*(code *)PTR_strtoul_0041206c)(&uStack_24,0,0);\n      if (*(int *)puVar1 == 0) goto code_r0x00400aa8;\n      if (param_1 < (Elf32_Ehdr *)0x6) goto code_r0x00400ba0;\n      pEVar4 = (Elf32_Ehdr *)(*(code *)PTR_malloc_0041207c)();\n      pEVar4->e_ident_magic_num = 0x68;\n      pEVar4->e_ident_magic_str[0] = 'e';\n      pEVar4->e_ident_magic_str[1] = 'l';\n      pEVar4->e_ident_magic_str[2] = 'l';\n      pEVar4->e_ident_class = 0x6f;\n      pEVar4->e_ident_data = 0;\n      param_1 = pEVar4;\n      func_ba460cd9e35542cb();\n      if (iStack_14 == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400b7c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        (*(code *)PTR_free_00412094)(pEVar4);\n        return;\n      }\n    }\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\ncode_r0x00400be0:\n  if (param_1 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bf0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_b1dfd44804754ea9(void)\n\n{\n  int iVar1;\n  int iStack_14;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_00412070)(0x50);\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    for (iStack_14 = 0; iStack_14 < 5; iStack_14 = iStack_14 + 1) {\n      *(int *)(iVar1 + iStack_14 * 8) = iStack_14;\n      *(int *)(iVar1 + iStack_14 * 8 + 4) = iStack_14;\n    }\n  }\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n      func_4e97cff756b34169(*(undefined4 *)(iVar1 + iStack_10 * 8));\n      func_4e97cff756b34169(*(undefined4 *)(iVar1 + iStack_10 * 8 + 4));\n    }\n  }\n  return;\n}\n\n",
        "\nvoid func_55ac654b902e40e9(Elf32_Ehdr *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  Elf32_Ehdr *pEVar5;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined auStack_24 [16];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    if (iStack_14 == *(int *)PTR___stack_chk_guard_0041209c) {\n      return;\n    }\n  }\n  else {\n    iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar2 != -1) {\n      uStack_30 = 0;\n      uStack_2c = 0;\n      uStack_28 = 0;\n      uStack_34._2_2_ = 0;\n      uStack_34._0_2_ = 2;\n      uStack_30 = (*(code *)PTR_inet_addr_00412060)(&UNK_004014a4);\n      uStack_34 = func_c0f4eb61a09942c1(uStack_34._0_2_,0x6987);\n      iVar3 = (*(code *)PTR_connect_0041205c)(iVar2,&uStack_34,0x10);\n      if (iVar3 != -1) {\n        iVar3 = (*(code *)PTR_recv_00412058)(iVar2,auStack_24,0xd,0);\n        if (1 < iVar3 + 1U) {\n          auStack_24[iVar3] = 0;\n          uVar4 = (*(code *)PTR_strtoul_0041207c)(auStack_24,0,0);\n          (*(code *)PTR_close_00412054)(iVar2);\n          if (5 < uVar4) {\n            pEVar5 = (Elf32_Ehdr *)(*(code *)PTR_malloc_0041208c)(uVar4);\n            pEVar5->e_ident_magic_num = 0x68;\n            pEVar5->e_ident_magic_str[0] = 'e';\n            pEVar5->e_ident_magic_str[1] = 'l';\n            pEVar5->e_ident_magic_str[2] = 'l';\n            pEVar5->e_ident_class = 0x6f;\n            pEVar5->e_ident_data = 0;\n            param_1 = pEVar5;\n            func_d50fd0e4c883413e();\n            if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400cb8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              (*(code *)PTR_free_004120a0)(pEVar5);\n              return;\n            }\n            goto code_r0x00400cc0;\n          }\n          goto code_r0x00400b50;\n        }\n      }\n      (*(code *)PTR_close_00412054)(iVar2);\n    }\ncode_r0x00400b50:\n    param_1 = &__DT_MIPS_BASE_ADDRESS;\n    if (iStack_14 == *(int *)puVar1) {\n      param_1 = (Elf32_Ehdr *)&UNK_004014b0;\n      goto code_r0x00400cd0;\n    }\n  }\ncode_r0x00400cc0:\n  (*(code *)PTR___stack_chk_fail_00412094)();\ncode_r0x00400cd0:\n  if (param_1 != (Elf32_Ehdr *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ce0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412088)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_269d362a626e4c13(int param_1)\n\n{\n  uint uStack_1a0;\n  undefined4 auStack_19c [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_wmemset_00412064)(auStack_19c,0x43,99);\n  auStack_19c[99] = 0;\n  for (uStack_1a0 = 0; uStack_1a0 < 100; uStack_1a0 = uStack_1a0 + 1) {\n    *(undefined4 *)(param_1 + uStack_1a0 * 4) = auStack_19c[uStack_1a0];\n  }\n  *(undefined4 *)(param_1 + 0x18c) = 0;\n  func_44c1c9281d6348fb(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fc7a30b651fb4525(undefined4 param_1)\n\n{\n  if (goodB2G1Static == 0) {\n    (*(code *)PTR_free_00412084)(param_1);\n  }\n  else {\n    func_769b5139006348c6(&UNK_00401bd0);\n  }\n  return;\n}\n\n",
        "\nvoid func_dec9aed5e4fe46c3(void)\n\n{\n  func_18ebb4e2391642c2(7);\n  return;\n}\n\n",
        "\nvoid func_c0d9afedfbac418a(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  badStatic = 1;\n  uVar1 = func_ef848747cce1476d(auStack_32c);\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar2 = (*(code *)PTR_wcslen_00412064)(auStack_19c);\n  (*(code *)PTR_wcsncat_00412054)(uVar1,auStack_19c,uVar2);\n  func_7ea894cb9e8a4fce(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_880e7c6f5f5e4c4e(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_14 = auStack_88;\n  puStack_10 = puStack_14;\n  (*(code *)PTR_memset_00412068)(puStack_14,0x41,0x31);\n  puStack_10[0x31] = 0;\n  func_56d3f6bd27cb4cdb(puStack_10);\n  if (iStack_c != **(int **)(puStack_20 + -0x7f90)) {\n    (**(code **)(puStack_20 + -0x7f98))();\n  }\n  return;\n}\n\n",
        "\nvoid func_0e49a0d524174e36(undefined *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar2 = param_1;\n    puVar1 = PTR___stack_chk_guard_00412088;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    param_1 = (undefined *)((int)register0x00000074 + -0x48);\n    *(undefined **)((int)register0x00000074 + -0x50) = &_gp;\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412088\n    ;\n    (*(code *)PTR___strcpy_chk_00412064)(param_1,puVar2,0x32);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = &UNK_00400b9c;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x50) + -0x7fa0))();\n    unaff_s0 = puVar2;\n    unaff_s1 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x60);\n  }\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_c1f41f3a90d646e0(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_calloc_00412050)(100,4);\n  (*(code *)PTR___wcscpy_chk_0041206c)(iVar1,&UNK_004011f4,100);\n  if (iVar1 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400abc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR___wprintf_chk_0041205c)(1,&UNK_0040123c,iVar1);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_370d0f982d804f40(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412054)(1,4);\n  iVar2 = func_5e11c0114b544e3f();\n  if (iVar2 == 0) {\n    if (puVar1 != (undefined4 *)0x0) {\n      *puVar1 = 5;\n      func_cebaeeb2436f453f(*puVar1);\n      (*(code *)PTR_free_00412088)(puVar1);\n    }\n  }\n  else {\n    *puVar1 = 5;\n    func_cebaeeb2436f453f(*puVar1);\n    (*(code *)PTR_free_00412088)(puVar1);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_8bb23d3d5c1c48a0(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  int aiStack_404 [4];\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_1c = *(int *)PTR___stack_chk_guard_0041208c;\n  piVar4 = aiStack_404;\n  aiStack_404[0] = _UNK_00401390;\n  aiStack_404[1] = _UNK_00401394;\n  aiStack_404[2] = _UNK_00401398;\n  aiStack_404[3] = _UNK_0040139c;\n  uStack_3f4 = _UNK_004013a0;\n  uStack_3f0 = _UNK_004013a4;\n  (*(code *)PTR_memset_00412068)(auStack_3ec,0,0x3d0);\n  iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n  if (1 < 0xfaU - iVar2) {\n    iVar3 = (*(code *)PTR___fgetws_chk_00412094)\n                      (piVar4 + iVar2,0x3fffffff,0xfaU - iVar2,*(undefined4 *)PTR_stdin_00412070);\n    if (iVar3 == 0) {\n      func_dbb1ace1e5154b6f(&UNK_00401354);\n      piVar4[iVar2] = 0;\n    }\n    else {\n      iVar2 = (*(code *)PTR_wcslen_00412064)(piVar4);\n      if ((iVar2 != 0) && (piVar4[iVar2 + 0x3fffffff] == 10)) {\n        piVar4[iVar2 + 0x3fffffff] = 0;\n      }\n    }\n  }\n  (*(code *)PTR_putenv_00412058)();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n    if (piVar4 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_83a51e10ad714772(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(400);\n  *puVar1 = 0;\n  func_a5361273eeda4269(puVar1);\n  return;\n}\n\n",
        "\nvoid func_7a3e5ab303e14c99(void)\n\n{\n  undefined4 uStack_338;\n  undefined4 uStack_334;\n  undefined *puStack_18;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_18 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_10 = (undefined4 *)0x0;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    puStack_10 = &uStack_338;\n    uStack_338 = 0;\n    uStack_334 = 0;\n    func_0abc40e4d2d94f31(puStack_10);\n  }\n  else {\n    func_4f05b902504b4505(&UNK_00401c30);\n  }\n  if (iStack_c != **(int **)(puStack_18 + -0x7f9c)) {\n    (**(code **)(puStack_18 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_d793a242a5d54a22(void)\n\n{\n  int iVar1;\n  int iStack_80;\n  int iStack_7c;\n  int iStack_78;\n  undefined4 *puStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004130a0;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00413070)(auStack_6c,0,0x60);\n  puStack_74 = &uStack_70;\n  puStack_74 = (undefined4 *)func_0ae80fb920d24485(puStack_74);\n  iVar1 = (*(code *)PTR___isoc99_sscanf_00413074)(puStack_74,&UNK_00401f40,&iStack_80);\n  if ((iVar1 == 1) && (iStack_80 < 10000)) {\n    iStack_78 = 0;\n    for (iStack_7c = 0; iStack_7c < iStack_80; iStack_7c = iStack_7c + 1) {\n      iStack_78 = iStack_78 + 1;\n    }\n    func_3932ddf087e8466c(iStack_78);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004130a0) {\n    (*(code *)PTR___stack_chk_fail_00413098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_063cca9b9e3f4981(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    if (*(int *)PTR_globalTrue_00412044 == 0) {\n      return;\n    }\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s1;\n    unaff_s1 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x1a4) = 0;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041208c\n    ;\n    (*(code *)PTR_memset_00412068)((undefined *)((int)register0x00000074 + -0x1a0),0,0x18c);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fb0))(unaff_s1,&UNK_004012f4,100);\n    puVar4 = (undefined4 *)((int)register0x00000074 + -0x194);\n    puVar2 = (undefined4 *)((int)register0x00000074 + -0x18c);\n    do {\n      puVar5 = puVar2;\n      puVar3 = puVar4;\n      puVar4 = puVar3 + 4;\n      uVar8 = puVar3[1];\n      uVar7 = puVar3[2];\n      uVar6 = puVar3[3];\n      *puVar5 = *puVar3;\n      puVar5[1] = uVar8;\n      puVar5[2] = uVar7;\n      puVar5[3] = uVar6;\n      puVar2 = puVar5 + 4;\n    } while (puVar4 != (undefined4 *)((int)register0x00000074 + -0x174));\n    uVar6 = puVar3[5];\n    puVar5[4] = *puVar4;\n    puVar5[5] = uVar6;\n    func_05153c46e3314cd7(unaff_s1);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = func_063cca9b9e3f4981;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f9c))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\nvoid func_8e3a7857754e4136(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  puVar2 = (undefined *)(*(code *)PTR_malloc_00412078)(0x32);\n  *puVar2 = 0;\n  uVar3 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR___strcpy_chk_0041205c)(puVar2,uVar3,0x32);\n  puVar4 = puVar2;\n  func_efb1130b91af424e();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400adc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_0041208c)(puVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (puVar4 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_08d63ef6143e4c67\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  undefined *puVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_calloc_00412060)(1,4,param_3,param_4,&_gp);\n  puVar2 = &_gp;\n  *puVar1 = 5;\n  func_2f851933cc15465f(5);\n                    /* WARNING: Could not recover jumptable at 0x00400be4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(puVar2 + -0x7f88))(puVar1);\n  return;\n}\n\n",
        "\nvoid func_3367365905af4efe(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 uVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined *unaff_s0;\n  undefined4 *unaff_s1;\n  undefined *puVar9;\n  undefined *unaff_s8;\n  undefined4 unaff_retaddr;\n  code *pcVar10;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412080;\n    puVar9 = (undefined *)((int)register0x00000074 + -0x90);\n    *(undefined **)((int)register0x00000074 + -0x10) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s8;\n    *(undefined4 **)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0x80) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -4) = unaff_retaddr;\n    unaff_s1 = (undefined4 *)((int)register0x00000074 + -0xe8);\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412080\n    ;\n    puVar2 = (undefined4 *)\n             (*(code *)PTR_memset_00412060)((undefined *)((int)register0x00000074 + -0x78),0x43,99);\n    *(undefined *)((int)register0x00000074 + -0x15) = 0;\n    puVar3 = unaff_s1;\n    do {\n      puVar4 = puVar3 + 4;\n      puVar6 = puVar2 + 4;\n      uVar8 = puVar2[1];\n      uVar7 = puVar2[2];\n      uVar5 = puVar2[3];\n      *puVar3 = *puVar2;\n      puVar3[1] = uVar8;\n      puVar3[2] = uVar7;\n      puVar3[3] = uVar5;\n      puVar3 = puVar4;\n      puVar2 = puVar6;\n    } while (puVar6 != (undefined4 *)((int)register0x00000074 + -0x18));\n    *puVar4 = *puVar6;\n    *(undefined *)((int)register0x00000074 + -0x85) = 0;\n    func_5750018ff6c34d80(unaff_s1);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    pcVar10 = CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_07_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x80) + -0x7fa8))();\n    *(code **)((int)register0x00000074 + -0xfc) = pcVar10;\n    func_a6d7d5db44c8494a();\n    unaff_retaddr = *(undefined4 *)((int)register0x00000074 + -0xfc);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0xf8);\n    unaff_s0 = puVar1;\n    unaff_s8 = puVar9;\n  }\n  return;\n}\n\n",
        "\nvoid func_017a4d0fbb2f4b77(void)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  int *piVar4;\n  int iVar5;\n  int *unaff_s0;\n  int unaff_s1;\n  undefined *unaff_s2;\n  undefined4 unaff_s3;\n  int unaff_s4;\n  int unaff_s5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  undefined4 unaff_retaddr;\n  code *pcVar9;\n  undefined auStackX_0 [16];\n  \n  do {\n    puVar1 = PTR___stack_chk_guard_004120a0;\n    *(undefined **)((int)register0x00000074 + -0x14) = unaff_s2;\n    *(undefined4 *)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(int *)((int)register0x00000074 + -0xc) = unaff_s4;\n    *(undefined4 *)((int)register0x00000074 + -0x10) = unaff_s3;\n    unaff_s3 = 0xffffffff;\n    *(int **)((int)register0x00000074 + -0x1c) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x40) = &_gp;\n    *(int *)((int)register0x00000074 + -8) = unaff_s5;\n    *(int *)((int)register0x00000074 + -0x18) = unaff_s1;\n    *(undefined4 *)((int)register0x00000074 + -0x24) = *(undefined4 *)PTR___stack_chk_guard_004120a0\n    ;\n    unaff_s0 = (int *)(*(code *)PTR_malloc_0041208c)(400);\n    iVar6 = *(int *)((int)register0x00000074 + -0x40);\n    *unaff_s0 = 0;\n    unaff_s4 = (**(code **)(iVar6 + -0x7fac))(unaff_s0);\n    iVar6 = (**(code **)(*(int *)((int)register0x00000074 + -0x40) + -0x7fc4))(2,2,6);\n    iVar7 = *(int *)((int)register0x00000074 + -0x40);\n    if (iVar6 != -1) {\n      pcVar9 = *(code **)(iVar7 + -0x7fa4);\n      *(undefined4 *)((int)register0x00000074 + -0x30) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x2c) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x28) = 0;\n      *(undefined4 *)((int)register0x00000074 + -0x34) = 0x26987;\n      iVar7 = (*pcVar9)(iVar6,(undefined *)((int)register0x00000074 + -0x34),0x10);\n      iVar8 = *(int *)((int)register0x00000074 + -0x40);\n      unaff_s1 = iVar6;\n      if (iVar7 != -1) {\n        iVar7 = (**(code **)(iVar8 + -0x7fbc))(iVar6,5);\n        iVar8 = *(int *)((int)register0x00000074 + -0x40);\n        if (iVar7 != -1) {\n          unaff_s5 = (**(code **)(iVar8 + -0x7f8c))(iVar6,0,0);\n          iVar8 = *(int *)((int)register0x00000074 + -0x40);\n          if (unaff_s5 != -1) {\n            uVar2 = (**(code **)(iVar8 + -0x7fcc))\n                              (unaff_s5,unaff_s0 + unaff_s4,(99 - unaff_s4) * 4,0);\n            iVar7 = *(int *)((int)register0x00000074 + -0x40);\n            if (1 < uVar2 + 1) {\n              pcVar9 = *(code **)(iVar7 + -0x7fb8);\n              unaff_s0[(uVar2 >> 2) + unaff_s4] = 0;\n              puVar3 = (undefined4 *)(*pcVar9)(unaff_s0,0xd);\n              iVar7 = *(int *)((int)register0x00000074 + -0x40);\n              if (puVar3 != (undefined4 *)0x0) {\n                *puVar3 = 0;\n              }\n              puVar3 = (undefined4 *)(**(code **)(iVar7 + -0x7fb8))(unaff_s0,10);\n              iVar7 = *(int *)((int)register0x00000074 + -0x40);\n              if (puVar3 != (undefined4 *)0x0) {\n                *puVar3 = 0;\n              }\n            }\n            (**(code **)(iVar7 + -0x7fd0))(iVar6);\n            (**(code **)(*(int *)((int)register0x00000074 + -0x40) + -0x7fd0))(unaff_s5);\n            iVar7 = *(int *)((int)register0x00000074 + -0x40);\n            goto code_r0x00400dac;\n          }\n        }\n      }\n      (**(code **)(iVar8 + -0x7fd0))(iVar6);\n      iVar7 = *(int *)((int)register0x00000074 + -0x40);\n    }\ncode_r0x00400dac:\n    iVar6 = (**(code **)(iVar7 + -0x7fac))(unaff_s0);\n    iVar8 = *(int *)((int)register0x00000074 + -0x40);\n    piVar4 = unaff_s0;\n    for (iVar7 = 0; iVar6 != iVar7; iVar7 = iVar7 + 1) {\n      iVar5 = *piVar4;\n      piVar4 = piVar4 + 1;\n      if (iVar5 == 0x53) {\n        func_bb486502295b4488(&UNK_00401784);\n        iVar8 = *(int *)((int)register0x00000074 + -0x40);\n        break;\n      }\n    }\n    if (*(int *)((int)register0x00000074 + -0x24) == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400e14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (**(code **)(iVar8 + -0x7f7c))(unaff_s0);\n      return;\n    }\n    pcVar9 = CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_07_good;\n    (**(code **)(iVar8 + -0x7f88))();\n    *(code **)((int)register0x00000074 + -0x54) = pcVar9;\n    func_b6defda3950b44b1();\n    unaff_retaddr = *(undefined4 *)((int)register0x00000074 + -0x54);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x50);\n    unaff_s2 = puVar1;\n  } while( true );\n}\n\n",
        "\nvoid func_668529fe52ba442a(void)\n\n{\n  undefined *puStack_330;\n  undefined auStack_32c [396];\n  undefined4 uStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_wmemset_00412068)(auStack_32c,0x41,99);\n  uStack_1a0 = 0;\n  if (staticFive == 5) {\n    puStack_330 = auStack_32c;\n  }\n  (*(code *)PTR_wmemset_00412068)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_memmove_00412094)(auStack_19c,puStack_330,400);\n  uStack_10 = 0;\n  func_fa9eb23f71d24c35(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_fdd38b21faba4d2e\n               (undefined4 param_1)\n\n{\n  undefined auStack_38 [44];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  (*(code *)PTR_memcpy_00412088)(auStack_38,&UNK_00401a80,0x2c);\n  (*(code *)PTR_wcscpy_00412074)(param_1,auStack_38);\n  func_1a92651a23b14929(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e620f83e093d4f44(int **param_1)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  int *piVar3;\n  int *piVar4;\n  int *piVar5;\n  int iVar6;\n  int *piVar7;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int aiStack_14 [2];\n  \n  puVar2 = PTR___stack_chk_guard_00412084;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412084;\n  piVar7 = *param_1;\n  piVar3 = (int *)(*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  piVar4 = piVar3;\n  if (((uint)((int)piVar3 - (int)((int)piVar7 + 1)) < 3) || (((uint)piVar7 & 3) != 0)) {\n    do {\n      uVar1 = *(undefined *)piVar7;\n      piVar5 = (int *)((int)piVar4 + 1);\n      piVar7 = (int *)((int)piVar7 + 1);\n      *(undefined *)piVar4 = uVar1;\n      piVar4 = piVar5;\n    } while (piVar5 != aiStack_14);\n  }\n  else {\n    do {\n      iVar6 = *piVar7;\n      piVar5 = piVar4 + 1;\n      piVar7 = piVar7 + 1;\n      *piVar4 = iVar6;\n      piVar4 = piVar5;\n    } while (piVar5 != aiStack_14);\n  }\n  uStack_15 = 0;\n  func_94dbc320b1244803();\n  if (aiStack_14[0] != *(int *)puVar2) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n    if (piVar3 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f89a77b89ee747a2(int **param_1)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  int *piVar3;\n  int *piVar4;\n  int iVar5;\n  int *piVar6;\n  undefined uStack_78;\n  undefined auStack_77 [98];\n  undefined uStack_15;\n  int aiStack_14 [2];\n  \n  puVar2 = PTR___stack_chk_guard_00412084;\n  aiStack_14[0] = *(int *)PTR___stack_chk_guard_00412084;\n  piVar6 = *param_1;\n  piVar3 = (int *)(*(code *)PTR_memset_00412064)(&uStack_78,0x43,99);\n  uStack_15 = 0;\n  piVar4 = piVar6;\n  if ((((uint)piVar6 & 3) == 0) && (2 < (uint)((int)piVar6 - (int)auStack_77))) {\n    do {\n      iVar5 = *piVar3;\n      piVar3 = piVar3 + 1;\n      *piVar4 = iVar5;\n      piVar4 = piVar4 + 1;\n    } while (piVar3 != aiStack_14);\n  }\n  else {\n    do {\n      uVar1 = *(undefined *)piVar3;\n      piVar3 = (int *)((int)piVar3 + 1);\n      *(undefined *)piVar4 = uVar1;\n      piVar4 = (int *)((int)piVar4 + 1);\n    } while (piVar3 != aiStack_14);\n  }\n  *(undefined *)((int)piVar6 + 99) = 0;\n  func_3799a507805e4df5();\n  if (aiStack_14[0] != *(int *)puVar2) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n    if (piVar6 == (int *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_9c3b27096b574b40(int param_1)\n\n{\n  int iVar1;\n  int iStack_10;\n  \n  iVar1 = (*(code *)PTR_malloc_0041206c)(0x28);\n  for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n    *(undefined4 *)(iVar1 + iStack_10 * 4) = 0;\n  }\n  if ((param_1 < 0) || (9 < param_1)) {\n    func_28f4f1edb8ac4f2a(&UNK_00401c00);\n  }\n  else {\n    *(undefined4 *)(iVar1 + param_1 * 4) = 1;\n    for (iStack_10 = 0; iStack_10 < 10; iStack_10 = iStack_10 + 1) {\n      func_2e0a78c2fde8457d(*(undefined4 *)(iVar1 + iStack_10 * 4));\n    }\n  }\n  (*(code *)PTR_free_00412084)(iVar1);\n  return;\n}\n\n",
        "\nvoid func_b5415d870f9047d1(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_340 [400];\n  undefined *puStack_1b0;\n  undefined *puStack_1a4;\n  undefined *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_1b0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  puStack_1a0 = auStack_340;\n  (*(code *)PTR_wmemset_00412068)(puStack_1a0,0x41,99);\n  puVar1 = puStack_1b0;\n  *(undefined4 *)(puStack_1a0 + 0x18c) = 0;\n  if (staticFive == 5) {\n    puStack_1a4 = puStack_1a0;\n  }\n  (**(code **)(puVar1 + -0x7fc8))(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (**(code **)(puStack_1b0 + -0x7f9c))(auStack_19c,puStack_1a4,400);\n  uStack_10 = 0;\n  func_34879361a7564fe5(auStack_19c);\n  if (iStack_c != **(int **)(puStack_1b0 + -0x7fa0)) {\n    (**(code **)(puStack_1b0 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_48358255c2044884(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  undefined *puStack_88;\n  int iStack_80;\n  int iStack_7c;\n  int iStack_78;\n  undefined4 *puStack_74;\n  undefined4 uStack_70;\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041308c;\n  uStack_70 = 0;\n  (*(code *)PTR_memset_00413060)(auStack_6c,0,0x60);\n  puStack_74 = &uStack_70;\n  iVar2 = func_6e94c50058a745c0();\n  puVar1 = puStack_74;\n  if (iVar2 == 0) {\n    *(undefined *)puStack_74 = 0x31;\n    *(undefined *)((int)puVar1 + 1) = 0x35;\n    *(undefined *)((int)puVar1 + 2) = 0;\n  }\n  else {\n    func_b4cf0fffd3104c56(&UNK_00402044);\n  }\n  iVar2 = func_37c46e19a7404ad3();\n  if (iVar2 != 0) {\n    iVar2 = (**(code **)(puStack_88 + -0x7fbc))(puStack_74,&UNK_0040205c,&iStack_80);\n    if (iVar2 == 1) {\n      iStack_78 = 0;\n      for (iStack_7c = 0; iStack_7c < iStack_80; iStack_7c = iStack_7c + 1) {\n        iStack_78 = iStack_78 + 1;\n      }\n      func_2612dd7e12744adf(iStack_78);\n    }\n  }\n  if (iStack_c != **(int **)(puStack_88 + -0x7f94)) {\n    (**(code **)(puStack_88 + -0x7f9c))();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_797c3e14708c4fd0(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 *puVar5;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 uStack_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined2 uStack_10c;\n  undefined auStack_10a [246];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041209c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041209c;\n  uStack_110 = _UNK_00401470;\n  uStack_10c = _UNK_00401474;\n  (*(code *)PTR_memset_00412078)(auStack_10a,0,0xf4);\n  iVar2 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_11c = 0;\n    uStack_118 = 0;\n    uStack_114 = 0;\n    uStack_120._2_2_ = 0;\n    uStack_120._0_2_ = 2;\n    uStack_11c = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401434);\n    uStack_120 = func_b5168dacd6784b72(uStack_120._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_120,0x10);\n    if (iVar3 == -1) {\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n    else {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,(int)&uStack_10c + 1,0xf4,0);\n      if (1 < iVar3 + 1U) {\n        auStack_10a[iVar3 + -1] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_110,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412080)(&uStack_110,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n      (*(code *)PTR_close_00412050)(iVar2);\n    }\n  }\n  puVar5 = &uStack_110;\n  (*(code *)PTR_putenv_0041206c)();\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412094)();\n    if (puVar5 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c70. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041208c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_8a6bd952569f47f0(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_004011c8,0,5);\n  return;\n}\n\n",
        "\nvoid func_e29eb1f105744999(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined *unaff_s0;\n  undefined4 *unaff_s1;\n  undefined *puVar9;\n  undefined *unaff_s8;\n  undefined4 unaff_retaddr;\n  code *pcVar10;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412080;\n    puVar9 = (undefined *)((int)register0x00000074 + -0x90);\n    *(undefined **)((int)register0x00000074 + -0x10) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s8;\n    *(undefined4 **)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0x80) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -4) = unaff_retaddr;\n    unaff_s1 = (undefined4 *)((int)register0x00000074 + -0xe8);\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412080\n    ;\n    puVar2 = (undefined4 *)\n             (*(code *)PTR_memset_00412060)((undefined *)((int)register0x00000074 + -0x78),0x43,99);\n    *(undefined *)((int)register0x00000074 + -0x15) = 0;\n    puVar3 = unaff_s1;\n    do {\n      puVar4 = puVar3 + 4;\n      puVar5 = puVar2 + 4;\n      uVar8 = puVar2[1];\n      uVar7 = puVar2[2];\n      uVar6 = puVar2[3];\n      *puVar3 = *puVar2;\n      puVar3[1] = uVar8;\n      puVar3[2] = uVar7;\n      puVar3[3] = uVar6;\n      puVar3 = puVar4;\n      puVar2 = puVar5;\n    } while (puVar5 != (undefined4 *)((int)register0x00000074 + -0x18));\n    *puVar4 = *puVar5;\n    func_b3800b6726b64c24(unaff_s1);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    pcVar10 = CWE124_Buffer_Underwrite__char_alloca_memmove_06_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x80) + -0x7fa8))();\n    *(code **)((int)register0x00000074 + -0xfc) = pcVar10;\n    func_e29eb1f105744999();\n    unaff_retaddr = *(undefined4 *)((int)register0x00000074 + -0xfc);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0xf8);\n    unaff_s0 = puVar1;\n    unaff_s8 = puVar9;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_cae7a3ff89ce4a64(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined4 auStack_404 [4];\n  undefined4 uStack_3f4;\n  undefined4 uStack_3f0;\n  undefined auStack_3ec [976];\n  int iStack_1c;\n  \n  puVar1 = PTR___stack_chk_guard_00412090;\n  iStack_1c = *(int *)PTR___stack_chk_guard_00412090;\n  auStack_404[0] = _UNK_00401440;\n  auStack_404[1] = _UNK_00401444;\n  auStack_404[2] = _UNK_00401448;\n  auStack_404[3] = _UNK_0040144c;\n  uStack_3f4 = _UNK_00401450;\n  uStack_3f0 = _UNK_00401454;\n  (*(code *)PTR_memset_00412070)(auStack_3ec,0,0x3d0);\n  if (*(int *)PTR_globalTrue_00412040 != 0) {\n    iVar2 = (*(code *)PTR_wcslen_0041206c)(auStack_404);\n    if ((1 < 0xfaU - iVar2) &&\n       (iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_004013f8,&UNK_004013f4), iVar3 != 0)) {\n      puVar4 = auStack_404 + iVar2;\n      iVar2 = (*(code *)PTR___fgetws_chk_0041209c)(puVar4,0x3fffffff,0xfaU - iVar2,iVar3);\n      if (iVar2 == 0) {\n        func_b6cfbc41c9b64400(&UNK_00401408);\n        *puVar4 = 0;\n      }\n      (*(code *)PTR_fclose_0041205c)(iVar3);\n    }\n  }\n  puVar4 = auStack_404;\n  (*(code *)PTR_putenv_00412060)();\n  if (iStack_1c != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n    if (puVar4 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c50. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412080)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_6f61072bab7a479a(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined *unaff_s0;\n  undefined4 unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar4;\n  undefined *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    uVar3 = param_1;\n    puVar1 = PTR___stack_chk_guard_0041209c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(undefined **)((int)register0x00000074 + -0x10) = unaff_s0;\n    unaff_s0 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041209c\n    ;\n    (*(code *)PTR_wmemset_00412070)(unaff_s0,0x43,99);\n    pcVar4 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fa4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    uVar2 = (*pcVar4)(unaff_s0);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fbc))(uVar3,unaff_s0,uVar2);\n    param_1 = uVar3;\n    func_55db7891c2234362();\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = &UNK_00400c2c;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f8c))();\n    unaff_s1 = uVar3;\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_4c7e4df483794caf(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  code **ppcVar5;\n  code *pcVar6;\n  undefined auStack_d0 [99];\n  undefined uStack_6d;\n  int iStack_6c;\n  undefined *puStack_64;\n  undefined auStack_40 [52];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puVar4 = auStack_40;\n  auStack_40[0] = 0;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  func_5e3bf71df30a42f9();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar2 = PTR___stack_chk_guard_0041208c;\n  puStack_64 = puVar1;\n  iStack_6c = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar3 = (*(code *)PTR_memset_00412068)(auStack_d0,0x43,99);\n  uStack_6d = 0;\n  (*(code *)PTR_strcat_00412080)(puVar4,uVar3);\n  func_5afd2a4a55bf47b4(puVar4);\n  if (iStack_6c == *(int *)puVar2) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (___CTOR_LIST__ != (code *)0xffffffff) {\n    ppcVar5 = (code **)&__CTOR_LIST__;\n    pcVar6 = ___CTOR_LIST__;\n    do {\n      ppcVar5 = ppcVar5 + -1;\n      (*pcVar6)();\n      pcVar6 = *ppcVar5;\n    } while (pcVar6 != (code *)0xffffffff);\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_59b273a51c5f418c(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined auStack_148 [56];\n  undefined *puStack_110;\n  undefined auStack_108 [99];\n  undefined uStack_a5;\n  int iStack_a4;\n  undefined4 uStack_a0;\n  undefined *puStack_9c;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar3 = PTR___stack_chk_guard_00412088;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_strcat_0041207c)(param_1,uVar2);\n  func_1756eeeb834c434b(param_1);\n  if (iStack_14 == *(int *)puVar3) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  puVar1 = PTR___stack_chk_guard_00412088;\n  puStack_110 = &_gp;\n  puStack_9c = puVar3;\n  puVar3 = auStack_148;\n  auStack_148[0] = 0;\n  iStack_a4 = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_a0 = param_1;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_108,0x43,99);\n  uStack_a5 = 0;\n  (**(code **)(puStack_110 + -0x7fc4))(puVar3,uVar2,0x32);\n  func_1756eeeb834c434b();\n  if (iStack_a4 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_110 + -0x7fa0))();\n  if (puVar3 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d1cc50622b5f4335(void)\n\n{\n  int iStack_dc;\n  int *piStack_d8;\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  for (iStack_dc = 0; iStack_dc < 1; iStack_dc = iStack_dc + 1) {\n    piStack_d8 = &iStack_dc;\n  }\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_memcpy_00412080)(auStack_70,piStack_d8,100);\n  uStack_d = 0;\n  func_63fe3f5038764e82(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041207c) {\n    (*(code *)PTR___stack_chk_fail_00412074)();\n  }\n  return;\n}\n\n",
        "\nvoid func_96aa5bf6481c4d8f(void)\n\n{\n  int iVar1;\n  int iStack_1a8;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412060)(auStack_198,0,0x18c);\n  for (iStack_1a8 = 0; iStack_1a8 < 1; iStack_1a8 = iStack_1a8 + 1) {\n    (*(code *)PTR_wcscpy_00412078)(&uStack_19c,&UNK_004019e0);\n  }\n  iVar1 = (*(code *)PTR_popen_00412058)(&uStack_19c,&UNK_004019fc);\n  if (iVar1 != 0) {\n    (*(code *)PTR_pclose_0041204c)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ef23af94e02a435d(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_32c [400];\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  (*(code *)PTR_wmemset_0041206c)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  uVar1 = (*(code *)PTR_wcslen_00412074)(auStack_19c);\n  (*(code *)PTR_wcsncat_00412064)(auStack_32c,auStack_19c,uVar1);\n  func_19c3353c11a94e55(auStack_32c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n",
        "\nvoid func_3c90d8a37c304120(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar1 = *(undefined4 *)PTR_CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData_00412040;\n  (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  (*(code *)PTR_strcat_0041207c)(uVar1,auStack_70);\n  func_0b934dbe8f9a4da6(uVar1);\n  (*(code *)PTR_free_00412090)(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_53246d6d831441ab(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  \n  puVar1 = (undefined *)(*(code *)PTR_malloc_00412074)(100);\n  *puVar1 = 0;\n  iVar2 = (*(code *)PTR_strlen_00412064)(puVar1);\n  if (1 < 100U - iVar2) {\n    iVar3 = (*(code *)PTR_fopen_00412098)(&UNK_00401b74,&UNK_00401b70);\n    if (iVar3 != 0) {\n      iVar4 = (*(code *)PTR_fgets_00412088)(puVar1 + iVar2,100 - iVar2,iVar3);\n      if (iVar4 == 0) {\n        func_52831949ae5f412f(&UNK_00401b84);\n        puVar1[iVar2] = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iVar3);\n    }\n  }\n  func_d156baaaf3284d0f(puVar1);\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0175b2a1afe54bb0(void)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar5 = (*(code *)PTR_calloc_0041204c)(0x14,1);\n  uVar4 = _UNK_00401934;\n  uVar3 = _UNK_00401930;\n  uVar1 = uVar5 & 3;\n  *(uint *)(uVar5 - uVar1) =\n       *(uint *)(uVar5 - uVar1) & -1 << (4 - uVar1) * 8 | _UNK_00401930 >> uVar1 * 8;\n  uVar1 = uVar5 + 3 & 3;\n  puVar2 = (uint *)((uVar5 + 3) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar3 << (3 - uVar1) * 8;\n  uVar1 = uVar5 + 4 & 3;\n  puVar2 = (uint *)((uVar5 + 4) - uVar1);\n  *puVar2 = *puVar2 & -1 << (4 - uVar1) * 8 | uVar4 >> uVar1 * 8;\n  uVar1 = uVar5 + 7 & 3;\n  puVar2 = (uint *)((uVar5 + 7) - uVar1);\n  *puVar2 = *puVar2 & 0xffffffffU >> (uVar1 + 1) * 8 | uVar4 << (3 - uVar1) * 8;\n  *(undefined *)(uVar5 + 8) = UNK_00401938;\n  *(undefined *)(uVar5 + 9) = UNK_00401939;\n  *(undefined *)(uVar5 + 10) = UNK_0040193a;\n  func_04fa67b3f04b40d3(uVar5);\n  (*(code *)PTR_free_00412080)(uVar5);\n  return;\n}\n\n",
        "\nvoid func_a29d91baf25249c6(void)\n\n{\n  undefined4 *apuStack_28 [2];\n  undefined *puStack_20;\n  undefined4 **ppuStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  if (staticFive == 5) {\n    ppuStack_14 = apuStack_28;\n    puStack_10 = apuStack_28[0];\n    func_9d57d0922fe5442f(*apuStack_28[0]);\n    func_9d57d0922fe5442f(puStack_10[1]);\n  }\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa4)) {\n    (**(code **)(puStack_20 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_70b0c305be284123(void)\n\n{\n  undefined *puVar1;\n  undefined **ppuVar2;\n  undefined **ppuVar3;\n  undefined *apuStack_1b0 [100];\n  undefined *apuStack_20 [3];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  apuStack_20[0] = &_gp;\n  ppuVar3 = apuStack_1b0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  ppuVar2 = ppuVar3;\n  do {\n    *ppuVar2 = (undefined *)0x5;\n    ppuVar2 = ppuVar2 + 1;\n  } while (ppuVar2 != apuStack_20);\n  func_27748037523d42e8(apuStack_1b0[0]);\n  (**(code **)(apuStack_20[0] + -0x7f9c))();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(apuStack_20[0] + -0x7fa8))();\n  if (ppuVar3 != (undefined **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ac0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_d0bc9afb12e14812(void)\n\n{\n  int iVar1;\n  undefined *puStack_18;\n  int iStack_14;\n  int iStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_18 = (undefined *)(*(code *)PTR_malloc_00412074)(100);\n  *puStack_18 = 0;\n  iStack_14 = (*(code *)PTR_strlen_00412064)(puStack_18);\n  if (1 < 100U - iStack_14) {\n    iStack_10 = (*(code *)PTR_fopen_00412098)(&UNK_00401bc4,&UNK_00401bc0);\n    if (iStack_10 != 0) {\n      iVar1 = (*(code *)PTR_fgets_00412088)(puStack_18 + iStack_14,100 - iStack_14,iStack_10);\n      if (iVar1 == 0) {\n        func_ab07b76391a24e11(&UNK_00401bd4);\n        puStack_18[iStack_14] = 0;\n      }\n      (*(code *)PTR_fclose_00412058)(iStack_10);\n    }\n  }\n  func_f889b98040a74c3a(&puStack_18);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_026be49410a043b2(int param_1)\n\n{\n  uint uStack_78;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_0041205c)(auStack_70,0x43,99);\n  for (uStack_78 = 0; uStack_78 < 100; uStack_78 = uStack_78 + 1) {\n    auStack_70[uStack_78] = *(undefined *)(param_1 + uStack_78);\n  }\n  auStack_70[99] = 0;\n  func_5fdfc8b301634983(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nundefined4 * CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_61d21829b5c74f9c(puVar1);\n  return puVar1;\n}\n\n",
        "\nvoid func_c3825f8343054aaf(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412074)(4);\n  puVar2 = (undefined4 *)*puVar1;\n  (*(code *)PTR_free_00412088)(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400b14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_0041205c)(1,&UNK_00401270,*puVar2);\n  return;\n}\n\n",
        "\nvoid func_80e6516ad5e04c42(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined auStack_74 [96];\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_004120a0;\n  uStack_78 = 0;\n  iStack_14 = *(int *)PTR___stack_chk_guard_004120a0;\n  (*(code *)PTR_memset_0041207c)(auStack_74,0,0x60);\n  iVar2 = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iVar2 != -1) {\n    uStack_84 = 0;\n    uStack_80 = 0;\n    uStack_7c = 0;\n    uStack_88._2_2_ = 0;\n    uStack_88._0_2_ = 2;\n    uStack_84 = (*(code *)PTR_inet_addr_0041205c)(&UNK_00401454);\n    uStack_88 = func_c5dfed63931a4c35(uStack_88._0_2_,0x6987);\n    iVar3 = (*(code *)PTR_connect_00412058)(iVar2,&uStack_88,0x10);\n    if (iVar3 != -1) {\n      iVar3 = (*(code *)PTR_recv_00412054)(iVar2,&uStack_78,99,0);\n      if (1 < iVar3 + 1U) {\n        auStack_74[iVar3 + -4] = 0;\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,0xd);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n        puVar4 = (undefined *)(*(code *)PTR_strchr_00412084)(&uStack_78,10);\n        if (puVar4 != (undefined *)0x0) {\n          *puVar4 = 0;\n        }\n      }\n    }\n    (*(code *)PTR_close_00412050)(iVar2);\n  }\n  iVar2 = *(int *)PTR_stdout_00412074;\n  (*(code *)PTR___fprintf_chk_00412064)(iVar2,1,&uStack_78);\n  if (iStack_14 != *(int *)puVar1) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n    if (iVar2 == 0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400c90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412090)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_b5fb7530bf7041ce(void)\n\n{\n  undefined4 uVar1;\n  undefined2 uVar2;\n  undefined uVar3;\n  undefined4 *puVar4;\n  \n  puVar4 = (undefined4 *)(*(code *)PTR_malloc_00412074)(0x14);\n  uVar3 = UNK_0040122e;\n  uVar2 = _UNK_0040122c;\n  uVar1 = _UNK_00401228;\n  if (*(int *)PTR_globalFive_00412040 != 5) {\n    return;\n  }\n  *puVar4 = _UNK_00401224;\n  puVar4[1] = uVar1;\n  *(undefined2 *)(puVar4 + 2) = uVar2;\n  *(undefined *)((int)puVar4 + 10) = uVar3;\n  func_c63d3a854974460e(puVar4);\n                    /* WARNING: Could not recover jumptable at 0x00400a9c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_00412088)(puVar4);\n  return;\n}\n\n",
        "\nvoid func_08ff95b98ddd4b94(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iStack_38;\n  undefined4 ****ppppuStack_2c;\n  undefined4 ****ppppuStack_28;\n  undefined4 ****ppppuStack_24;\n  undefined4 ****ppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  ppppuStack_2c = &ppppuStack_24;\n  ppppuStack_28 = &ppppuStack_24;\n  ppppuStack_24 = &ppppuStack_2c;\n  ppppuStack_20 = &ppppuStack_2c;\n  iStack_38 = -1;\n  iVar1 = (*(code *)PTR_socket_00412064)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412070)(&uStack_1c,0,0x10);\n    uStack_1c = 2;\n    uStack_18 = 0;\n    uStack_1a = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar2 = (*(code *)PTR_bind_00412078)(iVar1,&uStack_1c,0x10);\n    if (((iVar2 != -1) && (iVar2 = (*(code *)PTR_listen_00412068)(iVar1,5), iVar2 != -1)) &&\n       (iStack_38 = (*(code *)PTR_accept_0041208c)(iVar1,0,0), iStack_38 != -1)) {\n      (*(code *)PTR_recv_0041205c)(iStack_38,&ppppuStack_2c,8,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_38 != -1) {\n    (*(code *)PTR_close_00412058)(iStack_38);\n  }\n  func_871903f3fad145f3(ppppuStack_2c,ppppuStack_28);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_332de31ca3a74996(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 *unaff_s0;\n  undefined4 *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar8;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_0041208c;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 **)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined4 **)((int)register0x00000074 + -0x10) = unaff_s0;\n    unaff_s0 = (undefined4 *)((int)register0x00000074 + -0x1a4);\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041208c\n    ;\n    func_189d708394e340f6();\n    unaff_s1 = (undefined4 *)\n               (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fa4))(400);\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fc0))(unaff_s1,0x41,99);\n    pcVar8 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7fc0);\n    unaff_s1[99] = 0;\n    (*pcVar8)(unaff_s0,0x43,99);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    puVar2 = unaff_s1;\n    puVar3 = unaff_s0;\n    do {\n      puVar4 = puVar3 + 4;\n      uVar7 = puVar3[1];\n      uVar6 = puVar3[2];\n      uVar5 = puVar3[3];\n      *puVar2 = *puVar3;\n      puVar2[1] = uVar7;\n      puVar2[2] = uVar6;\n      puVar2[3] = uVar5;\n      puVar2 = puVar2 + 4;\n      puVar3 = puVar4;\n    } while (puVar4 != (undefined4 *)((int)register0x00000074 + -0x14));\n    func_0346990e85ec41af(unaff_s1);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE124_Buffer_Underwrite__malloc_wchar_t_memcpy_12_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f9c))();\n    unaff_s2 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\nvoid func_91fb80925a5d462a(int *param_1)\n\n{\n  int iVar1;\n  uint uStack_1a8;\n  undefined4 auStack_19c [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  iVar1 = *param_1;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x43,99);\n  for (uStack_1a8 = 0; uStack_1a8 < 100; uStack_1a8 = uStack_1a8 + 1) {\n    auStack_19c[uStack_1a8] = *(undefined4 *)(iVar1 + uStack_1a8 * 4);\n  }\n  auStack_19c[99] = 0;\n  func_6ca2a1dd51c44f81(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_578642aeb4cf488e(void)\n\n{\n  int iVar1;\n  undefined auStack_19c [64];\n  undefined auStack_15c [336];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_memcpy_00412090)(auStack_19c,&UNK_00401c34,0x40);\n  (*(code *)PTR_memset_00412060)(auStack_15c,0,0x150);\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    (*(code *)PTR_wcscat_00412058)(auStack_19c,&UNK_00401c08);\n  }\n  else {\n    func_e507dba81fb64fd7(&UNK_00401bf0);\n  }\n  iVar1 = (*(code *)PTR_system_00412074)(auStack_19c);\n  if (iVar1 < 1) {\n    func_e507dba81fb64fd7(&UNK_00401c18);\n    (*(code *)PTR_exit_0041206c)(1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_a72dd64e84cc4acb(void)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int iVar3;\n  int iStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412088;\n  iStack_18 = -1;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412088;\n  (*(code *)PTR___isoc99_fscanf_00412094)\n            (*(undefined4 *)PTR_stdin_0041206c,&UNK_004012a4,&iStack_18);\n  piVar2 = (int *)(*(code *)PTR_calloc_00412050)(iStack_18 << 2,1);\n  iVar3 = *piVar2;\n  func_2782583f78d04b51();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_0041208c)(piVar2);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412080)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_07f2812da7c24cc5(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar2;\n  undefined4 unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412088;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s2;\n    *(undefined **)((int)register0x00000074 + -0x10) = unaff_s0;\n    unaff_s0 = (undefined *)((int)register0x00000074 + -0x334);\n    *(undefined4 *)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s1;\n    *(undefined **)((int)register0x00000074 + -0x340) = &_gp;\n    unaff_s1 = (undefined *)((int)register0x00000074 + -0x1a4);\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412088\n    ;\n    (*(code *)PTR_wmemset_0041205c)(unaff_s0,0x41,99);\n    pcVar2 = *(code **)(*(int *)((int)register0x00000074 + -0x340) + -0x7fc4);\n    *(undefined4 *)((int)register0x00000074 + -0x1a8) = 0;\n    (*pcVar2)(unaff_s1,0x43,99);\n    pcVar2 = *(code **)(*(int *)((int)register0x00000074 + -0x340) + -0x7fa4);\n    *(undefined4 *)((int)register0x00000074 + -0x18) = 0;\n    (*pcVar2)(unaff_s0,unaff_s1,99);\n    *(undefined4 *)((int)register0x00000074 + -0x1a8) = 0;\n    func_6942d98bfa8b4b8b(unaff_s0);\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    pcVar2 = CWE124_Buffer_Underwrite__wchar_t_declare_ncpy_06_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x340) + -0x7fa0))();\n    *(code **)((int)register0x00000074 + -0x354) = pcVar2;\n    func_07f2812da7c24cc5();\n    unaff_retaddr = *(undefined4 *)((int)register0x00000074 + -0x354);\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x350);\n    unaff_s2 = puVar1;\n  }\n  return;\n}\n\n",
        "\nvoid func_22debdcbc7c644fc(int *param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  iVar3 = *param_1;\n  uVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  (*(code *)PTR_memmove_00412088)(iVar3,uVar2,100);\n  func_f4d3ce43601f4e96();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b10. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7d53883b39a241d3(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *unaff_s0;\n  undefined *unaff_s1;\n  undefined *unaff_s2;\n  code *pcVar4;\n  undefined *puVar5;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  puVar2 = (undefined4 *)(*(code *)PTR_malloc_00412088)(200);\n  *puVar2 = 0;\n  puVar5 = (undefined *)register0x00000074;\n  while( true ) {\n    puVar3 = puVar2;\n    puVar1 = PTR___stack_chk_guard_0041209c;\n    *(undefined **)(puVar5 + -8) = unaff_s2;\n    *(undefined **)(puVar5 + -0xc) = unaff_s1;\n    unaff_s1 = puVar5 + -0x1a4;\n    *(code **)(puVar5 + -4) = unaff_retaddr;\n    *(undefined4 **)(puVar5 + -0x10) = unaff_s0;\n    *(undefined **)(puVar5 + -0x1b0) = &_gp;\n    *(undefined4 *)(puVar5 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_0041209c;\n    (*(code *)PTR_wmemset_0041206c)(unaff_s1,0x43,99);\n    pcVar4 = *(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f90);\n    *(undefined4 *)(puVar5 + -0x18) = 0;\n    (*pcVar4)(puVar3,unaff_s1);\n    puVar2 = puVar3;\n    func_9402069227f24af9();\n    if (*(int *)(puVar5 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_54d_badSink;\n    (**(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f8c))();\n    unaff_s0 = puVar3;\n    unaff_s2 = puVar1;\n    puVar5 = puVar5 + -0x1c0;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00400c8c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(*(int *)(puVar5 + -0x1b0) + -0x7f80))(puVar3);\n  return;\n}\n\n",
        "\nvoid func_f920f5ad302d4f26(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412088;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -0x338) = &_gp;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = *(undefined4 *)PTR___stack_chk_guard_00412088;\n    func_1dec7ceb58a7436f\n              ((undefined *)((int)register0x00000074 + -0x32c));\n    if (*(int *)((int)register0x00000074 + -0xc) == *(int *)puVar1) break;\n    unaff_retaddr = CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_52_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x338) + -0x7fa0))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x348);\n  }\n  return;\n}\n\n",
        "\nvoid func_0982a9142e5b4ad3(void)\n\n{\n  undefined auStack_88 [104];\n  undefined *puStack_20;\n  undefined *puStack_14;\n  undefined *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_14 = auStack_88;\n  (*(code *)PTR_memset_0041205c)(puStack_14,0x41,99);\n  puStack_14[99] = 0;\n  puStack_10 = puStack_14 + -8;\n  func_ff8703ec9a9a465e(puStack_10);\n  if (iStack_c != **(int **)(puStack_20 + -0x7fa0)) {\n    (**(code **)(puStack_20 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nundefined4\nfunc_b0e42e6ac6c84747(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (goodG2B1Static == 0) {\n    (*(code *)PTR_wcscat_00412054)(param_1,&UNK_00401bc8,param_3,param_4,&_gp);\n  }\n  else {\n    func_3ffdc88dc8114cdb(&UNK_00401bb0);\n  }\n  return param_1;\n}\n\n",
        "\nundefined4\nfunc_fb1815932fb6477b(undefined4 param_1)\n\n{\n  undefined4 uStackX_0;\n  \n  uStackX_0 = param_1;\n  if (*(int *)\n       PTR_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_22_goodG2B2Global_00412048 != 0)\n  {\n    uStackX_0 = (*(code *)PTR_malloc_0041207c)(0xb);\n  }\n  return uStackX_0;\n}\n\n",
        "\nvoid func_3f4a8803f67c460c(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  ushort uStack_74;\n  undefined auStack_70 [49];\n  undefined uStack_3f;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  if (staticFive == 5) {\n    (*(code *)PTR_memset_00412068)(auStack_70,0x41,0x31);\n    uStack_3f = 0;\n  }\n  else {\n    func_b412527bd0ca4a16(&UNK_00401b60);\n  }\n  uStack_a4 = 0;\n  uStack_a0 = 0;\n  uStack_9c = 0;\n  uStack_98 = 0;\n  uStack_94 = 0;\n  uStack_90 = 0;\n  uStack_8c = 0;\n  uStack_88 = 0;\n  uStack_84 = 0;\n  uStack_80 = 0;\n  uStack_7c = 0;\n  uStack_78 = 0;\n  uStack_74 = 0;\n  uVar1 = (*(code *)PTR_strlen_00412070)(auStack_70);\n  (*(code *)PTR_memcpy_00412094)(&uStack_a4,auStack_70,uVar1);\n  uStack_74 = uStack_74 & 0xff00;\n  func_b412527bd0ca4a16(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_f97f3958a29f484d(int param_1)\n\n{\n  char cVar1;\n  char *pcVar2;\n  \n  pcVar2 = *(char **)(param_1 + 8);\n  cVar1 = *pcVar2;\n  do {\n    if (cVar1 == '\\0') {\ncode_r0x00400b04:\n                    /* WARNING: Could not recover jumptable at 0x00400b14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*(code *)PTR_free_00412094)(pcVar2);\n      return;\n    }\n    if (cVar1 == 'S') {\n      func_ada85e5328d144b6(&UNK_004013b4);\n      goto code_r0x00400b04;\n    }\n    cVar1 = pcVar2[1];\n    pcVar2 = pcVar2 + 1;\n  } while( true );\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid func_14c8f888d42e4271(void)\n\n{\n  undefined *puStack_28;\n  undefined4 uStack_20;\n  undefined4 *puStack_1c;\n  undefined4 *puStack_18;\n  undefined4 uStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_28 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_1c = &uStack_20;\n  puStack_18 = &uStack_20;\n  uStack_20 = 0;\n  uStack_14 = 0;\n  uStack_14 = (*(code *)PTR_calloc_00412050)(1,4);\n  *puStack_1c = uStack_14;\n  puStack_10 = (undefined4 *)*puStack_18;\n  *puStack_10 = 5;\n  func_5a1e19ad242e4088(*puStack_10);\n  (**(code **)(puStack_28 + -0x7f9c))(puStack_10);\n  if (iStack_c != **(int **)(puStack_28 + -0x7fa0)) {\n    (**(code **)(puStack_28 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_f898226039d24379(void)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)(800);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_78d74e6799094b01(puVar1);\n  func_3d3a47fe6081457e(puVar1);\n  return;\n}\n\n",
        "\nvoid func_802a7a68c3164bc2(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined auStack_1b0 [8];\n  undefined *puStack_1a8;\n  undefined auStack_19c [400];\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_1a8 = auStack_19c;\n  puVar2 = auStack_1b0;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  func_754794784e4a4cc1();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (puVar2 != (undefined *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400ae0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_02c9051cdf5a4b56(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined4 **ppuVar2;\n  undefined4 uVar3;\n  undefined4 auStack_2a8 [50];\n  undefined *puStack_1e0;\n  undefined4 *puStack_1d8;\n  int iStack_1d4;\n  undefined *puStack_1cc;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  uVar3 = *param_1;\n  (*(code *)PTR_wmemset_00412060)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (*(code *)PTR_wcscpy_00412080)(uVar3,auStack_1a4);\n  func_66e74658c3004016(uVar3);\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  puVar1 = PTR___stack_chk_guard_0041208c;\n  puStack_1e0 = &_gp;\n  ppuVar2 = &puStack_1d8;\n  puStack_1d8 = auStack_2a8;\n  auStack_2a8[0] = 0;\n  iStack_1d4 = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_1cc = auStack_1a4;\n  func_02c9051cdf5a4b56();\n  if (iStack_1d4 == *(int *)puVar1) {\n    return;\n  }\n  (**(code **)(puStack_1e0 + -0x7f9c))();\n  if (ppuVar2 != (undefined4 **)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_78c81f64764d44e8(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_d4 [100];\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  uVar2 = (*(code *)PTR_memset_00412060)(auStack_70,0x43,99);\n  uStack_d = 0;\n  iVar3 = (*(code *)PTR__MIPS_STUBS__00412094)(auStack_d4,uVar2,100);\n  func_d48ec7f289f4478e();\n  if (iStack_c == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (iVar3 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_796540dcbc26482d(void)\n\n{\n  undefined auStack_278 [400];\n  undefined4 auStack_e8 [50];\n  undefined *puStack_20;\n  undefined4 *puStack_18;\n  undefined *puStack_14;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_20 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  puStack_18 = auStack_e8;\n  puStack_14 = auStack_278;\n  auStack_e8[0] = 0;\n  puStack_10 = puStack_18;\n  func_541adcc0e5b14438(puStack_18);\n  if (iStack_c != **(int **)(puStack_20 + -0x7f94)) {\n    (**(code **)(puStack_20 + -0x7f9c))();\n  }\n  return;\n}\n\n",
        "\nvoid func_b1cdb0ace020486c(void)\n\n{\n  undefined4 *puVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(200);\n  *puVar1 = 0;\n  (*(code *)PTR_wmemset_00412058)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscpy_00412078)(puVar1,auStack_19c);\n  func_9b19a66b155c478f(puVar1);\n  (*(code *)PTR_free_0041208c)(puVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_27428d224a764f9d(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined auStack_70 [4];\n  undefined auStack_6c [96];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  auStack_70 = (undefined  [4])0x0;\n  (*(code *)PTR_memset_0041205c)(auStack_6c,0,0x60);\n  iVar3 = (*(code *)PTR_strlen_00412064)(auStack_70);\n  uVar2 = _UNK_004019d0;\n  puVar4 = auStack_70 + iVar3;\n  uVar1 = (uint)puVar4 & 3;\n  *(uint *)(puVar4 + -uVar1) =\n       *(uint *)(puVar4 + -uVar1) & -1 << (4 - uVar1) * 8 | _UNK_004019d0 >> uVar1 * 8;\n  puVar4 = auStack_6c + iVar3 + -1;\n  uVar1 = (uint)puVar4 & 3;\n  *(uint *)(puVar4 + -uVar1) =\n       *(uint *)(puVar4 + -uVar1) & 0xffffffffU >> (uVar1 + 1) * 8 | uVar2 << (3 - uVar1) * 8;\n  (*(code *)PTR_execl_00412058)\n            (&UNK_004019dc,&UNK_004019dc,&UNK_004019d8,&UNK_004019d4,auStack_70,0);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412084) {\n    (*(code *)PTR___stack_chk_fail_0041207c)();\n  }\n  return;\n}\n\n",
        "\nvoid func_30ce0662a79a4be2(void)\n\n{\n  return;\n}\n\n",
        "\nvoid func_76db37aa937c4c5a\n               (uint param_1,undefined4 param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint uVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint in_t0;\n  uint auStack_70 [24];\n  undefined uStack_d;\n  uint uStack_c;\n  \n  puVar5 = PTR___stack_chk_guard_00412084;\n  puVar10 = auStack_70;\n  uVar11 = *(uint *)PTR___stack_chk_guard_00412084;\n  uVar7 = param_1;\n  puVar8 = puVar10;\n  uStack_c = uVar11;\n  do {\n    uVar6 = uVar7;\n    uVar7 = uVar6 + 4 & 3;\n    puVar9 = puVar8 + 4;\n    uVar1 = uVar6 + 8 & 3;\n    uVar2 = uVar6 + 0xc & 3;\n    uVar3 = uVar6 & 3;\n    uVar4 = uVar6 + 7 & 3;\n    in_t0 = (*(int *)((uVar6 + 4) - uVar7) << uVar7 * 8 | in_t0 & 0xffffffffU >> (4 - uVar7) * 8) &\n            -1 << (uVar4 + 1) * 8 | *(uint *)((uVar6 + 7) - uVar4) >> (3 - uVar4) * 8;\n    uVar7 = uVar6 + 0xb & 3;\n    param_4 = (*(int *)((uVar6 + 8) - uVar1) << uVar1 * 8 | param_4 & 0xffffffffU >> (4 - uVar1) * 8\n              ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xb) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0xf & 3;\n    uVar11 = (*(int *)((uVar6 + 0xc) - uVar2) << uVar2 * 8 | uVar11 & 0xffffffffU >> (4 - uVar2) * 8\n             ) & -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 0xf) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 3 & 3;\n    param_3 = (*(int *)(uVar6 - uVar3) << uVar3 * 8 | param_3 & 0xffffffffU >> (4 - uVar3) * 8) &\n              -1 << (uVar7 + 1) * 8 | *(uint *)((uVar6 + 3) - uVar7) >> (3 - uVar7) * 8;\n    uVar7 = uVar6 + 0x10;\n    puVar8[1] = in_t0;\n    puVar8[2] = param_4;\n    *puVar8 = param_3;\n    puVar8[3] = uVar11;\n    puVar8 = puVar9;\n  } while (uVar7 != param_1 + 0x60);\n  uVar1 = uVar7 & 3;\n  uVar2 = uVar6 + 0x13 & 3;\n  *puVar9 = (*(int *)(uVar7 - uVar1) << uVar1 * 8 | uVar11 & 0xffffffffU >> (4 - uVar1) * 8) &\n            -1 << (uVar2 + 1) * 8 | *(uint *)((uVar6 + 0x13) - uVar2) >> (3 - uVar2) * 8;\n  uStack_d = 0;\n  func_ad126cace264406a();\n  if (uStack_c == *(uint *)puVar5) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar10 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400af0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_f62aaec584a44ab8(void)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  \n  iVar2 = func_0604873066e74c22();\n  if (iVar2 == 0) {\n    return;\n  }\n  pcVar3 = (char *)(*(code *)PTR_malloc_00412078)(1);\n  cVar1 = *pcVar3;\n  (*(code *)PTR_free_0041208c)(pcVar3);\n                    /* WARNING: Could not recover jumptable at 0x00400c40. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR___printf_chk_00412060)(1,&UNK_004012f8,(int)cVar1);\n  return;\n}\n\n",
        "\nvoid func_eda13fa228c44e84(void)\n\n{\n  int iVar1;\n  undefined auStack_340 [400];\n  undefined *puStack_1b0;\n  undefined *puStack_1a4;\n  undefined *puStack_1a0;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  puStack_1b0 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_1a0 = auStack_340;\n  (*(code *)PTR_wmemset_00412058)(puStack_1a0,0x41,99);\n  *(undefined4 *)(puStack_1a0 + 0x18c) = 0;\n  iVar1 = func_d51aedccea614842();\n  if (iVar1 != 0) {\n    puStack_1a4 = puStack_1a0;\n  }\n  (**(code **)(puStack_1b0 + -0x7fc8))(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (**(code **)(puStack_1b0 + -0x7f9c))(auStack_19c,puStack_1a4,400);\n  uStack_10 = 0;\n  func_60a0441e4b0349d6(auStack_19c);\n  if (iStack_c != **(int **)(puStack_1b0 + -0x7fa0)) {\n    (**(code **)(puStack_1b0 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_bd78174eb4ee46f5(void)\n\n{\n  undefined4 uStack_338;\n  undefined4 uStack_334;\n  undefined *puStack_18;\n  undefined4 *puStack_10;\n  int iStack_c;\n  \n  puStack_18 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  puStack_10 = &uStack_338;\n  uStack_338 = 0;\n  uStack_334 = 0;\n  func_cf4dc9aa88eb4798(puStack_10);\n  if (iStack_c != **(int **)(puStack_18 + -0x7fa0)) {\n    (**(code **)(puStack_18 + -0x7fa8))();\n  }\n  return;\n}\n\n",
        "\nvoid func_acf78f3f7cdf4219(void)\n\n{\n  undefined *puVar1;\n  undefined *unaff_s0;\n  code *pcVar2;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412090;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s0;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined **)((int)register0x00000074 + -0x1b0) = &_gp;\n    *(undefined4 *)((int)register0x00000074 + -0x19c) = 0;\n    *(undefined4 *)((int)register0x00000074 + -0xc) = *(undefined4 *)PTR___stack_chk_guard_00412090;\n    (*(code *)PTR_memset_0041206c)((undefined *)((int)register0x00000074 + -0x198),0,0x18c);\n    pcVar2 = *(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f8c);\n    *(undefined **)((int)register0x00000074 + -0x1a4) =\n         (undefined *)((int)register0x00000074 + -0x19c);\n    (*pcVar2)((undefined *)((int)register0x00000074 + -0x19c),&UNK_004013f4,100);\n    func_0c967a4b2784421f\n              (*(undefined4 *)((int)register0x00000074 + -0x1a4));\n    if (*(int *)((int)register0x00000074 + -0xc) == *(int *)puVar1) break;\n    unaff_retaddr = CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_53_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x1b0) + -0x7f98))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0x1c0);\n  }\n  return;\n}\n\n",
        "\nundefined4\nfunc_d84ea52c4aa24b52(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uStackX_0;\n  undefined2 uStack_2c;\n  undefined2 uStack_2a;\n  undefined4 uStack_28;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120ac;\n  iVar1 = (*(code *)PTR_socket_0041206c)(2,2,6);\n  uStackX_0 = param_1;\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_2c,0,0x10);\n    uStack_2c = 2;\n    uStack_28 = (*(code *)PTR_inet_addr_00412064)(&UNK_00401dd0);\n    uStack_2a = (*(code *)PTR_htons_004120a0)(0x6987);\n    iVar2 = (*(code *)PTR_connect_00412060)(iVar1,&uStack_2c,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_0041205c)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      uStackX_0 = (*(code *)PTR_strtoul_00412080)(auStack_1c,0,0);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00412058)(iVar1);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120ac) {\n    (*(code *)PTR___stack_chk_fail_004120a4)();\n  }\n  return uStackX_0;\n}\n\n",
        "\nvoid func_c2a315b0a4da4aac(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 uStack_14;\n  ushort uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  uStack_1c = 0;\n  uStack_18 = 0;\n  uStack_14 = 0;\n  uStack_10 = 0;\n  uVar1 = (*(code *)PTR_strlen_00412068)(param_1);\n  (*(code *)PTR_strncpy_0041205c)(&uStack_40,param_1,uVar1);\n  uStack_10 = uStack_10 & 0xff00;\n  func_dc05f1fca88445d3(param_1);\n  (*(code *)PTR_free_00412090)(param_1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_4a49c330fa254b06(void)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined *unaff_s0;\n  undefined *puVar10;\n  undefined *unaff_s8;\n  code *unaff_retaddr;\n  undefined auStackX_0 [16];\n  \n  while( true ) {\n    puVar1 = PTR___stack_chk_guard_00412080;\n    puVar10 = (undefined *)((int)register0x00000074 + -0x90);\n    *(undefined **)((int)register0x00000074 + -0xc) = unaff_s0;\n    *(undefined **)((int)register0x00000074 + -8) = unaff_s8;\n    *(undefined **)((int)register0x00000074 + -0x80) = &_gp;\n    *(code **)((int)register0x00000074 + -4) = unaff_retaddr;\n    *(undefined4 *)((int)register0x00000074 + -0x14) = *(undefined4 *)PTR___stack_chk_guard_00412080\n    ;\n    puVar2 = (undefined4 *)\n             (*(code *)PTR_memset_00412060)((undefined *)((int)register0x00000074 + -0xe8),0x41,99);\n    *(undefined *)((int)puVar2 + 99) = 0;\n    puVar3 = puVar2;\n    puVar5 = (undefined4 *)((int)register0x00000074 + -0x78);\n    do {\n      puVar6 = puVar5 + 4;\n      puVar4 = puVar3 + 4;\n      uVar9 = puVar3[1];\n      uVar8 = puVar3[2];\n      uVar7 = puVar3[3];\n      *puVar5 = *puVar3;\n      puVar5[1] = uVar9;\n      puVar5[2] = uVar8;\n      puVar5[3] = uVar7;\n      puVar3 = puVar4;\n      puVar5 = puVar6;\n    } while (puVar4 != puVar2 + 0x18);\n    *puVar6 = *puVar4;\n    func_5aff9f3fcf8c41e5();\n    if (*(int *)((int)register0x00000074 + -0x14) == *(int *)puVar1) break;\n    unaff_retaddr = CWE127_Buffer_Underread__char_alloca_memmove_17_good;\n    (**(code **)(*(int *)((int)register0x00000074 + -0x80) + -0x7fa8))();\n    unaff_s0 = puVar1;\n    register0x00000074 = (BADSPACEBASE *)((int)register0x00000074 + -0xf8);\n    unaff_s8 = puVar10;\n  }\n  return;\n}\n\n",
        "\nvoid func_f63c739f0761450e(void)\n\n{\n  undefined *puVar1;\n  undefined auStack_e8 [104];\n  undefined *puStack_80;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_80 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_0041207c;\n  puStack_74 = auStack_e8;\n  (*(code *)PTR_memset_00412058)(puStack_74,0x41,99);\n  puVar1 = puStack_80;\n  puStack_74[99] = 0;\n  puStack_78 = puStack_74 + -8;\n  (**(code **)(puVar1 + -0x7fc8))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_80 + -0x7fa0))(puStack_78,auStack_70,100);\n  puStack_78[99] = 0;\n  func_bd109d5ebcd845d1(puStack_78);\n  if (iStack_c != **(int **)(puStack_80 + -0x7fa4)) {\n    (**(code **)(puStack_80 + -0x7fac))();\n  }\n  return;\n}\n\n",
        "\nvoid func_71175a5e83fe4023(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined auStack_19c [396];\n  undefined4 uStack_10;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412088;\n  uVar1 = *(undefined4 *)(param_1 + 8);\n  (*(code *)PTR_wmemset_00412060)(auStack_19c,0x43,99);\n  uStack_10 = 0;\n  (*(code *)PTR_wcscat_0041205c)(uVar1,auStack_19c);\n  func_c34ed3c78f204fda(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412088) {\n    (*(code *)PTR___stack_chk_fail_00412080)();\n  }\n  return;\n}\n\n",
        "\nvoid func_61fc8859dd6c4c6a(void)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412070)(800);\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    func_f9f044b4d4ae4a99(puVar1);\n  }\n  return;\n}\n\n",
        "\nvoid func_71aac24469424710(void)\n\n{\n  int iVar1;\n  int iStack_1cc;\n  int iStack_1c8;\n  int iStack_1c4;\n  undefined4 *puStack_1c0;\n  int iStack_1bc;\n  int iStack_1b8;\n  uint uStack_1b4;\n  undefined4 *puStack_1b0;\n  undefined2 uStack_1ac;\n  undefined2 uStack_1aa;\n  undefined4 uStack_1a8;\n  undefined4 uStack_19c;\n  undefined auStack_198 [396];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a0;\n  uStack_19c = 0;\n  (*(code *)PTR_memset_00412078)(auStack_198,0,0x18c);\n  puStack_1c0 = &uStack_19c;\n  iStack_1bc = 0xffffffff;\n  iStack_1b8 = (*(code *)PTR_wcslen_00412074)(puStack_1c0);\n  iStack_1bc = (*(code *)PTR_socket_00412068)(2,2,6);\n  if (iStack_1bc != -1) {\n    (*(code *)PTR_memset_00412078)(&uStack_1ac,0,0x10);\n    uStack_1ac = 2;\n    uStack_1a8 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401d10);\n    uStack_1aa = (*(code *)PTR_htons_00412094)(0x6987);\n    iVar1 = (*(code *)PTR_connect_0041205c)(iStack_1bc,&uStack_1ac,0x10);\n    if (((iVar1 != -1) &&\n        (uStack_1b4 = (*(code *)PTR_recv_00412058)\n                                (iStack_1bc,puStack_1c0 + iStack_1b8,(99 - iStack_1b8) * 4,0),\n        uStack_1b4 != 0xffffffff)) && (uStack_1b4 != 0)) {\n      puStack_1c0[(uStack_1b4 >> 2) + iStack_1b8] = 0;\n      puStack_1b0 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(puStack_1c0,0xd);\n      if (puStack_1b0 != (undefined4 *)0x0) {\n        *puStack_1b0 = 0;\n      }\n      puStack_1b0 = (undefined4 *)(*(code *)PTR_wcschr_0041206c)(puStack_1c0,10);\n      if (puStack_1b0 != (undefined4 *)0x0) {\n        *puStack_1b0 = 0;\n      }\n    }\n  }\n  if (iStack_1bc != -1) {\n    (*(code *)PTR_close_00412054)(iStack_1bc);\n  }\n  iVar1 = (*(code *)PTR___isoc99_swscanf_0041208c)(puStack_1c0,&UNK_00401d1c,&iStack_1cc);\n  if (iVar1 == 1) {\n    iStack_1c4 = 0;\n    for (iStack_1c8 = 0; iStack_1c8 < iStack_1cc; iStack_1c8 = iStack_1c8 + 1) {\n      iStack_1c4 = iStack_1c4 + 1;\n    }\n    func_dbf68ee708cb41c4(iStack_1c4);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a0) {\n    (*(code *)PTR___stack_chk_fail_00412098)();\n  }\n  return;\n}\n\n",
        "\nvoid func_78c630cc994e49dd(void)\n\n{\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  if (*(int *)PTR_GLOBAL_CONST_FIVE_00412040 == 5) {\n    auStack_128[0] = 0;\n    puStack_7c = puStack_74;\n  }\n  else {\n    func_543bb11aab7f4aad(&UNK_00401b30);\n  }\n  (**(code **)(puStack_88 + -0x7fc0))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fd0))(puStack_7c,auStack_70,100);\n  func_543bb11aab7f4aad(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7f9c)) {\n    (**(code **)(puStack_88 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_b238f77240af42ef(void)\n\n{\n  int iVar1;\n  undefined2 uVar3;\n  int iVar2;\n  int iStack_50;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  undefined4 uStack_28;\n  undefined4 uStack_24;\n  undefined4 uStack_20;\n  undefined auStack_1c [16];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041309c;\n  iStack_50 = -1;\n  iVar1 = (*(code *)PTR_socket_00413068)(2,2,6);\n  if (iVar1 != -1) {\n    (*(code *)PTR_memset_00413074)(&uStack_44,0,0x10);\n    uStack_44._0_2_ = 2;\n    uStack_40 = (*(code *)PTR_inet_addr_00413060)(&UNK_00402100);\n    uVar3 = (*(code *)PTR_htons_00413090)(0x6987);\n    uStack_44 = func_0c134706616a40b3(uStack_44._0_2_,uVar3);\n    iVar2 = (*(code *)PTR_connect_0041305c)(iVar1,&uStack_44,0x10);\n    if (((iVar2 != -1) &&\n        (iVar2 = (*(code *)PTR_recv_00413058)(iVar1,auStack_1c,0xd,0), iVar2 != -1)) && (iVar2 != 0)\n       ) {\n      auStack_1c[iVar2] = 0;\n      iStack_50 = (*(code *)PTR_atoi_0041306c)(auStack_1c);\n    }\n  }\n  if (iVar1 != -1) {\n    (*(code *)PTR_close_00413054)(iVar1);\n  }\n  uStack_44 = 0;\n  uStack_40 = 0;\n  uStack_3c = 0;\n  uStack_38 = 0;\n  uStack_34 = 0;\n  uStack_30 = 0;\n  uStack_2c = 0;\n  uStack_28 = 0;\n  uStack_24 = 0;\n  uStack_20 = 0;\n  if ((iStack_50 < 0) || (9 < iStack_50)) {\n    func_6a629bc25cd442f0(&UNK_0040210c);\n  }\n  else {\n    func_72c18b272af64041((&uStack_44)[iStack_50]);\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041309c) {\n    (*(code *)PTR___stack_chk_fail_00413094)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Removing unreachable block (ram,0x00400bd8) */\n\nvoid func_1704bafa7ac84093(uint param_1)\n\n{\n  undefined4 *puVar1;\n  \n  if (*(int *)PTR_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_22_badGlobal_00412048 == 0) {\n    return;\n  }\n  if (param_1 < 6) {\n                    /* WARNING: Could not recover jumptable at 0x00400bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412074)();\n    return;\n  }\n  puVar1 = (undefined4 *)(*(code *)PTR_malloc_00412078)();\n  *puVar1 = 0x68656c6c;\n  *(undefined2 *)(puVar1 + 1) = 0x6f00;\n  func_5773c9489485496d(puVar1);\n                    /* WARNING: Could not recover jumptable at 0x00400b3c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_free_0041208c)(puVar1);\n  return;\n}\n\n",
        "\nvoid func_31f0ea296c2c4bcd(void)\n\n{\n  undefined auStack_a4 [49];\n  undefined uStack_73;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_0041208c;\n  (*(code *)PTR_memset_00412064)(auStack_a4,0x41,0x31);\n  uStack_73 = 0;\n  (*(code *)PTR_memset_00412064)(auStack_70,0x41,99);\n  uStack_d = 0;\n  func_54448297902d4f6b(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_0041208c) {\n    (*(code *)PTR___stack_chk_fail_00412084)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ce278d6285b4402c(void)\n\n{\n  int iVar1;\n  undefined4 uStack_45c;\n  int iStack_458;\n  int iStack_454;\n  undefined2 uStack_450;\n  undefined2 uStack_44e;\n  undefined4 uStack_44c;\n  undefined auStack_440 [16];\n  undefined auStack_430 [32];\n  undefined auStack_410 [1028];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_004120a4;\n  if (*(int *)PTR_globalFive_00412040 == 5) {\n    uStack_45c = 0x10;\n    iStack_454 = 0xffffffff;\n    iStack_458 = -1;\n    iStack_454 = (*(code *)PTR_socket_00412060)(2,2,6);\n    if (iStack_454 != -1) {\n      (*(code *)PTR_memset_00412074)(&uStack_450,0,0x10);\n      uStack_450 = 2;\n      uStack_44c = 0;\n      uStack_44e = (*(code *)PTR_htons_00412098)(20000);\n      iVar1 = (*(code *)PTR_bind_0041207c)(iStack_454,&uStack_450,0x10);\n      if ((((iVar1 != -1) && (iVar1 = (*(code *)PTR_listen_00412068)(iStack_454,5), iVar1 != -1)) &&\n          (iStack_458 = (*(code *)PTR_accept_00412090)(iStack_454,0,0), iStack_458 != -1)) &&\n         ((iVar1 = (*(code *)PTR_getsockname_00412064)(iStack_458,auStack_440,&uStack_45c),\n          iVar1 != -1 &&\n          (iVar1 = (*(code *)PTR_getnameinfo_0041206c)\n                             (auStack_440,0x10,auStack_410,0x401,auStack_430,0x20,2), iVar1 == 0))))\n      {\n        iVar1 = (*(code *)PTR_strcmp_004120b8)(&UNK_00401d90,auStack_410);\n        if (iVar1 == 0) {\n          (*(code *)PTR_send_00412050)(iStack_458,&UNK_00401da4,0xf,0);\n        }\n        else {\n          iVar1 = (*(code *)PTR_send_00412050)(iStack_458,&UNK_00401db4,8,0);\n          if (iVar1 == -1) {\n            func_4fcf235729244e50(&UNK_00401dc0);\n          }\n        }\n      }\n    }\n    if (iStack_454 != -1) {\n      (*(code *)PTR_close_00412058)(iStack_454);\n    }\n    if (iStack_458 != -1) {\n      (*(code *)PTR_close_00412058)(iStack_458);\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_004120a4) {\n    (*(code *)PTR___stack_chk_fail_0041209c)();\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid func_0b3b08bbc8884fd4(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined uStack_88;\n  undefined *puStack_28;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412080;\n  puStack_28 = &_gp;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412080;\n  iVar2 = func_38ee3b4cd7634314();\n  if (iVar2 == 0) {\n    puVar3 = &uStack_90;\n    uStack_90 = _UNK_004012c4;\n    uStack_8c = _UNK_004012c8;\n    uStack_88 = UNK_004012cc;\n    puVar4 = puVar3;\n    func_11b0c86c29214170();\n    iVar2 = func_38ee3b4cd7634314();\n  }\n  else {\n    uStack_20 = _UNK_004012d0;\n    uStack_1c = _UNK_004012d4;\n    uStack_18 = UNK_004012d8;\n    puVar3 = (undefined4 *)(**(code **)(puStack_28 + -0x7f9c))(&uStack_20);\n    puVar4 = puVar3;\n    func_11b0c86c29214170();\n    iVar2 = func_38ee3b4cd7634314();\n  }\n  if (iVar2 == 0) {\n    (**(code **)(puStack_28 + -0x7f98))();\n    puVar4 = puVar3;\n  }\n  if (iStack_14 != *(int *)puVar1) {\n    (**(code **)(puStack_28 + -0x7fa8))();\n    if (puVar4 == (undefined4 *)0x0) {\n      return;\n    }\n                    /* WARNING: Could not recover jumptable at 0x00400b60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_36d2211a0b594f54(void)\n\n{\n  undefined auStack_19c [196];\n  undefined4 uStack_d8;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  (*(code *)PTR_wmemset_0041205c)(auStack_19c,0x41,0x31);\n  uStack_d8 = 0;\n  func_389e53a6edcd4f4f(auStack_19c);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_c4eb70d746c54fc3(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  uint *puVar5;\n  uint uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  uint *puVar9;\n  uint *puVar10;\n  undefined4 *puVar11;\n  uint uVar12;\n  uint *puVar13;\n  undefined4 uVar14;\n  uint *puVar15;\n  undefined4 uVar16;\n  uint uVar17;\n  undefined4 uVar18;\n  uint auStack_110 [27];\n  undefined4 *puStack_a4;\n  undefined *puStack_a0;\n  undefined auStack_78 [96];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_00412084;\n  iStack_14 = *(int *)PTR___stack_chk_guard_00412084;\n  puVar3 = (undefined4 *)(*(code *)PTR_malloc_00412074)(100);\n  puVar4 = (undefined4 *)(*(code *)PTR_memset_00412060)(auStack_78,0x43,99);\n  uStack_18._3_1_ = 0;\n  puVar7 = puVar3;\n  do {\n    puVar8 = puVar7 + 4;\n    puVar11 = puVar4 + 4;\n    uVar18 = puVar4[1];\n    uVar16 = puVar4[2];\n    uVar14 = puVar4[3];\n    *puVar7 = *puVar4;\n    puVar7[1] = uVar18;\n    puVar7[2] = uVar16;\n    puVar7[3] = uVar14;\n    puVar7 = puVar8;\n    puVar4 = puVar11;\n  } while (puVar11 != &uStack_18);\n  *puVar8 = *puVar11;\n  func_f68de3bac14648e1(puVar3);\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412088)(puVar3);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  puVar2 = PTR___stack_chk_guard_00412084;\n  puStack_a0 = puVar1;\n  auStack_110[25] = *(uint *)PTR___stack_chk_guard_00412084;\n  puStack_a4 = puVar3;\n  puVar5 = (uint *)(*(code *)PTR_malloc_00412074)(100);\n  (*(code *)PTR_memset_00412060)(auStack_110,0x43,99);\n  auStack_110[24] = auStack_110[24] & 0xffffff00;\n  puVar10 = puVar5;\n  puVar13 = auStack_110;\n  do {\n    puVar9 = puVar10 + 4;\n    puVar15 = puVar13 + 4;\n    uVar17 = puVar13[1];\n    uVar12 = puVar13[2];\n    uVar6 = puVar13[3];\n    *puVar10 = *puVar13;\n    puVar10[1] = uVar17;\n    puVar10[2] = uVar12;\n    puVar10[3] = uVar6;\n    puVar10 = puVar9;\n    puVar13 = puVar15;\n  } while (puVar15 != auStack_110 + 0x18);\n  *puVar9 = auStack_110[24];\n  func_f68de3bac14648e1(puVar5);\n  (*(code *)PTR_free_00412088)(puVar5);\n  puVar5 = (uint *)(*(code *)PTR_malloc_00412074)(100);\n  (*(code *)PTR_memset_00412060)(auStack_110,0x43,99);\n  auStack_110[24] = auStack_110[24] & 0xffffff00;\n  puVar10 = puVar5;\n  puVar13 = auStack_110;\n  do {\n    puVar9 = puVar10 + 4;\n    puVar15 = puVar13 + 4;\n    uVar17 = puVar13[1];\n    uVar12 = puVar13[2];\n    uVar6 = puVar13[3];\n    *puVar10 = *puVar13;\n    puVar10[1] = uVar17;\n    puVar10[2] = uVar12;\n    puVar10[3] = uVar6;\n    puVar10 = puVar9;\n    puVar13 = puVar15;\n  } while (puVar15 != auStack_110 + 0x18);\n  *puVar9 = *puVar15;\n  puVar10 = puVar5;\n  func_f68de3bac14648e1();\n  if (auStack_110[25] == *(int *)puVar2) {\n                    /* WARNING: Could not recover jumptable at 0x00400c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412088)(puVar5);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_0041207c)();\n  if (puVar10 != (uint *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00400c90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412070)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_da86ef7046ff4128(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_128 [104];\n  undefined auStack_c0 [56];\n  undefined *puStack_88;\n  undefined *puStack_7c;\n  undefined *puStack_78;\n  undefined *puStack_74;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  puStack_88 = &_gp;\n  iStack_c = *(int *)PTR___stack_chk_guard_00412084;\n  puStack_78 = auStack_c0;\n  puStack_74 = auStack_128;\n  iVar2 = func_c9eba6514a07445c();\n  puVar1 = puStack_88;\n  if (iVar2 == 0) {\n    puStack_7c = puStack_74;\n    *puStack_74 = 0;\n  }\n  else {\n    puStack_7c = puStack_74;\n    *puStack_74 = 0;\n  }\n  (**(code **)(puVar1 + -0x7fc0))(auStack_70,0x43,99);\n  uStack_d = 0;\n  (**(code **)(puStack_88 + -0x7fc4))(puStack_7c,auStack_70,99);\n  puStack_7c[99] = 0;\n  func_973f191aab9a44f6(puStack_7c);\n  if (iStack_c != **(int **)(puStack_88 + -0x7f9c)) {\n    (**(code **)(puStack_88 + -0x7fa4))();\n  }\n  return;\n}\n\n",
        "\nvoid func_7305a013b90e48f3(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  ushort uStack_74;\n  undefined auStack_70 [100];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  func_7305a013b90e48f3Static = 0;\n  uVar1 = func_b53eb5ea77f54b30(auStack_70);\n  uStack_a4 = 0;\n  uStack_a0 = 0;\n  uStack_9c = 0;\n  uStack_98 = 0;\n  uStack_94 = 0;\n  uStack_90 = 0;\n  uStack_8c = 0;\n  uStack_88 = 0;\n  uStack_84 = 0;\n  uStack_80 = 0;\n  uStack_7c = 0;\n  uStack_78 = 0;\n  uStack_74 = 0;\n  uVar2 = (*(code *)PTR_strlen_00412060)(uVar1);\n  (*(code *)PTR_memmove_00412084)(&uStack_a4,uVar1,uVar2);\n  uStack_74 = uStack_74 & 0xff00;\n  func_ca6840164b2f4132(uVar1);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_ab0bd88f176a4551(void)\n\n{\n  func_ce6b541fa73241f5(0);\n  return;\n}\n\n",
        "\nvoid func_e4f71f7786824fb4(int param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined auStack_1a4 [396];\n  undefined4 uStack_18;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  iVar2 = *(int *)(param_1 + 8);\n  (*(code *)PTR_wmemset_00412064)(auStack_1a4,0x43,99);\n  uStack_18 = 0;\n  (*(code *)PTR_wcscat_00412060)(iVar2,auStack_1a4);\n  func_46fc44101d6541c5();\n  if (iStack_14 == *(int *)puVar1) {\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400b80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_0041207c)();\n    return;\n  }\n  return;\n}\n\n",
        "\nvoid func_7ab38aa586fa4651\n               (undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)(*(code *)PTR_realloc_0041206c)(0,800,param_3,param_4,&_gp);\n  *puVar1 = 0;\n  puVar1[1] = 0;\n  func_173028316f584f61(puVar1);\n  func_d7742f519da54331(puVar1);\n  return;\n}\n\n",
        "\nvoid func_dac5a27e3e734899(void)\n\n{\n  undefined4 uVar1;\n  undefined auStack_108 [49];\n  undefined uStack_d7;\n  undefined auStack_d4 [99];\n  undefined uStack_71;\n  undefined auStack_70 [99];\n  undefined uStack_d;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412080;\n  (*(code *)PTR_memset_00412058)(auStack_108,0x41,0x31);\n  uStack_d7 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_d4,0x41,99);\n  uStack_71 = 0;\n  (*(code *)PTR_memset_00412058)(auStack_70,0x43,99);\n  uStack_d = 0;\n  uVar1 = (*(code *)PTR_strlen_00412060)(auStack_70);\n  (*(code *)PTR_memmove_00412084)(auStack_70,auStack_108,uVar1);\n  uStack_d = 0;\n  func_a9c2c5422b514f18(auStack_70);\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412080) {\n    (*(code *)PTR___stack_chk_fail_00412078)();\n  }\n  return;\n}\n\n",
        "\nvoid func_9a961cdb1ff147b9(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined auStack_38 [44];\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412090;\n  if (*(int *)PTR_globalTrue_00412048 != 0) {\n    (*(code *)PTR_memcpy_00412094)(auStack_38,&UNK_00401c90,0x2c);\n    iVar1 = (*(code *)PTR_mktemp_00412070)(auStack_38);\n    if (iVar1 != 0) {\n      iVar2 = (*(code *)PTR_fopen_0041209c)(iVar1,&UNK_00401c78);\n      if (iVar2 != 0) {\n        (*(code *)PTR_fwrite_0041207c)(&UNK_00401c80,1,0xe,iVar2);\n        (*(code *)PTR_fclose_0041205c)(iVar2);\n        (*(code *)PTR_unlink_00412084)(iVar1);\n      }\n    }\n  }\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412090) {\n    (*(code *)PTR___stack_chk_fail_00412088)();\n  }\n  return;\n}\n\n",
        "\nvoid func_e7c4017215994f97(void)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  undefined auStack_78 [99];\n  undefined uStack_15;\n  int iStack_14;\n  \n  puVar1 = PTR___stack_chk_guard_0041208c;\n  iStack_14 = *(int *)PTR___stack_chk_guard_0041208c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 == 0) {\n    puVar4 = (undefined4 *)0x0;\n  }\n  else {\n    puVar4 = (undefined4 *)(*(code *)PTR_malloc_0041207c)(0x32);\n    *(undefined *)((int)puVar4 + 0x31) = 0;\n    *puVar4 = 0x41414141;\n    puVar4[1] = 0x41414141;\n    puVar4[2] = 0x41414141;\n    puVar4[3] = 0x41414141;\n    puVar4[4] = 0x41414141;\n    puVar4[5] = 0x41414141;\n    puVar4[6] = 0x41414141;\n    puVar4[7] = 0x41414141;\n    puVar4[8] = 0x41414141;\n    puVar4[9] = 0x41414141;\n    puVar4[10] = 0x41414141;\n    puVar4[0xb] = 0x41414141;\n    *(undefined *)(puVar4 + 0xc) = 0x41;\n  }\n  iVar2 = (*(code *)PTR_memset_00412064)(auStack_78,0x43,99);\n  uStack_15 = 0;\n  iVar3 = (*(code *)PTR_strlen_0041206c)(iVar2);\n  if (iVar3 != 0) {\n    iVar2 = (*(code *)PTR_memcpy_00412090)(iVar2,puVar4,iVar3);\n  }\n  uStack_15 = 0;\n  func_1b8900d352da4d1c();\n  if (iStack_14 == *(int *)puVar1) {\n                    /* WARNING: Could not recover jumptable at 0x00400b2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_free_00412094)(puVar4);\n    return;\n  }\n  (*(code *)PTR___stack_chk_fail_00412084)();\n  if (iVar2 != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00400bb0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)PTR_puts_00412078)();\n    return;\n  }\n  return;\n}\n\n",
        "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid func_2fc0385e493d4bd2(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 ******ppppppuStack_2c;\n  undefined4 ******ppppppuStack_28;\n  undefined4 *******pppppppuStack_24;\n  undefined4 *******pppppppuStack_20;\n  undefined2 uStack_1c;\n  undefined2 uStack_1a;\n  undefined4 uStack_18;\n  int iStack_c;\n  \n  iStack_c = *(int *)PTR___stack_chk_guard_00412098;\n  ppppppuStack_2c = &pppppppuStack_24;\n  ppppppuStack_28 = &pppppppuStack_24;\n  pppppppuStack_24 = &ppppppuStack_2c;\n  pppppppuStack_20 = &ppppppuStack_2c;\n  if (*(int *)PTR_GLOBAL_CONST_TRUE_00412040 != 0) {\n    iVar1 = (*(code *)PTR_socket_00412068)(2,2,6);\n    if (iVar1 != -1) {\n      (*(code *)PTR_memset_00412070)(&uStack_1c,0,0x10);\n      uStack_1c = 2;\n      uStack_18 = (*(code *)PTR_inet_addr_00412060)(&UNK_00401b90);\n      uStack_1a = (*(code *)PTR_htons_0041208c)(0x6987);\n      iVar2 = (*(code *)PTR_connect_0041205c)(iVar1,&uStack_1c,0x10);\n      if (iVar2 != -1) {\n        (*(code *)PTR_recv_00412058)(iVar1,&ppppppuStack_2c,8,0);\n      }\n    }\n    if (iVar1 != -1) {\n      (*(code *)PTR_close_00412054)(iVar1);\n    }\n  }\n  linkedListPrev = ppppppuStack_28;\n  linkedListNext = ppppppuStack_2c;\n  *ppppppuStack_28 = ppppppuStack_2c;\n  linkedListNext[1] = linkedListPrev;\n  if (iStack_c != *(int *)PTR___stack_chk_guard_00412098) {\n    (*(code *)PTR___stack_chk_fail_00412090)();\n  }\n  return;\n}\n\n"
    ],
    "pred": [
        "goodG2B",
        "CWE680 Integer Overflow to Buffer Overflow  malloc rand 51 bad",
        "CWE401 Memory Leak  twoIntsStruct realloc 51 bad",
        "CWE690 NULL Deref From Return  int realloc 17 bad",
        "CWE78 OS Command Injection  char connect socket popen 14 bad",
        "CWE121 Stack Based Buffer Overflow  CWE805 wchar t declare ncpy 63 goodG2B",
        "CWE665 Improper Initialization  char ncat 06 bad",
        "goodB2G",
        "goodG2B2",
        "CWE78 OS Command Injection  wchar t connect socket popen 22 goodG2B1Source",
        "goodG2B2",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cat 10 bad",
        "CWE690 NULL Deref From Return  int malloc 63 bad",
        "CWE124 Buffer Underwrite  char alloca memcpy 14 bad",
        "CWE590 Free Memory Not on Heap  free int declare 06 bad",
        "goodG2B1",
        "CWE590 Free Memory Not on Heap  free long static 11 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char listen socket 09 bad",
        "CWE758 Undefined Behavior  char pointer malloc use 04 bad",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cat 04 bad",
        "CWE617 Reachable Assertion  listen socket 63 bad",
        "goodB2GSink",
        "CWE690 NULL Deref From Return  long realloc 51 bad",
        "CWE123 Write What Where Condition  connect socket 61 bad",
        "CWE126 Buffer Overread  char declare memcpy 52 bad",
        "CWE122 Heap Based Buffer Overflow  c src char cpy 66b badSink",
        "goodG2B",
        "goodG2B",
        "goodG2B2",
        "goodG2B2",
        "CWE789 Uncontrolled Mem Alloc  malloc char fgets 52c badSink",
        "CWE123 Write What Where Condition  connect socket 52c goodG2BSink",
        "CWE401 Memory Leak  wchar t realloc 67 bad",
        "good1",
        "CWE427 Uncontrolled Search Path Element  wchar t console 61b badSource",
        "CWE121 Stack Based Buffer Overflow  CWE806 wchar t declare ncat 63b goodG2BSink",
        "CWE401 Memory Leak  twoIntsStruct calloc 51 bad",
        "CWE127 Buffer Underread  char alloca cpy 68b badSink",
        "goodB2G",
        "good2",
        "CWE426 Untrusted Search Path  char popen 52c badSink",
        "CWE126 Buffer Overread  malloc char memcpy 09 bad",
        "CWE690 NULL Deref From Return  int64 t realloc 52 bad",
        "CWE590 Free Memory Not on Heap  free int64 t alloca 03 bad",
        "CWE416 Use After Free  return freed ptr 13 bad",
        "CWE126 Buffer Overread  malloc char loop 51 bad",
        "CWE78 OS Command Injection  char connect socket execlp 67 bad",
        "CWE457 Use of Uninitialized Variable  int array malloc partial init 14 bad",
        "goodG2B",
        "CWE126 Buffer Overread  malloc char loop 52 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char listen socket 68 bad",
        "CWE126 Buffer Overread  char declare memmove 06 bad",
        "CWE126 Buffer Overread  char declare memmove 04 bad",
        "goodG2B",
        "goodG2BSource",
        "CWE680 Integer Overflow to Buffer Overflow  malloc listen socket 64 bad",
        "CWE124 Buffer Underwrite  char alloca memmove 68 bad",
        "CWE773 Missing Reference to Active File Descriptor or Handle  fopen 64 bad",
        "CWE127 Buffer Underread  char alloca memmove 18 bad",
        "CWE758 Undefined Behavior  wchar t pointer malloc use 13 bad",
        "CWE457 Use of Uninitialized Variable  int array malloc partial init 15 bad",
        "CWE121 Stack Based Buffer Overflow  dest char declare cpy 63b badSink",
        "CWE121 Stack Based Buffer Overflow  dest wchar t declare cpy 66 bad",
        "CWE789 Uncontrolled Mem Alloc  malloc char fgets 54e goodG2BSink",
        "CWE126 Buffer Overread  char alloca memmove 11 bad",
        "CWE401 Memory Leak  twoIntsStruct calloc 61b badSource",
        "CWE467 Use of sizeof on Pointer Type  int 13 bad",
        "CWE510 Trapdoor  network listen 14 bad",
        "CWE427 Uncontrolled Search Path Element  char connect socket 09 bad",
        "CWE606 Unchecked Loop Condition  char connect socket 61 bad",
        "CWE758 Undefined Behavior  struct malloc use 08 bad",
        "CWE426 Untrusted Search Path  char connect socket 66 bad",
        "badSource",
        "CWE126 Buffer Overread  char declare memmove 52 bad",
        "CWE122 Heap Based Buffer Overflow  c src char cat 32 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char connect socket 61b badSource",
        "CWE427 Uncontrolled Search Path Element  char environment 53 bad",
        "goodG2B2",
        "CWE401 Memory Leak  twoIntsStruct realloc 51 bad",
        "goodG2B",
        "CWE401 Memory Leak  twoIntsStruct realloc 08 bad",
        "CWE78 OS Command Injection  char connect socket system 64b badSink",
        "CWE126 Buffer Overread  char declare memmove 63b goodG2BSink",
        "CWE680 Integer Overflow to Buffer Overflow  malloc rand 52 bad",
        "goodG2B",
        "CWE127 Buffer Underread  CWE839 listen socket 66b goodG2BSink",
        "CWE690 NULL Deref From Return  long calloc 66b badSink",
        "CWE122 Heap Based Buffer Overflow  c dest char cat 17 bad",
        "CWE127 Buffer Underread  wchar t alloca ncpy 68b goodG2BSink",
        "CWE590 Free Memory Not on Heap  free int64 t alloca 11 bad",
        "CWE121 Stack Based Buffer Overflow  dest char declare cat 17 bad",
        "CWE690 NULL Deref From Return  struct realloc 51b goodB2GSink",
        "CWE789 Uncontrolled Mem Alloc  malloc char rand 05 bad",
        "CWE126 Buffer Overread  char alloca memcpy 52 bad",
        "goodB2G1",
        "CWE126 Buffer Overread  wchar t declare memcpy 63b goodG2BSink",
        "CWE78 OS Command Injection  char connect socket system 14 bad",
        "CWE78 OS Command Injection  char console execl 67 bad",
        "goodG2B2",
        "CWE123 Write What Where Condition  connect socket 22 badSource",
        "CWE789 Uncontrolled Mem Alloc  malloc char fgets 64b badSink",
        "CWE457 Use of Uninitialized Variable  struct array malloc partial init 13 bad",
        "CWE789 Uncontrolled Mem Alloc  malloc char connect socket 67b badSink",
        "CWE124 Buffer Underwrite  malloc wchar t loop 53d goodG2BSink",
        "goodB2G1Sink",
        "goodG2B",
        "CWE665 Improper Initialization  wchar t ncat 21 bad",
        "goodG2B",
        "CWE121 Stack Based Buffer Overflow  src char alloca cpy 52c goodG2BSink",
        "CWE401 Memory Leak  wchar t calloc 06 bad",
        "CWE690 NULL Deref From Return  long calloc 12 bad",
        "CWE427 Uncontrolled Search Path Element  wchar t console 66 bad",
        "goodG2B",
        "goodG2B1",
        "goodB2G",
        "goodG2B2",
        "CWE122 Heap Based Buffer Overflow  c dest char cpy 41 bad",
        "CWE690 NULL Deref From Return  long calloc 52 bad",
        "CWE121 Stack Based Buffer Overflow  CWE805 char alloca loop 07 good",
        "CWE761 Free Pointer Not at Start of Buffer  wchar t listen socket 07 bad",
        "goodG2B2",
        "CWE121 Stack Based Buffer Overflow  CWE193 wchar t alloca cpy 51b goodG2BSink",
        "CWE124 Buffer Underwrite  char declare loop 63b badSink",
        "CWE124 Buffer Underwrite  char declare loop 63b badSink",
        "CWE122 Heap Based Buffer Overflow  c CWE129 listen socket 51b goodB2GSink",
        "goodG2B2",
        "goodG2B1",
        "CWE427 Uncontrolled Search Path Element  char connect socket 67 bad",
        "CWE690 NULL Deref From Return  int64 t realloc 42 bad",
        "CWE124 Buffer Underwrite  char alloca memmove 06 good",
        "CWE427 Uncontrolled Search Path Element  wchar t file 10 bad",
        "CWE665 Improper Initialization  wchar t ncat 53d goodG2BSink",
        "CWE121 Stack Based Buffer Overflow  dest char declare cat 08 bad",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cat 53d badSink",
        "CWE127 Buffer Underread  char declare memcpy 17 bad",
        "CWE426 Untrusted Search Path  wchar t popen 17 bad",
        "CWE665 Improper Initialization  wchar t ncat 06 bad",
        "CWE122 Heap Based Buffer Overflow  c dest char cat 68b badSink",
        "CWE761 Free Pointer Not at Start of Buffer  char file 52 bad",
        "CWE690 NULL Deref From Return  char calloc 05 bad",
        "CWE758 Undefined Behavior  struct pointer alloca use 07 bad",
        "CWE590 Free Memory Not on Heap  free long alloca 41 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char file 63 bad",
        "CWE127 Buffer Underread  char alloca loop 51b badSink",
        "CWE401 Memory Leak  twoIntsStruct malloc 61b badSource",
        "CWE758 Undefined Behavior  int pointer malloc use 03 bad",
        "good2",
        "CWE690 NULL Deref From Return  char realloc 14 bad",
        "CWE123 Write What Where Condition  listen socket 65 bad",
        "goodG2B",
        "CWE127 Buffer Underread  malloc wchar t loop 63b goodG2BSink",
        "goodG2B1",
        "CWE680 Integer Overflow to Buffer Overflow  malloc fscanf 01 bad",
        "CWE124 Buffer Underwrite  wchar t declare ncpy 06 good",
        "CWE124 Buffer Underwrite  char alloca memmove 63b badSink",
        "CWE122 Heap Based Buffer Overflow  c dest wchar t cpy 54 bad",
        "goodG2B",
        "CWE124 Buffer Underwrite  char alloca memmove 51 bad",
        "goodG2B1Source",
        "CWE122 Heap Based Buffer Overflow  c CWE193 char memmove 22 goodG2B2Source",
        "goodG2B1",
        "CWE761 Free Pointer Not at Start of Buffer  char connect socket 66b badSink",
        "CWE690 NULL Deref From Return  int calloc 32 bad",
        "CWE401 Memory Leak  struct twoIntsStruct malloc 51 bad",
        "CWE665 Improper Initialization  wchar t cat 51 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t alloca cpy 63bd42c220804605",
        "CWE665 Improper Initialization  char cat 10 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t alloca cat 52 bad",
        "CWE122 Heap Based Buffer Overflow  c dest wchar t cpy 03 bad",
        "goodG2B2",
        "good1",
        "CWE121 Stack Based Buffer Overflow  CWE805 int alloca memcpy 51b goodG2BSink",
        "CWE758 Undefined Behavior  char malloc use 11 bad",
        "goodG2B2",
        "goodG2B2",
        "goodG2B",
        "CWE680 Integer Overflow to Buffer Overflow  malloc connect socket 61b badSource",
        "CWE122 Heap Based Buffer Overflow  c CWE806 char ncpy 51b goodG2BSink",
        "goodG2B",
        "CWE124 Buffer Underwrite  char alloca memcpy 06 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t declare cat 66b badSink",
        "CWE401 Memory Leak  twoIntsStruct malloc 13 bad",
        "goodB2G",
        "goodG2B1",
        "goodB2G2",
        "CWE789 Uncontrolled Mem Alloc  malloc char rand 22 badSink",
        "goodG2B",
        "goodG2B2",
        "CWE401 Memory Leak  strdup char 12 bad",
        "goodG2B",
        "CWE122 Heap Based Buffer Overflow  c src char cat 67 bad",
        "goodG2B",
        "goodG2B1",
        "CWE401 Memory Leak  twoIntsStruct realloc 42 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t declare cat 66b badSink",
        "CWE401 Memory Leak  twoIntsStruct realloc 41 bad",
        "CWE126 Buffer Overread  char declare memmove 18 bad",
        "good2",
        "CWE126 Buffer Overread  malloc char memcpy 09 bad",
        "goodG2B2"
    ],
    "gt": [
        "goodG2B2",
        "goodB2G",
        "CWE401 Memory Leak  struct twoIntsStruct realloc 52 bad",
        "CWE690 NULL Deref From Return  int realloc 32 bad",
        "CWE78 OS Command Injection  char connect socket popen 14 bad",
        "goodG2B",
        "CWE665 Improper Initialization  char ncat 18 bad",
        "CWE789 Uncontrolled Mem Alloc  malloc char fscanf 12 bad",
        "goodG2B2",
        "CWE78 OS Command Injection  wchar t connect socket popen 22 goodG2B1Source",
        "goodG2B2",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cpy 10 bad",
        "CWE690 NULL Deref From Return  long malloc 64 bad",
        "CWE124 Buffer Underwrite  char alloca memcpy 13 bad",
        "CWE590 Free Memory Not on Heap  free long declare 04 bad",
        "goodG2B1",
        "CWE590 Free Memory Not on Heap  free int static 11 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char listen socket 09 bad",
        "CWE758 Undefined Behavior  wchar t pointer malloc use 15 bad",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cat 41 bad",
        "CWE617 Reachable Assertion  listen socket 63 bad",
        "goodG2B",
        "CWE690 NULL Deref From Return  int realloc 67 bad",
        "CWE123 Write What Where Condition  connect socket 44 bad",
        "CWE127 Buffer Underread  char declare loop 15 bad",
        "CWE122 Heap Based Buffer Overflow  c src char cpy 66b badSink",
        "goodG2B",
        "goodG2B",
        "goodG2B2",
        "goodG2B",
        "CWE789 Uncontrolled Mem Alloc  malloc char fscanf 65b badSink",
        "CWE123 Write What Where Condition  fgets 67b badSink",
        "CWE401 Memory Leak  strdup wchar t 53 bad",
        "good1",
        "CWE427 Uncontrolled Search Path Element  wchar t console 61b badSource",
        "CWE121 Stack Based Buffer Overflow  CWE806 wchar t alloca ncat 64b goodG2BSink",
        "CWE401 Memory Leak  struct twoIntsStruct calloc 51 bad",
        "CWE127 Buffer Underread  char alloca cpy 68b badSink",
        "CWE680 Integer Overflow to Buffer Overflow  malloc connect socket 67 bad",
        "CWE122 Heap Based Buffer Overflow  char type overrun memmove 05 bad",
        "CWE78 OS Command Injection  char file popen 51b goodG2BSink",
        "CWE126 Buffer Overread  malloc char memcpy 09 bad",
        "CWE690 NULL Deref From Return  int64 t realloc 53 bad",
        "CWE590 Free Memory Not on Heap  free int64 t alloca 04 bad",
        "CWE416 Use After Free  return freed ptr 13 bad",
        "CWE126 Buffer Overread  malloc char loop 53 bad",
        "CWE78 OS Command Injection  char connect socket execlp 54 bad",
        "CWE457 Use of Uninitialized Variable  int array malloc partial init 14 bad",
        "goodG2B",
        "CWE126 Buffer Overread  malloc char loop 44 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char listen socket 66 bad",
        "CWE126 Buffer Overread  char declare memmove 31 bad",
        "CWE126 Buffer Overread  char alloca memcpy 34 bad",
        "goodG2B",
        "CWE127 Buffer Underread  malloc wchar t memcpy 61b goodG2BSource",
        "CWE680 Integer Overflow to Buffer Overflow  malloc listen socket 18 bad",
        "CWE124 Buffer Underwrite  char alloca memmove 68 bad",
        "CWE773 Missing Reference to Active File Descriptor or Handle  fopen 64 bad",
        "CWE127 Buffer Underread  char alloca memmove 03 bad",
        "CWE758 Undefined Behavior  wchar t pointer malloc use 13 bad",
        "CWE457 Use of Uninitialized Variable  int array malloc partial init 16 bad",
        "CWE121 Stack Based Buffer Overflow  dest char declare cpy 63b badSink",
        "CWE475 Undefined Behavior for Input to API  wchar t 02 bad",
        "CWE789 Uncontrolled Mem Alloc  malloc char listen socket 53d badSink",
        "CWE126 Buffer Overread  char alloca memcpy 08 bad",
        "CWE401 Memory Leak  twoIntsStruct calloc 61b badSource",
        "CWE467 Use of sizeof on Pointer Type  int 13 bad",
        "CWE510 Trapdoor  network listen 14 bad",
        "CWE506 Embedded Malicious Code  file transfer connect socket 09 bad",
        "CWE606 Unchecked Loop Condition  char connect socket 42 bad",
        "CWE758 Undefined Behavior  struct malloc use 01 bad",
        "CWE134 Uncontrolled Format String  char connect socket printf 12 bad",
        "badSource",
        "CWE126 Buffer Overread  char declare memcpy 67 bad",
        "CWE590 Free Memory Not on Heap  free char alloca 32 bad",
        "CWE606 Unchecked Loop Condition  char connect socket 61b badSource",
        "CWE427 Uncontrolled Search Path Element  char environment 54 bad",
        "goodG2B2",
        "CWE401 Memory Leak  twoIntsStruct realloc 53 bad",
        "goodG2B1",
        "CWE401 Memory Leak  struct twoIntsStruct malloc 41 bad",
        "CWE78 OS Command Injection  char environment system 64b goodG2BSink",
        "CWE126 Buffer Overread  char alloca memmove 64b badSink",
        "CWE680 Integer Overflow to Buffer Overflow  malloc rand 41 bad",
        "CWE122 Heap Based Buffer Overflow  c src char cpy 03 bad",
        "CWE127 Buffer Underread  CWE839 listen socket 66b goodG2BSink",
        "CWE690 NULL Deref From Return  long malloc 66b badSink",
        "CWE122 Heap Based Buffer Overflow  c dest char cat 17 bad",
        "CWE127 Buffer Underread  wchar t alloca ncpy 68b goodG2BSink",
        "CWE590 Free Memory Not on Heap  free int64 t alloca 11 bad",
        "CWE121 Stack Based Buffer Overflow  dest char declare cat 17 bad",
        "CWE690 NULL Deref From Return  struct calloc 67b goodB2GSink",
        "CWE789 Uncontrolled Mem Alloc  malloc char rand 08 bad",
        "CWE124 Buffer Underwrite  char alloca memcpy 18 bad",
        "goodB2G1",
        "CWE126 Buffer Overread  wchar t declare memcpy 64b goodG2BSink",
        "CWE78 OS Command Injection  char connect socket system 14 bad",
        "CWE78 OS Command Injection  char console execl 01 bad",
        "goodG2B1",
        "CWE123 Write What Where Condition  connect socket 22 badSource",
        "CWE789 Uncontrolled Mem Alloc  malloc char fgets 10 bad",
        "CWE457 Use of Uninitialized Variable  struct array malloc partial init 13 bad",
        "CWE789 Uncontrolled Mem Alloc  malloc char connect socket 09 bad",
        "CWE124 Buffer Underwrite  malloc wchar t loop 53d goodG2BSink",
        "goodB2G1Sink",
        "goodG2B",
        "CWE665 Improper Initialization  wchar t ncat 21 bad",
        "goodG2B",
        "CWE121 Stack Based Buffer Overflow  src char declare cat 52c goodG2BSink",
        "CWE401 Memory Leak  wchar t calloc 15 bad",
        "CWE690 NULL Deref From Return  int calloc 12 bad",
        "CWE427 Uncontrolled Search Path Element  wchar t console 17 bad",
        "goodG2B",
        "goodG2B1",
        "goodB2G",
        "CWE475 Undefined Behavior for Input to API  wchar t 10 bad",
        "CWE122 Heap Based Buffer Overflow  c dest char cat 02 bad",
        "CWE690 NULL Deref From Return  int calloc 54 bad",
        "goodG2B2",
        "goodB2G2",
        "goodG2B2",
        "CWE121 Stack Based Buffer Overflow  CWE193 wchar t declare cpy 67b goodG2BSink",
        "CWE127 Buffer Underread  char alloca loop 63b badSink",
        "CWE121 Stack Based Buffer Overflow  CWE805 char declare loop 64b goodG2BSink",
        "goodB2GSink",
        "goodG2B2",
        "goodG2B1",
        "CWE427 Uncontrolled Search Path Element  char connect socket 04 bad",
        "CWE690 NULL Deref From Return  int64 t realloc 42 bad",
        "goodG2B2",
        "CWE427 Uncontrolled Search Path Element  wchar t file 10 bad",
        "CWE665 Improper Initialization  wchar t ncat 54e badSink",
        "CWE121 Stack Based Buffer Overflow  dest char declare cat 52 bad",
        "CWE121 Stack Based Buffer Overflow  dest char alloca cat 41 badSink",
        "CWE127 Buffer Underread  char declare memcpy 17 bad",
        "CWE426 Untrusted Search Path  wchar t popen 17 bad",
        "CWE665 Improper Initialization  wchar t ncat 05 bad",
        "CWE122 Heap Based Buffer Overflow  c dest char cat 68b badSink",
        "CWE761 Free Pointer Not at Start of Buffer  char file 51 bad",
        "CWE690 NULL Deref From Return  char calloc 31 bad",
        "CWE758 Undefined Behavior  struct pointer alloca use 07 bad",
        "CWE590 Free Memory Not on Heap  free int alloca 08 bad",
        "CWE761 Free Pointer Not at Start of Buffer  char file 63 bad",
        "CWE127 Buffer Underread  char alloca loop 67b badSink",
        "CWE401 Memory Leak  twoIntsStruct malloc 61b badSource",
        "CWE758 Undefined Behavior  int pointer malloc use 07 bad",
        "CWE134 Uncontrolled Format String  char connect socket fprintf 05 bad",
        "CWE690 NULL Deref From Return  char malloc 14 bad",
        "CWE123 Write What Where Condition  listen socket 52 bad",
        "goodG2B",
        "CWE127 Buffer Underread  malloc wchar t loop 64b goodG2BSink",
        "goodG2B1",
        "CWE680 Integer Overflow to Buffer Overflow  malloc fscanf 06 bad",
        "goodG2B2",
        "CWE124 Buffer Underwrite  char alloca memmove 64b goodG2BSink",
        "CWE122 Heap Based Buffer Overflow  c dest wchar t cpy 54 bad",
        "goodG2B",
        "CWE124 Buffer Underwrite  char alloca ncpy 41 bad",
        "goodG2B1Source",
        "CWE122 Heap Based Buffer Overflow  c CWE193 char memmove 22 goodG2B2Source",
        "goodG2B1",
        "CWE761 Free Pointer Not at Start of Buffer  char console 66b badSink",
        "CWE690 NULL Deref From Return  int calloc 32 bad",
        "CWE401 Memory Leak  struct twoIntsStruct malloc 53 bad",
        "CWE665 Improper Initialization  wchar t cat 66 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t alloca cpy 63b badSink",
        "CWE665 Improper Initialization  char cat 41 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t alloca cpy 52 bad",
        "CWE122 Heap Based Buffer Overflow  c dest wchar t cpy 15 bad",
        "goodG2B",
        "good2",
        "CWE127 Buffer Underread  char alloca memcpy 67b badSink",
        "CWE758 Undefined Behavior  char malloc use 11 bad",
        "goodG2B2",
        "goodG2B2",
        "goodG2B",
        "CWE789 Uncontrolled Mem Alloc  malloc wchar t connect socket 61b badSource",
        "CWE122 Heap Based Buffer Overflow  c CWE806 char ncpy 51b goodG2BSink",
        "goodG2B",
        "CWE124 Buffer Underwrite  char alloca memmove 06 bad",
        "CWE665 Improper Initialization  wchar t cat 66b badSink",
        "CWE401 Memory Leak  struct twoIntsStruct malloc 13 bad",
        "CWE606 Unchecked Loop Condition  wchar t connect socket 15 bad",
        "goodG2B1",
        "goodB2G1",
        "CWE789 Uncontrolled Mem Alloc  malloc char rand 22 badSink",
        "goodG2B",
        "CWE510 Trapdoor  hostname based logic 14 bad",
        "CWE401 Memory Leak  strdup char 12 bad",
        "goodG2B",
        "goodG2B2",
        "goodG2B",
        "goodG2B1",
        "CWE401 Memory Leak  twoIntsStruct realloc 61 bad",
        "CWE121 Stack Based Buffer Overflow  dest wchar t declare cat 66b badSink",
        "CWE401 Memory Leak  twoIntsStruct realloc 44 bad",
        "CWE126 Buffer Overread  char declare memmove 34 bad",
        "good2",
        "CWE126 Buffer Overread  malloc char loop 09 bad",
        "CWE123 Write What Where Condition  connect socket 09 bad"
    ]
}